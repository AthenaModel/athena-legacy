<<manpage {athena(1) athena_export(1)} "Athena Export Tool">>

<<section SYNOPSIS>>

<<itemlist>>

<<section DESCRIPTION>>

<<deflist program>>

<<defitem {athena export} {athena export <i>scenario</i> [<i>xmlfile</i>]}>>

<</deflist program>>

Given a <i>scenario</i> file, <<xref athena_export(1)>> exports the
contents of the file's permanent SQL tables as XML text (see
<<xref "XML Schema">> for details).  The XML text is written to
standard output by default, or to the named <i>xmlfile</i>.<p>

The XML text can be imported back into a scenario file using
<<xref athena_import(1)>>.<p>

<<subsection "XML Schema">>

There is no official XML DTD for this format; however, the schema
is straightforward:<p>

<pre>
    &lt;database dbschema="<i>version</i>"&gt;
        &lt;table name="<i>thetable</i>"&gt;
            &lt;row&gt;
                &lt;column name="<i>thecolumn</i>"&gt;
                value
                &lt;/column&gt;
            &lt;/row&gt;
        &lt;/table&gt;
    &lt;/database&gt;
</pre>

The exported text is comprised of a single
<code>&lt;database&gt;</code> element containing one
<code>&lt;table&gt;</code> element per exported table.  Each
<code>&lt;table&gt;</code> element contains one
<code>&lt;row&gt;</code> per row, and each
<code>&lt;row&gt;</code> element contains one
<code>&lt;column&gt;</code> element per column.  This element,
naturally, contains the column's value.<p>

The <i>version</i> is the SQLite3 database's "PRAGMA user_version";
this serves to indicate the version of the Athena SQL schema.<p>

Binary data (e.g., map imagery) is written out as a hexadecimal
string.<p>

<<section AUTHOR>>

Will Duquette<p>

<<section HISTORY>>

New application.

<</manpage>>





