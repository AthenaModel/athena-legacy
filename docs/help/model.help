# -*-Tcl-*-
#-----------------------------------------------------------------------
# TITLE:
#    model.help
#
# AUTHOR:
#    Will Duquette
#
# DESCRIPTION:
#    Athena help(5) file: Athena Models
#
#-----------------------------------------------------------------------


page / model "Athena Model Reference" {
    <<title>>

    The Athena simulation contains a number of specific models, which
    are divided into the following major areas.

    <<childlinks>>

    Full details of each model are contained in the Athena Analyst's
    Guide, delivered with the Athena Software.
}


# model parent slug title text
#
# parent   The parent path
# slug     The page slug, e.g., "ground".
# title    The full name of the model, e.g., "Ground".
# text     The documentation of the model.
#
# Defines a help page for the model.

proc model {parent slug title text} {
    page $parent $slug $title "<<model.header>>\n\n$text"
}

# Formats the title for a model
macro model.header {} {
    |<--
    [mktitle normal "Model" [pageinfo title] ""]
}

#=======================================================================
# Ground Model

model /model ground "Ground" { 
    Athena's Ground model is responsible for defining and maintaining
    the Athena <<term playbox>>, including many of the things that
    take place within it.  The Ground model includes the <<term nbhood>>s, 
    <<term group>>s, <<term unit>>s, <<term ensit>>s, and so forth.
    Most of the user's interactions with the Athena models take place
    through one or another aspect of the Ground model.<p>

    The Ground model includes the following sub-models:<p>

    <<childlinks>>
}

#-----------------------------------------------------------------------

model /model/ground force "Force Analysis" { 
    Some <<term nbhood>>s are safer to be in than others; and this
    depends largely on who you are and who is in the neighborhood with
    you.  Athena analyzes the groups and units present in the
    neighborhood, and the relationships between them, assessing the
    amount of force each group can bring to bear and the amount of
    force the group's enemies (if any) can bring to bear against it.
    A group's <<term security>> depends on this balance of forces, and
    also on the <<term volatility>> of the neighborhood.  The more
    strongly opposed forces in the neighborhood, the higher the
    volatility.<p>

    Volatility can be decreased by bringing enough force to dominate
    the neighborhood; this will also greatly improve the security of
    the dominating force at the expense of that force's enemies.<p>

    Security affects the <<cref /model/ground/activity>> model; some
    activities  
    cannot be performed unless the group has adequate security.  It
    also affects the <<cref /model/ground/aam>>.<p>

    Group security and volatility are displayed on the
    <<tab Neighborhoods/Security>>.  The force analysis model depends
    on the <<parmdb force>> model parameters.<p>
}


model /model/ground activity "Group Activities" {
    The user can station force and organization <<term group>> personnel in
    <<term nbhood>>s by setting their force levels on the
    <<tab Groups/Personnel>>.  Then, he can schedule
    and prioritize activities for these personnel 
    (and for resident civilians) on the
    <<tab Schedule>>.<p>

    Each <<term morning>>, the activities scheduled for the day are staffed
    in priority order from the available pool of personnel.  Athena
    automatically creates units for each staffed activity, along with
    a "base" unit for any remaining personnel.<p>

    Each <<term evening>> the Group Activities model
    analyzes the activities performed by each group
    in each neighborhood, and determines the following things:<p>

    <ul>
    <li> How many of the assigned personnel are actually trying to perform
         the activity at any given time, based on the number of 
         shifts defined for the activity.
    <li> How many of the actual personal are effectively performing
         the activity, given the group's <<term security>> and the
         activity's security requirement.
    <li> The group's <<term coverage>> for this activity in this neighborhood.
    </ul>

    When an activity's coverage is non-zero, an <i>activity
    situation</i> is created; this situation is a 
    <<term driver>> that affects civilian attitudes via the
    <<cref /model/attitude/dam>>.<p>
    
    The current activities and resulting activity situations are
    displayed on the <<tab Neighborhoods/Activity>> and
    <<tab Neighborhoods/ActSits>> respectively.  The Group
    Activities model depends on the <<parmdb activity>> model
    parameters.
}

#-----------------------------------------------------------------------

model /model/ground aam "Athena Attrition Model" {
    The Athena user can place <<term frcgroup>>s in conflict in
    <<term nbhood>>s by defining the appropriate 
    <<term roe>>s.  Combat will ensue, and casualties will result, as
    determined by the Athena Attrition Model (AAM).<p>

    AAM periodically assesses attrition to the force group
    <<term unit>>s, as determined by the 
    <<parmdb strategy.ticksPerTock>> parameter (nominally, every 7 
    <<term day>>s).  Combat results in attrition to the attacking and
    defending force units, and might also result in civilian
    collateral damage.  Attrition can also occur magically, via the
    <<cref /order/attrit>>.  The further effects of the casualties are
    determined by the <<cref /model/attitude/dam>>.<p>

    Note that magic attrition can take place at any time, but the
    resulting attitude changes are saved and assessed along with those
    resulting from the next attrition assessment.<p>

    When a <<term group>> is attrited in a neighborhood, the attrition
    is spread evenly across the group's <<term unit>>s in proportion
    to their size.<p>

    The decrease in personnel resulting from attrition
    can be seen in the <<tab Map>>, the 
    <<tab Groups/Personnel>>, the <<tab Groups/Units>>, and the
    <<tab Demog>>.<p>

    The Athena Attrition Model
    depends on the <<parmdb aam>> model
    parameters.<p>
}


model /model attitude "Attitudes" { 
    The Attitudes model is responsible for tracking the
    <<term attitude>>s 
    (<<term satisfaction>> and <<term cooperation>>) of the 
    <<term civgroup>>s present in the 
    <<term playbox>>, and for making them change in response to
    events and situations (<<term driver>>s) occuring in the
    other models.  It consists of the following sub-models:<p>

    <<childlinks>>
}

model /model/attitude gram "GRAM" {
    The <i>Generalized Regional Attitude Model</i>, or GRAM, is that
    part of Athena which is responsible for tracking the
    <<term attitude>>s of the various <<term group>>s within the
    <<term playbox>>, and for making attitude changes determined by
    the <<cref /model/attitude/dam>> play out over time across the playbox.<p>
}

model /model/attitude dam "Driver Assessment Model" {
    The Driver Assessment Model (DAM) is responsible for assessing the
    implications of events and situations (<<term driver>>s) that
    occur in Athena's other models as the simulation advances time.  It
    consists of a large number of rule sets; each rule set is
    responsible for assessing the implications of one particular kind
    of driver.  The rule sets are documented in great detail in the
    Athena Rules document, delivered with the software.  The rule sets
    are often referred to as the  <<term damrules>>.<p>

    Each time a rule set is triggered, and a rule fires, the effect of
    the rule is output as a rule firing report.  These reports can be
    browsed on the <<tab Reports>>.<p>

    Magic attitude inputs, as entered using the
    <<cref /order/mad/sat>> and <<cref /order/mad/coop>>, are handled trivially by
    DAM, via the <b>ADJUST</b> and <b>MAGIC</b> rule sets.  These rule
    sets contain no actual rules, but rule firing reports are
    presented to the user as though they did.<p>

    At present, the DAM rule sets only assess changes to 
    <<term satisfaction>> and <<term cooperation>> and give the
    resulting inputs to <<cref /model/attitude/gram>>; as Athena evolves,
    it is expected that the rule sets will acquire additional duties.<p>

    The Driver Assessment Model
    depends on the <<parmdb dam>> model
    parameters.<p>

}

model /model demog "Demographics" {
    The Demographics model is responsible for tracking civilian
    demographics, breaking down the civilian population into the 
    subgroups required by the other Athena models.  For example, 
    the Demographics model determines the number of 
    <<term consumer>>s and <<term worker>>s in each neighborhood and
    in the <<term local_economy>> as a whole, as well as the size 
    of the <<term sapop>>.<p>

    In addition, the Demographics model tracks changes to these
    figures due to attrition; it also can create <<term demsit>>s in 
    response to conditions (i.e., high unemployment in a
    neighborhood).

    Note that you cannot create civilians magically.  You start with a 
    particular population, and civilians lost to attrition are simply
    gone.<p>

    The population of a civilian group cannot be reduced
    to 0; at least one person will remain.  This constraint comes from 
    <<cref /model/attitude/gram>>, which will not allow an existing
    group to vanish.<p>

    The demographics of the playbox, as they are currently tracked,
    are displayed on the <<tab Demog>>.  See that help page for a
    description of the field values.<p>

    The Demographics model
    depends on the <<parmdb demog>> model
    parameters.<p>
}

#=======================================================================
# Economics Model

model /model econ "Economics" { 
    The Economics model computes the Gross Domestic Product, Consumer
    Price Index, Unemployment Rate, and so forth for the 
    <<term local_economy>>.  The model is driven by an initial
    <<term calibration>>, the number of <<term consumer>>s, the 
    number of <<term worker>>s, and the production <<term "capacity">>
    of the local economy.<p>

    The economic inputs and outputs can be seen on the
    <<tab Econ>>.<p>

    The economy consists of three <<term sector "sectors">>:<p>

    <ul>
    <li> <b>goods:</b> Production of goods and services.
    <li> <b>pop:</b> Labor and consumption by the population.
    <li> <b>else:</b> Everything else.
    </ul><p>

    See the <i>Athena Analyst's Guide</i> for more information.<p>

    The Economics model depends on the <<parmdb econ>> model
    parameters.<p>
}



