# -*-tcl-*-
#-----------------------------------------------------------------------
# TITLE:
#    glossary.help
#
# AUTHOR:
#    Will Duquette
#
# DESCRIPTION:
#    Athena Help Documentation: Glossary.  Terms defined in the
#    glossary have an ID like "term.<tag>", and are referenced
#    using the <<term <tag> >> macro.
#
#    This file is included into athena.help.
#
#-----------------------------------------------------------------------

page glossary "Glossary" {} {
    <<title>>
    This page describes terms and concepts used by the
    Athena models and software.<p>

    <<childlinks>>
}

# term tag term text
#
# tag      The term's tag, e.g., "mapref", used in references.
# term     The full term, e.g., "map reference string".
# text     The documentation of the term.
#
# Defines a help page for the term.

proc term {tag term text} {
    set text "<<term.header>>\n\n$text"
    page term.$tag $term "glossary" $text
}

# Formats the title for a glossary term
macro term.header {} {
    |<--
    [mktitle normal "Glossary" [pageinfo title] ""]
}

#-----------------------------------------------------------------------

term activity "activity" {
    An <i>activity</i> is an action that a <<term group>> can
    perform in a <<term nbhood>>.  Activities are scheduled on the
    <<tabref Plan/Schedule>> and are staffed from available personnel
    each <<term morning>>.  Personnel assigned to an activity
    appear as a <<term unit>> on the <<tabref Map>>; the unit is said to 
    perform the activity. There are different sets of activities for the
    different group types: <<term frcgroup>>s, <<term orggroup>>s, and 
    <<term civgroup>>s.  For the full list of activities, and the
    meaning and effect of each, see the <i>Athena Rules</i> document, which
    is delivered with the software.
}


#-----------------------------------------------------------------------

term attitude "attitude" {
    An <i>attitude</i> of a particular <<term group>> toward
    something, as tracked by <<model gram>>.  Attitudes include
    group <<term satisfaction>> and the <<term cooperation>> of
    <<term civgroup>>s with <<term frcgroup>>s.  At present
    group <<term relationship>>s are static, but it is likely that
    they will become dynamic at some time in the future.
}


#-----------------------------------------------------------------------

term bgerror "bgerror" {
    When Athena encounters an unexpected run-time error, it does not
    usually halt execution.  Instead, the error and a complete stack
    trace are written to the <<tabref Log>>, and the user is
    notified.  This is called a <i>background error</i>, or 
    <i>bgerror</i> for short.<p>

    It's usually wise to save the scenario under a new name after a 
    bgerror, and then restart the application.  However, the only 
    consequence of most bgerrors is that a particular feature is 
    unavailable, or unavailable in certain circumstances.<p>

    Background errors should be reported to the development team.  The
    report should include the following items, insofar as this is
    possible given security considerations:<p>

    <ul>
    <li> The bgerror and stack trace from the debugging log.  This is
         the text with the orange background.
    <li> The complete text of the log file, if possible.  Select
         <b>detail</b> on the <b>Log</b> pulldown on the Log Browser
         toolbar before cutting and pasting the log text.
    <li> A description of what was happening immediately before the
         bgerror occurred (if known).
    <li> A detailed procedure for reproducing the error, if known.
    </ul><p>

    It is often wise to contact the development team with the bare
    fact of the error prior to gathering all of the information, in
    case it is a known problem.<p>
}

#-----------------------------------------------------------------------

term calibration "calibration" {
    Athena's models can be calibrated for a particular setting by 
    tweaking Athena's <<cref parmdb>>.  This is particularly important
    for the <<model econ>> model; see the <i>Athena Analyst's
    Guide</i> for the steps to calibrate the economy.
}

#-----------------------------------------------------------------------

term calpattern "calendar pattern" {
    A <i>calendar pattern</i> determines how some 
    <<term activity>> is
    scheduled and staffed over an interval of time.  A pattern
    is specified as a token, possibly followed by modifiers.
    The following patterns are available:<p>

    <<topiclist>>

    <<topic "daily">>
    The activity is scheduled to occur every day during the interval,
    and is restaffed with fresh personnel every day.
    <</topic>>

    <<topic "once">>
    The activity is scheduled to occur every day during the interval, 
    but is staffed only once, on the first day of the interval.  The
    assigned personnel remain assigned to the given activity until the
    the interval ends or the activity is cancelled or modified.
    <</topic>>

    <<topic "byweekday&nbsp;<i>dayname...</i>">>
    The activity is scheduled on the specified week days.  The day
    names are specified as  <b>Su</b>, <b>M</b>, <b>T</b>, <b>W</b>,
    <b>Th</b>, <b>F</b>,  <b>Sa</b>.  For example, to specify that
    an activity occurs on Monday, Wednesday, and Friday, the pattern
    is<p>

    <pre>
    byweekday M W F
    </pre>
    <</topic>>

    <</topiclist>>
}


#-----------------------------------------------------------------------

term capacity "capacity" {
    Each <<term sector>> in the <<model econ>> model has a maximum
    size, or <i>capacity</i>.  The size of the <b>pop</b> sector is 
    limited by the size of the labor force, for example.<p>

    Usually when we speak of capacity, however, we mean the
    capacity of the <b>goods</b> sector: the ability of the economy 
    to produce goods and services.  This capacity is set when the
    scenario is locked and can then be increased or decreased 
    <<term nbhood>> by neighborhood by setting the Production 
    Capacity Factor (PCF) on the <<tabref Econ/Capacity>>.
}

#-----------------------------------------------------------------------

term cause "cause" {
    Every <<model gram>> <<term driver>> has an associated
    <i>cause</i>.  All inputs to GRAM for the driver will be tagged
    with this cause; for example, the <b>DISEASE</b> and
    <b>EPIDEMIC</b> <<term ensit>>s both have the cause
    <b>SICKNESS</b>.<p>

    The purpose of causes is to prevent multiple inputs of a similar
    type from piling on in an unreasonable way.  For example, suppose
    that there is a serious epidemic in neighborhood A which then
    spreads to nearby neighborhood B.  While the epidemic remained in
    A, the folks in B were somewhat unhappy about it (because it might
    spread, and because they care about some or all of the people in
    A).  Once the epidemic spreads to B, though, the people in B have
    their own problems; it's unlikely to expect them to feel all that
    bad about the situation in neighborhood A.<p>

    Next, consider neighborhood C, which is near to both A and B.
    The spread of the epidemic to B might heighten their alarm
    somewhat, but it shouldn't double their alarm.<p>

    In these cases, where there are multiple inputs to GRAM for a
    given curve (say, group G's SFT in neighborhood C), the smaller
    inputs get swamped by the larger rather than adding to them.<p>

    The cause associated with each kind of driver can be found in the
    Athena Rules document, delivered with the software.
}

#-----------------------------------------------------------------------

term civgroup "civilian group" {
    A <i>civilian <<term group>></i> is an identifiable collection of people
    who reside in a <<term nbhood>>.  The members of a civilian
    group will share one or more characteristics that make them of
    interest to the analyst: ethnicity, religious or political
    affiliation, and so forth.<p>

    Civilian groups are created on the 
    <<tabref Groups/CivGroups>>, and manipulated using the
    <<cref GROUP:CIVILIAN:>>.
}

#-----------------------------------------------------------------------

term concern "concern" {
    Athena tracks the <<term satisfaction>> of 
    <<term civgroup>>s with respect to a number
    of <i>concerns</i>, also known as <i>soft factors</i>.<p>

    Civilians have the following four concerns; note that the
    <<term saliency>> of a given concern will typically differ
    from one <<term civgroup>> to another.<p>

    <<topiclist>>

    <<topic "Autonomy (AUT)">>
    Does the group feel it can maintain order and govern itself with a
    stable government and a viable economy?
    <</topic>>

    <<topic "Safety (SFT)">>
    Do members of the group fear for their lives, either from hostile
    attack or from collateral damage from force activities?  This fear
    includes environmental concerns such as life-threatening disease,
    starvation, and dying of thirst.
    <</topic>>

    <<topic "Culture (CUL)">>
    Does the group feel that its culture and religion, including
    cultural and religious sites and artifacts, are respected or
    denigrated?
    <</topic>>

    <<topic "Quality of Life (QOL)">>
    QOL includes the physical plants that provide services, including
    water, power, public transportation, commercial markets,
    hospitals, etc., and those things associated with these services,
    such as sanitation, health, education, employment, food, clothing,
    and shelter.
    <</topic>>

    <</topiclist>><p>
}

#-----------------------------------------------------------------------

term consumer "consumer" {
    A <i>consumer</i> is a member of the civilian population who
    consumes goods produced by the <<term local_economy>>.
    Consumers are distinguished from members of the
    <<term sapop>> who live off of
    their own land and do not participate in the cash economy.<p>

    <<term worker "Workers">> are a subset of <<term consumer>>s.<p>
}

#-----------------------------------------------------------------------

term cooperation "cooperation" {
    A cooperation level is an <<term attitude>> that represents
    the likelihood that a member of a <<term civgroup>> will give
    information to a member of a particular <<term frcgroup>>.
    Cooperation levels are represented using the following scale:<p>

    <<::simlib::qcooperation html>><p>

    Athena creates the required cooperation curves automatically as 
    groups are created.  The cooperation between groups
    is viewed and modified on the <<tabref Attitudes/Cooperation>>
    using the <<cref COOP:>> and <<cref MAD:COOP:>>.  Cooperation can
    also be changed by <<term driver>>s that trigger Athena's
    <<term damrules>>.
}

#-----------------------------------------------------------------------

term coverage "coverage" {
    Coverage is a measure of the fraction of a <<term nbhood>> that
    is affected by something--a group <<term activity>>, an
    <<term ensit>>, etc.--expressed as a number between 0.0 and 1.0.
    It is a common input to the <<term damrules>>.
}



#-----------------------------------------------------------------------

term damrules "DAM Rules" {
    Athena assesses the affect of simulation <<term driver>>s using a
    collection of rule sets that belong to Athena's 
    <<model dam>> (DAM); the rule sets are collectively known as the
    <i>DAM Rules</i>.  The full set of rules and their effects are
    defined in the Athena Rules document, delivered with the software.
}

#-----------------------------------------------------------------------

term demsit "demographic situation" {
    A <i>demographic situation</i> is an on-going situation involving
    the residents of a neighborhood as detected by the 
    <<model demog>> model.  It is an attitude <<term driver>>.
    At present, there is only one type of demographic situation, the
    Unemployment (UNEMP) situation; see the <i>Athena Rules</i>
    document for details.<p>

    Existing demographic situations can be seen on the 
    <<tabref Neighborhoods/DemSits>>.
}

#-----------------------------------------------------------------------

term driver "driver" {
    <b>1.</b> Any event or situation occuring in the
    <<term playbox>> that causes a change in the <<term attitude>>s
    of members of one or more <<term civgroup>>s.<p>

    Examples of drivers include casualties to 
    <<term civgroup>>s, the presence
    and activities of <<term frcgroup>> in <<term nbhood>>s, 
    <<term ensit>>s, <<term demsit>>s, and <<term mad>>s.<p>

    <b>2.</b> A <<term mad>>.<p>

    <b>3.</b> A <<model gram>> driver ID.
}

#-----------------------------------------------------------------------

term effects_delay "effects delay" {
    The delay, in days, before the effects of a <<term driver>>
    in <<term nbhood>> <i>n</i> are felt in neighborhood <i>m</i>;
    closely related to <<term proximity>>.<p>
    
    A neighborhood always has a delay of 0.0 days with itself; 
    <b>NEAR</b>, <b>FAR</b>, and <b>REMOTE</b> neighborhoods may have
    longer delays.  Note that the delay need not be symmetric.<p>

    The effects delay between two neighborhoods is edited on the
    <<tabref Neighborhoods/Relationships>>, using the
    <<cref NBHOOD:RELATIONSHIP:>>.
}

#-----------------------------------------------------------------------

term ensit "environmental situation" {
    An <i>environmental situation</i> is an on-going situation within
    a <<term nbhood>>; it is an attitude <<term driver>>, and affects
    all of the people living in the neighborhood.  It may also affect
    surrounding neighborhoods.  For a complete list of situation
    types, and the effect of each, see the <i>Athena Rules</i> document
    delivered with the software.<p>

    <b>Note:</b> Athena tracks the neighborhood in which each 
    environmental situation is
    located.  The precise location of a situation within a neighborhood
    is meaningless.<p>

    Environmental situations can be created and positioned using the 
    controls on the <<tabref Map>>; the full set of situations
    can browsed and edited on the 
    <<tabref Neighborhoods/EnSits>>, using the 
    <<cref SITUATION:ENVIRONMENTAL:>>.  
}

#-----------------------------------------------------------------------

term evening "evening" {
    The end of a simulated day, when the current state of affairs is
    assessed.  See <<term tick>>.
}

#-----------------------------------------------------------------------

term filterbox "filter box" {
    <img src="filterbox"><p>

    The various Athena data browsers all feature a filter box, which
    is a control used to limit what is shown in the browser to some
    <i>ad hoc</i> set chosen by the user.<p>

    For example, enter "FRED" in the filter box to show only rows that
    contain the name "FRED" somewhere in the row.  To see all of the
    rows again, click the "circle-X" icon at the right-hand end of the
    filter box.<p>

    The filter box's behavior can be modified in two ways.  First, you
    can change the criteria that determines a "match"; in
    every case, what's being matched is some portion of the text on
    the row.  Second, you can
    tell it to display only those rows that <b>do not</b> match.<p>

    To modify the filter box's behavior, click on the "sieve" icon at
    the left-hand of the filter box.  This pops up a menu with the
    following choices:<p>

    <<topiclist "Menu Item" "Description">>

    <<topic "Exact">>
    This item and the three that follow determine how the filter text
    is used.<p>

    Selects rows that match the filter text exactly; filters when the
    user presses Enter. Choose this option if <b>Incremental</b> is
    too slow.
    <</topic>>

    <<topic "Incremental">>
    <b>Default.</b> Selects rows that match the filter text exactly;
    filters as the user types the filter text.
    <</topic>>

    <<topic "Wildcard">>
    Selects rows that match the filter text, using "*" as a wildcard
    character; filters when the user presses Enter.
    <</topic>>

    <<topic "Regexp">>
    Selects rows that match a regular expression; filters when the user
    presses Enter.
    <</topic>>

    <<topic "Ignore Case">>
    <b>Default.</b> If this item is selected, all matches ignore case.
    Deselect this option for case-sensitive matching.
    <</topic>>

    <<topic "Include Matches">>
    <b>Default.</b> If this item is selected, rows that match the filter
    text will be displayed.
    <</topic>>

    <<topic "Exclude Matches">>
    If this item is selected, rows that <b>do not</b>
    match the filter text will be displayed.
    <</topic>>

    <</topiclist>>
}

#-----------------------------------------------------------------------

term frcgroup "force group" {
    A <i>force <<term group>></i> is a group or organization that
    exists to implement policy through the application of force.
    Examples include the regular army, the local police, and
    organized crime.<p>

    Force groups are created on the 
    <<tabref Groups/FrcGroups>>, and manipulated using the
    <<cref GROUP:FORCE:>>.  In order to apply force, force group
    personnel must be assigned to neighborhoods on the 
    <<tabref Plan/Force Levels>> and assigned to
    <<term activity "activities">> on the <<tabref Plan/Schedule>>.
}

#-----------------------------------------------------------------------

term group "group" {
    In Athena, a <i>group</i> is a collection of people with some
    shared mission, origin, organization or goals.  There are three
    kinds of groups in Athena:<p>

    <ul>
    <li> <<term civgroup>>s, which reside in 
         <<term nbhood>>s as <<term civgroup>>s.
    <li> <<term frcgroup>>s
    <li> <<term orggroup>>s
    </ul>
}

#-----------------------------------------------------------------------

term local_economy "local economy" {
    Athena's <<model econ>> model concerns the economy of a region: a
    single country, part of that country, or perhaps several small
    countries taken together.  Athena's <<term nbhood>>s can be 
    "local", i.e., part of the economic region of interest, or
    non-local, outside the region.  The <i>local economy</i> is then
    the economy of this local region of interest.
}

#-----------------------------------------------------------------------

term loglevel "log level" {
    Every entry written to the debugging log has an associated <i>log
    level</i>, as follows:<p>

    <ul>
    <li> <b>fatal</b>:    Used when the program is about to halt.
                          Displayed with a red background.
    <li> <b>error</b>:    Used only for <<term bgerror>>s. Displayed
                          with an orange background.
    <li> <b>warning</b>:  Used when a potential problem is
                          noticed. Displayed with a yellow background.
    <li> <b>normal</b>:   Normal informational message.
    <li> <b>detail</b>:   Detailed informational message.
    <li> <b>debug</b>:    Debugging message, low-level details.
    </ul><p>

    Note that <b>debug</b> messages are only written to the log when
    enabled by the developer.  By default, the <<tabref Log>> shows
    <b>normal</b> messages of severity <b>normal</b> and above.
}

#-----------------------------------------------------------------------

term mad "magic attitude driver" {
    A <i>magic attitude driver</i> (MAD) is a "magic" 
    <<term driver>> (event or situation) defined by the user; it
    affects attitudes in any way the user determines, via the 
    <<cref MAD:>>.<p>

    Browse, create, and edit MADs on the 
    <<tabref Attitudes/Magic Attitude Drivers>>.
}


#-----------------------------------------------------------------------

term mapref "map reference string" {
    A map reference string is a six-character string that represents
    a point on the scenario's map.  It has the form
    <b><i>AnnAnn</i></b> where <i>A</i> is a letter from "A" to "K"
    (excluding "I") and <i>n</i> is a digit, "0" to "9".<p>

    <h2>Background</h2>

    Athena is designed to use any map image the analyst may have on
    hand, from a high-quality scan of a printed map to a snapshot of a
    map hand-drawn on a piece of paper.  Consequently, Athena cannot
    use geographic coordinates, as it cannot assume that maps are
    properly geo-referenced.<p>

    Instead, Athena uses X,Y coordinates in the range 0 to 999 for
    both axes.  The origin is at the upper left; positive X runs from
    left to right and positive Y from top to bottom.<p>

    These numeric X,Y coordinates are used internally; for input and
    output they are converted to the form shown above.  For example,
    the location (123,456) has reference string "B23E56".<p>

    Note that X and Y coordinates are scaled identically.  The lower
    right corner of a map 1000 pixels wide by 500 pixels high would
    have numeric map coordinates (999,499) and map reference string
    "K99E99".
}

#-----------------------------------------------------------------------

term mood "mood" {
    <b>1.</b> A <<term civgroup>>'s
    <<term satisfaction>> averaged across its 
    <<term concern>>s, and taking <<term saliency>> into account.  In
    other words, how satisfied or dissatisfied the group is with
    things in general.<p>

    <b>2.</b> A <<term nbhood>>'s mood, i.e., the satisfaction of
    all groups in the neighborhood with things in general.
}

#-------------------------------------------------------------------

term morning "morning" {
    The beginning of a simulated day, when scheduled orders are
    executed and <<term activity "activities">> are staffed.  
    See <<term tick>>.
}


#-----------------------------------------------------------------------

term nbhood "neighborhood" {
    The Athena <<term playbox>>, or region of interest, is divided up
    into <i>neighborhoods</i>.  A neighborhood is a polygonal area on
    the <<cref using.maps map>> containing <<term civgroup>>s, 
    <<term unit>>s of various kinds, <<term ensit>>s, and so forth.<p>

    Neighborhoods can be created on the 
    <<tabref Map>> during <<cref using.prep>>, and manipulated
    on the <<tabref Neighborhoods/Neighborhoods>> and using the
    <<cref NBHOOD:>>.
}

#-------------------------------------------------------------------

term noon "noon" {
    The middle of a simulated day, when (if the simulation enters
    the <b>PAUSED</b> state) the user has the opportunity to enter
    <<cref orders>>.  See <<term tick>>.
}

#-----------------------------------------------------------------------

term order "order" {
    Inputs to the Athena scenario and models are presented to Athena
    as <<cref orders>>.<p>

    Orders may be sent interactively by a variety
    of methods; such orders can usually be 
    <<menuref Edit/Undo undone>>.  The complete history of orders
    sent interactively to Athena is shown on the 
    <<tabref Orders/Sent>>.<p>

    In addition, orders can be scheduled in advance.  Scheduled orders are
    execute as time advances, and consequently cannot be undone.  The
    full set of orders that are waiting for execution is shown on the 
    <<tabref Orders/Scheduled>>.
}


#-----------------------------------------------------------------------

term orggroup "organization group" {
    An <i>organization <<term group>></i> is an organization that
    performs work (especially humanitarian relief) in the
    <<term playbox>>.  Organization groups include Non-Governmental
    Organizations (NGOs) such as the Red Cross, Inter-Governmental
    Organizations (IGOs) such as UNESCO, and contractors such as
    Haliburton.<p>

    Organization groups are created on the 
    <<tabref Groups/OrgGroups>>, and manipulated using the
    <<cref GROUP:ORGANIZATION:>>.  In order to work, organization
    group personnel must exist in the <<term playbox>> as <<term unit>>s.
}

#-----------------------------------------------------------------------

term playbox "playbox" {
    The <i>playbox</i> is the region of interest to the analyst in 
    the current scenario, i.e., the region for which
    <<term nbhood>>s are defined.
}


#-----------------------------------------------------------------------

term proximity "proximity" {
    The <i>proximity</i> of one <<term nbhood>> with another is
    expressed as one of the following four values, <b>HERE</b>, 
    <b>NEAR</b>, <b>FAR</b>, and <b>REMOTE</b>, where <b>HERE</b>
    represents the proximity of a neighborhood to itself.<p>

    The attitudes of a <<term civgroup>> can be affected by 
    <<term driver>>s that occur <b>HERE</b> in the same neighborhood; to a
    lesser degree by drivers occuring in a <b>NEAR</b>
    neighborhood, even less by drivers in a <b>FAR</b>
    neighborhood, and not at all by drivers in a <b>REMOTE</b>
    neighborhood.<p>

    The extent to which <b>NEAR</b> and <b>FAR</b> drivers have an
    effect <b>HERE</b> varies from one kind of driver to another.<p>

    Note that proximity is assigned by the analyst, and can take into
    account physical distance, physical obstacles, psychological
    distance, and so forth.  Further, it need not be symmetric:
    neighborhood A might regard neighborhood B as <b>NEAR</b> while B
    regards A as <b>FAR</b>, or even as <b>REMOTE</b>.<p>

    The proximity between two neighborhoods is edited on the
    <<tabref Neighborhoods/Relationships>>, using the
    <<cref NBHOOD:RELATIONSHIP:>>.<p>


    See also <<term effects_delay>>.
}

#-----------------------------------------------------------------------

term relationship "relationship" {
    <b>1.</b> The relationship between two <<term group>>s, expressed
    using the following scale:<p>

    <<::simlib::qrel html>><p>

    Group relationships have effects throughout the Athena models.  
    Every group has a relationship of 1.0 with itself and by default a
    relationship of 0.0 with every other group.  Realistic
    relationships between groups range from +0.6 to -0.3 or -0.4.<p>

    Group relationships are edited on the 
    <<tabref Groups/Relationships>>, using the 
    <<cref RELATIONSHIP:>> orders.<p>

    <b>2.</b> The relationship between two <<term nbhood>>s, expressed
    as a <<term proximity>> and an <<term effects_delay>>.
}

#-----------------------------------------------------------------------

term roe "ROE" {
    In normal military usage, a unit's Rules of Engagement (ROEs) are
    the rules given to them in their orders that determine when they
    may engage the enemy.  In Athena, ROEs apply to a <<term frcgroup>>
    in a <<term nbhood>> and determine when and how the group can 
    engage other groups.  There will be no armed conflict, and hence
    no attrition or civilian casualties, unless the user creates
    the appropriate ROEs.<p>

    There are several kinds of ROE; they are created, browsed, and
    edited on the subtabs of the <<tabref ROE>>.  See the description
    of the <<cref ROE:>> for more details.
}



#-----------------------------------------------------------------------

term saliency "saliency" {
    The <i>saliency</i> of a <<term concern>> to a 
    <<term group>> is the importance of that concern to the group.
    Some groups will value quality of life more than autonomy; for
    others, culture will trump quality of life.  This comes into play
    when computing a group or <<term nbhood>>'s <<term mood>>, and
    when comparing  <<term satisfaction>> levels across groups.<p>
    
    Saliency is represented using the following scale:<p>

    <<::simlib::qsaliency html>>

    A group's saliency for each concern is set on the
    <<tabref Attitudes/Satisfaction>> using the
    <<cref SAT:>>.
}



#-----------------------------------------------------------------------

term satisfaction "satisfaction" {
    A satisfaction level is an <<term attitude>> that
    represents a <<term group>>'s satisfaction with respect to some
    <<term concern>>.  Satisfaction
    levels are represented using the following scale:<p>

    <<::simlib::qsat html>><p>

    Athena creates the required satisfaction curves automatically as 
    groups and <<term nbhood>>s are created.  A group's satisfaction
    is viewed and modified on the <<tabref Attitudes/Satisfaction>>
    using the <<cref SAT:>> and <<cref MAD:SAT:>>.  Satisfaction can
    also be changed by <<term driver>>s that trigger Athena's
    <<term damrules>>.
}

#-----------------------------------------------------------------------

term scenariofile "scenario file" {
    Athena is a document-centric application, rather like a word
    processor or spreadsheet application.  An Athena "document" is
    called an <i>Athena scenario file</i>.  The scenario file contains
    the scenario data, the <<cref using.maps map>> (if any),
    <<cref reports>>, <<term snapshot>>s, and in general everything
    to do with the scenario.<p>

    Most Athena scenario files are in ".adb" format; however, it is
    possible to 
    <<menuref "File/Export as XML..." export>> a scenario as an XML
    file (provided) the simulation is in the <b>Prep</b> <<term state>>.
}


#-----------------------------------------------------------------------

term sector "sector" {
    Athena's Economic Model divides the economy into three sectors:

    <<topiclist>>
    <<topic "goods">>
    Production of goods and services in the local economy, in 
    "Goods Baskets" (GBasket).  The unit of production is
    a basket of goods and services with a price of approximately
    $1.
    <</topic>>

    <<topic "pop">>
    Provision of labor by the population.  The unit of production is
    a work-year of an "average" worker.
    <</topic>>

    <<topic "else">>
    Everything else: imports, exports, etc., in "Else Baskets" (EBasket).
    The unit of production is a basket of goods and services
    traded outside the region.
    <</topic>>
  
    <</topiclist>>
}

#-----------------------------------------------------------------------

term security "security" {
    A <<term group>>'s <i>security</i> is computed by the 
    <<model force>> model.  It is a number that indicates how safe
    members of the group are in a <<term nbhood>>, as opposed to
    how satisfied they are with their safety.  <p>

    Security is represented
    by the following scale:<p>

    <<::projectlib::qsecurity html>>

    A group's security is affected by the <<term volatility>> of the
    neighborhood.
}

#-----------------------------------------------------------------------

term snapshot "snapshot" {
    Each time the user presses the 
    <<cref using.simcontrols "Run Simulation">> button, the
    simulation saves a snapshot of its current <<term state>>.  When the 
    simulation is paused, the user can use the VCR buttons on the
    main toolbar to return to any previous snapshot.  This is called
    being in "snapshot mode".  While in snapshot mode, the user can
    browse the various <<cref tabs>> freely.<p>

    The most important snapshot is that taken at time 0; by 
    returning to this snapshot and "re-entering the time stream", the
    simulation returns to the <<cref using.prep>> state.<p>
}

#-----------------------------------------------------------------------

term state "state" {
    <b>1.</b> The complete state of the simulation at a given time: all
    data associated with the simulation.  This is what is saved in the
    <<term scenariofile>>.<p>

    <b>2.</b> The simulation mode in which Athena is currently operating.
    The Athena simulation can be in one of the following states at
    any given time:<p>

    <ul>
    <li> <b>Prep</b>
    <li> <b>Running</b>
    <li> <b>Paused</b>
    <li> <b>Snapshot</b>
    </ul>

    When a scenario is first created, it is in the <b>Prep</b>, or
    <<cref using.prep>> state.  This is where the most basic entities 
    in the simulation are created: <<term nbhood>>s, <<term group>>s,
    and so forth.<p>

    The simulation remains in the <b>Prep</b> state until the user
    first presses the <<cref using.simcontrols "Run Simulation">>
    button, at
    which time it enters the <b>Running</b> state.  The simulation
    will continue to advance time until it reaches the stop time
    selected by the user, or the user presses the 
    <<cref using.simcontrols "Pause">> button.<p>

    Once the simulation is <b>Paused</b>, the user can once again
    enter <<term order>>s interactively.</p>

    Each time the user presses the Run button, the simulation makes
    a <<term snapshot>>; the user can return to these snapshots using
    the <<cref using.simcontrols>>.  While looking at a snapshot, the
    simulation is in the <b>Snapshot</b> state; orders cannot be
    entered until the user returns to the <b>Prep</b> or <b>Paused</b>
    state.
}

#-----------------------------------------------------------------------

term sapop "subsistence agriculture population" {
    That part of the population that lives by subsistence agriculture,
    whether farming or herding, and hence does not participate in the
    cash economy.  Athena assumes that there is a hard line between
    the subsistence farmers and the <<term consumer>>s, although there
    is certainly some overlap in reality.
}

#-----------------------------------------------------------------------

term tick "tick" {
    Athena measures simulation time in integer ticks; each tick
    represents one day of calendar time.<p>

    Athena does not track any time interval shorter than one day;
    however, it is often convenient to speak of the sequence of
    events during a simulated day in terms of <<term morning>>,
    <<term noon>>, and <<term evening>>:<p>

    Time can be thought to advance at midnight.  After the time
    advance, in the "morning", Athena executes all scheduled orders,
    and staffs <<term activity "activities">> from the available
    personnel.  At "noon", if Athena enters the <b>PAUSED</b> state,
    the user has the opportunity to send <<cref orders>>.  In the
    "evening", the current state of affairs is assessed: 
    <<term security>> and <<term coverage>> are computed, 
    <<model dam>> rules fire, and so forth.  Then, at midnight,
    time advances, and the cycle continues.<p>
    
}

#-----------------------------------------------------------------------

term timespec "time specification string" {
    A time specification string identifies a particular simulation
    time.  It has the form "<i>baseTime</i> +/- <i>offset</i>", where
    the offset is some number of ticks and the base time has one of
    the following forms:<p>

    <ul>
    <li> <b>T0</b>: Time zero, the beginning of the simulation.
    <li> <b>NOW</b>: The current simulation time.
    <li> <b><i>ticks</i></b>: The time as some number of ticks since
         <b>T0</b>.
    <li> <b><i>zulu</i></b>: A <<term zulu>>.
    </ul><p>

    <b>Note:</b> One tick is one day.<p>

    Either the base time or the offset may be omitted.  If the base
    time is omitted, it defaults to <b>NOW</b>; if the offset is
    omitted, it is 0.  For example,<p>

    <ul>
    <li> <b>NOW</b>: The current simulation time.
    <li> <b>NOW+30</b>: 30 ticks (days) from now.
    <li> <b>200000ZFEB10+7</b>: 7 ticks after 20 February 2010.
    <li> <b>-5</b>: Five ticks ago
    <li> <b>+5</b>: Five ticks from now 
    <li> <b>5</b>: Day five.
    </ul>
}

#-----------------------------------------------------------------------

term unit "unit" {
    A <i>unit</i> is a collection of personnel belonging to some
    <<term group>> that can be positioned in the <<term playbox>>
    and displayed on the <<tabref Map>>.<p>

    Units come into existence automatically to represent the
    neighborhood population; to represent force and organization group
    personnel stationed in neighborhoods by the <<cref PERSONNEL:>>; 
    and also to represent personnel assigned to particular activities
    by the <<cref ACTIVITY:>>.  Thus, every unit belongs to some group
    and represents personnel drawn from some particular neighborhood.

    Each unit is tied to a particular neighborhood and can be moved
    about within that neighborhood for the purposes of visualization;
    however, a unit's specific location within a neighborhood has no
    effect on the simulation.  Units cannot be moved from one 
    neighborhood to another.<p>

    A unit's name has the form "<i>group-nbhood/nnnn</i>" where
    <i>group</i> is the group name and <i>nbhood</i> is the unit's
    neighborhood of origin (which isn't necessarily the same as the
    neighborhood in which the unit is located).  The number
    <i>nnnn</i> is "0000" for personnel not allocated to any
    particular activity, and the ID of the relevant
    <<cref ACTIVITY: "calendar entry">> for units doing an activity.<p>

    In conventional war games, units correspond to a Table of
    Organization and Equipment (TOE); thus, a unit might be Company A
    of such-and-such a battalion.  Athena borrows this term, but
    changes it.  In Athena, a unit is really an allocation of
    personnel to some purpose over a period of time, e.g., an
    allocation of members of a <<term frcgroup>> to the 
    <<term activity>> of law enforcement.<p>

    Units can be positioned using the controls on the
    <<tabref Map>>.  The full set of units can browsed
    and edited on the <<tabref Units>>, using the <<cref UNIT:>>.<p>
}

#-----------------------------------------------------------------------

term urbanization "urbanization" {
    The urbanization level of the neighborhood:<p>

    <<enumdoc ::projectlib::eurbanization>><p>
}

#-----------------------------------------------------------------------

term volatility "volatility" {
    The <i>volatility</i> of each <<term nbhood>> is a number from 0
    to 100 that indicates how likely it is that a random person in the
    neighborhood will get caught up in violence unrelated to his
    presence.  It is computed by the <<model force>> model.<p>

    Volatility is a major component of a <<term group>>'s 
    <<term security>>.
}

#-----------------------------------------------------------------------

term worker "worker" {
    A member of the labor force, as determined by the
    <<model demog>> model.  All workers are 
    <<term consumer>>s.
}

#-----------------------------------------------------------------------

term zulu "zulu-time" {
    A zulu-time string, or date-time group, represents a particular
    date and time in this format:<p>

    <b><i>ddhhmm</i>Z<i>mmmyy</i></b><p>

    where<p>

    <<topiclist>>
    <<topic "<i>dd</i>">>
    The day of the month.
    <</topic>>

    <<topic "<i>hhmm</i>">>
    The time of day in hours and minutes, using a 24-hour clock, UTC
    (Greenwich Mean Time).  (The "Z" indicates the time zone.)<p>

    Because Athena measures time in days, this field is conventionally
    set to "0000" in all cases.
    <</topic>>

    <<topic "<i>mmm</i>">>
    The month of the year, specified as the first three letters of the
    month's name, e.g., "JAN", "FEB", etc.
    <</topic>>

    <<topic "<i>yy</i>">>
    The year, represented as the last two digits of the year, e.g.,
    "09".
    <</topic>>

    <</topiclist>>
}

