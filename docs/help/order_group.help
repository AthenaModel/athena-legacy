# -*-Tcl-*-
#-----------------------------------------------------------------------
# TITLE:
#    order_actor.help
#
# AUTHOR:
#    Will Duquette
#
# DESCRIPTION:
#    Athena Help Documentation: ACTOR:* Orders
#
#    This file is included into order.help.
#
#-----------------------------------------------------------------------

macro GROUP.g {flavor} {
    |<--
    The ID of an existing $flavor group.
}

macro GROUP.color {} {
    |<--
    The group's color, used when displaying the group's units
    on the map viewer.  In general, group colors will be selected
    using the color selection dialog; if a color is entered as a
    string, it must be specified as a hex color string, of
    one of the following forms<p>

    #<i>rrggbb</i><br>
    #<i>rrrgggbbb</i><br>
    #<i>rrrrggggbbbb</i><p>

    where <i>r</i>, <i>g</i> and <i>b</i> are hexadecimal digits 
    expressing a shade of red, green, or blue.  Thus, "#000000" is
    black, and "#FFFFFF" is white.<p>
}

macro GROUP.shape {} {
    |<--
    According to MIL-STD-2525a, friendly, neutral, and enemy units
    are drawn differently by the map viewer.  This parameter
    determines whether the group's units are drawn as friendly,
    neutral, or enemy.  The possible values are as follows:<p>

    [enumdoc ::projectlib::eunitshape]
}

macro GROUP.demeanor {} {
    |<--
    The demeanor of the group, i.e., its propensity for
    violence. The possible values are as follows:<p>

    [enumdoc ::projectlib::edemeanor]
}

macro GROUP.a {} {
    |<--
    The group's owning actor.  This parameter may remain unset during
    [term prep], but must be specified before time can be
    advanced.
}

macro GROUP.cost {} {
    |<--
    The cost to the owning actor of 
    maintaining one member of the group in the playbox for one week,
    in dollars.
    Costs incurred outside the playbox should be excluded, e.g., 
    wages for U.S. troops.  The cost is expressed as a decimal number
    with an optional "K", "M", or "B" suffix, "1K" is 1,000 dollars.
}




#=======================================================================
# Civilian Group Orders

page /order civgroup "Civilian Group Orders" {
    <<title>>

    These orders are used create, update, and delete 
    <<term civgroup>>s.

    <<childlinks>>
}

#-----------------------------------------------------------------------

order CIVGROUP:CREATE "Create Civilian Group" {
    <b><<term prep>> Only.</b>  This order creates a
    new <<term civgroup>>.  The order parameters
    are as follows:<p>
    
    <<parmlist>>
    <<group_civ parms -required -tags create>>
    <</parmlist>>
}


#-----------------------------------------------------------------------

order CIVGROUP:DELETE "Delete Civilian Group" {
    <b><<term prep>> Only.</b>  Deletes an existing
    civilian group, along with all entities (e.g., attitudes)
    that depend upon it.<p>

    <<parmlist>>
    <<parm g "Group">>
    <b>Required.</b>  <<GROUP.g civilian>>
    <</parm>>
    <</parmlist>>

}

#-----------------------------------------------------------------------

order CIVGROUP:UPDATE "Update Civilian Group" {
    <b><<term prep>> Only.</b>  This order updates an
    existing <<term civgroup>>.  The order parameters
    are as follows:<p>

    <<parmlist>>
    <<parm g "Select Group">>
    <b>Required.</b>  <<GROUP.g civilian>>
    <</parm>>

    <<group_civ parms -optional -tags update>>
    <</parmlist>>
}


#-----------------------------------------------------------------------

order CIVGROUP:UPDATE+MULTI "Update Multiple Civilian Groups" {
    <b><<term prep>> Only.</b>  This order modifies two or 
    more <<term civgroup>>s, as selected in the GUI.<p>

    <<parmlist>>
    <<parm ids "Groups">>
    <b>Required.</b>  <<parm.ids "civilian group">>
    <</parm>>

    <<group_civ parms -optional -tags multi>>
    <</parmlist>>
}

#-----------------------------------------------------------------------

order CIVGROUP:UPDATE+POSTPREP "Update Civilian Group (Post-PREP)" {
    This order updates an existing <<term civgroup>>
    after leaving <<term prep>>.  Only a subset of the
    group attributes can be edited.<p>

    This order can be sent by an 
    <<cref /object/tactic/executive>> script using the 
    <<cref /command/send>> executive command.<p>

    <<parmlist>>
    <<parm g "Select Group">>
    <b>Required.</b> <<GROUP.g civilian>>
    <</parm>>

    <<group_civ parms -required -tags postprep>>
    <</parmlist>>
}

#-----------------------------------------------------------------------

order CIVGROUP:UPDATE+POSTPREP+MULTI "Update Multiple Civilian Groups (Post-PREP)" {
    This order updates two or more existing <<term civgroup>>s,
    as selected in the GUI, 
    after leaving <<term prep>>.  Only a subset of the
    group attributes can be edited.<p>

    <<parmlist>>

    <<parm ids "Groups">>
    <b>Required.</b>  <<parm.ids "civilian group">>
    <</parm>>

    <<group_civ parms -required -tags postprep>>
    <</parmlist>>
}


#=======================================================================
# Force Group Orders

page /order frcgroup "Force Group Orders" {
    <<title>>

    These orders are used create, update, and delete 
    <<term frcgroup>>s.

    <<childlinks>>
}


#-----------------------------------------------------------------------

order FRCGROUP:CREATE "Create Force Group" {
    <b><<term prep>> Only.</b>  This order creates a new 
    <<term frcgroup>>.
    The order parameters are as follows:<p>

    <<parmlist>>
    <<group_frc parms -required -tags create>>
    <</parmlist>>
}


#-----------------------------------------------------------------------

order FRCGROUP:DELETE "Delete Force Group" {
    <b><<term prep>> Only.</b>  Deletes an existing
    <<term frcgroup>>, along with all entities
    that depend upon it.  The order parameters are as follows:<p>

    <<parmlist>>
    <<parm g "Group">>
    <b>Required.</b>  <<GROUP.g force>>
    <</parm>>
    <</parmlist>>
}

#-----------------------------------------------------------------------

order FRCGROUP:UPDATE "Update Force Group" {
    <b><<term prep>> Only.</b>  This order modifies the
    definition of an existing <<term frcgroup>>.  The order
    parameters are as follows:<p>

    <<parmlist>>
    <<parm g "Select Group">>
    <b>Required.</b>  <<GROUP.g force>>
    <</parm>>

    <<group_frc parms -optional -tags update>>
    <</parmlist>>
}


#-----------------------------------------------------------------------

order FRCGROUP:UPDATE+MULTI "Update Multiple Force Groups" {
    <b><<term prep>> Only.</b>  This order modifies the
    definition of two or more existing <<term frcgroup>>s, as
    selected in the GUI.  The order parameters are as follows:<p>

    <<parmlist>>
    <<parm ids "Groups">>
    <b>Required.</b>  <<parm.ids "force group">>
    <</parm>>

    <<group_frc parms -optional -tags multi>>
    <</parmlist>>
}


#=======================================================================
# Organization Group Orders

page /order orggroup "Organization Group Orders" {
    <<title>>

    These orders are used create, update, and delete 
    <<term orggroup>>s.

    <<childlinks>>
}

#-----------------------------------------------------------------------

order ORGGROUP:CREATE "Create Organization Group" {
    <b><<term prep>> Only.</b>  This order creates a new 
    <<term orggroup>>.
    The order parameters are as follows:<p>

    <<parmlist>>
    <<group_org parms -required -tags create>>
    <</parmlist>>
}


#-----------------------------------------------------------------------

order ORGGROUP:DELETE "Delete Organization Group" {
    <b><<term prep>> Only.</b>  Deletes an existing
    <<term orggroup>>, along with all entities
    that depend upon it.<p>

    <<parmlist>>
    <<parm g "Group">>
    <b>Required.</b>  <<GROUP.g organization>>
    <</parm>>
    <</parmlist>>
}

#-----------------------------------------------------------------------

order ORGGROUP:UPDATE "Update Organization Group" {
    <b><<term prep>> Only.</b>  This order modifies the
    definition of an existing <<term orggroup>>.  The order
    parameters are as follows:<p>

    <<parmlist>>
    <<parm g "Select Group">>
    <b>Required.</b>  <<GROUP.g organization>>
    <</parm>>

    <<group_org parms -optional -tags update>>
    <</parmlist>>
}

#-----------------------------------------------------------------------

order ORGGROUP:UPDATE+MULTI "Update Multiple Organization Groups" {
    <b><<term prep>> Only.</b>  This order modifies the
    definition of two or more existing <<term orggroup>>s, as
    selected in the GUI.  The order parameters are as follows:<p>

    <<parmlist>>
    <<parm ids "Groups">>
    <b>Required.</b>  <<parm.ids "organization group">>
    <</parm>>

    <<group_org parms -optional -tags multi>>
    <</parmlist>>
}


