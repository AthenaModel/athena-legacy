# -*-Tcl-*-
#-----------------------------------------------------------------------
# TITLE:
#    mapref.test
#
# AUTHOR:
#    Will Duquette
#
# DESCRIPTION:
#    Tcltest test suite for minlib(n), mapref.tcl
#
#-----------------------------------------------------------------------

#-----------------------------------------------------------------------
# Initialize tcltest(n)

if {[lsearch [namespace children] ::tcltest] == -1} {
    package require tcltest 2.2 
    eval ::tcltest::configure $argv
}
 
#-----------------------------------------------------------------------
# Load the package to be tested

package require minlib 1.0

#-----------------------------------------------------------------------
# Test Suite
#
# The tests run in a namespace so as not to interfere with other
# test suites.

namespace eval ::minlib::test {
    #-------------------------------------------------------------------
    # Set up the test environment

    # Import tcltest(n)
    namespace import ::tcltest::*

    # Import the code to be tested
    namespace import ::minlib::*

    # Setup for tests

    proc setup {} {
        mapref proj -width 1500 -height 1000
    }

    proc cleanup {} {
        proj destroy
    }

    #-------------------------------------------------------------------
    # box

    test box-1.1 {Retrieve bounding box} -setup setup -body {
        proj box
    } -cleanup {
        cleanup
    } -result {0 0 999 666}

    #-------------------------------------------------------------------
    # dim

    test dim-1.1 {Retrieve dimensions box} -setup setup -body {
        proj dim
    } -cleanup {
        cleanup
    } -result {999 666}

    #-------------------------------------------------------------------
    # zoom

    test zoom-1.1 {Default zoom} -setup setup -body {
        proj zoom
    } -cleanup {
        cleanup
    } -result {100}

    test zoom-1.2 {Set zoom} -setup setup -body {
        proj zoom 200

        proj zoom
    } -cleanup {
        cleanup
    } -result {200}

    test zoom-1.3 {set returns zoom} -setup setup -body {
        proj zoom 50
    } -cleanup {
        cleanup
    } -result {50}


    test zoom-1.4 {0 is invalid} -setup setup -body {
        proj zoom 0
    } -returnCodes {
        error
    } -cleanup {
        cleanup
    } -result {invalid value "0", expected integer in range 1, 300}

    test zoom-1.5 {1000 is invalid} -setup setup -body {
        proj zoom 1000
    } -returnCodes {
        error
    } -cleanup {
        cleanup
    } -result {invalid value "1000", expected integer in range 1, 300}

    test zoom-1.6 {fraction is invalid} -setup setup -body {
        proj zoom 1.5
    } -returnCodes {
        error
    } -cleanup {
        cleanup
    } -result {invalid value "1.5", expected integer}

    #-------------------------------------------------------------------
    # c2m

    test c2m-1.1 {Convert origin} -setup setup -body {
        proj c2m 0 0
    } -cleanup {
        cleanup
    } -result {0 0}

    test c2m-1.2 {Convert bounds} -setup setup -body {
        proj c2m 1500 1000
    } -cleanup {
        cleanup
    } -result {999 666}

    test c2m-1.3 {Convert midpoint} -setup setup -body {
        proj c2m 750 500
    } -cleanup {
        cleanup
    } -result {500 333}

    test c2m-1.4 {Convert bounds} -setup setup -body {
        proj zoom 200
        proj c2m 3000 2000
    } -cleanup {
        cleanup
    } -result {999 666}
    

    #-------------------------------------------------------------------
    # c2ref

    test c2ref-1.1 {Convert origin} -setup setup -body {
        proj c2ref 0 0
    } -cleanup {
        cleanup
    } -result {A00A00}

    test c2ref-1.2 {Convert bounds} -setup setup -body {
        proj c2ref 1500 1000
    } -cleanup {
        cleanup
    } -result {K99G66}

    test c2ref-1.3 {Convert midpoint} -setup setup -body {
        proj c2ref 750 500
    } -cleanup {
        cleanup
    } -result {F00D33}

    test c2ref-1.4 {Convert with zoom} -setup setup -body {
        proj zoom 200
        proj c2ref 3000 2000
    } -cleanup {
        cleanup
    } -result {K99G66}


    #-------------------------------------------------------------------
    # m2c

    test m2c-1.1 {Convert origin} -setup setup -body {
        proj m2c 0 0
    } -cleanup {
        cleanup
    } -result {0.0 0.0}

    test m2c-1.2 {Convert bounds} -setup setup -body {
        proj m2c 999 666
    } -cleanup {
        cleanup
    } -result {1500.0 999.9999999999999}

    test m2c-1.3 {Convert midpoint} -setup setup -body {
        proj m2c 500 333
    } -cleanup {
        cleanup
    } -result {750.7507507507507 499.99999999999994}

    test m2c-1.4 {Convert with zoom} -setup setup -body {
        proj zoom 200
        proj m2c 999 666
    } -cleanup {
        cleanup
    } -result {3000.0 1999.9999999999998}


    #-------------------------------------------------------------------
    # m2ref

    test m2ref-1.1 {Convert origin} -setup setup -body {
        proj m2ref 0 0
    } -cleanup {
        cleanup
    } -result {A00A00}

    test m2ref-1.2 {Convert bounds} -setup setup -body {
        proj m2ref 999 666
    } -cleanup {
        cleanup
    } -result {K99G66}

    test m2ref-1.3 {Convert midpoint} -setup setup -body {
        proj m2ref 500 333
    } -cleanup {
        cleanup
    } -result {F00D33}

    test m2ref-1.4 {Convert with zoom} -setup setup -body {
        proj zoom 200
        proj m2ref 999 666
    } -cleanup {
        cleanup
    } -result {K99G66}

    #-------------------------------------------------------------------
    # ref2c

    test ref2c-1.1 {Convert origin} -setup setup -body {
        proj ref2c A00A00
    } -cleanup {
        cleanup
    } -result {0.0 0.0}

    test ref2c-1.2 {Convert bounds} -setup setup -body {
        proj ref2c K99G66
    } -cleanup {
        cleanup
    } -result {1500.0 999.9999999999999}

    test ref2c-1.3 {Convert midpoint} -setup setup -body {
        proj ref2c F00D33
    } -cleanup {
        cleanup
    } -result {750.7507507507507 499.99999999999994}

    test ref2c-1.4 {Convert with zoom} -setup setup -body {
        proj zoom 200
        proj ref2c K99G66
    } -cleanup {
        cleanup
    } -result {3000.0 1999.9999999999998}

    test ref2c-1.5 {Convert list} -setup setup -body {
        proj ref2c A00A00 K99G66
    } -cleanup {
        cleanup
    } -result {0.0 0.0 1500.0 999.9999999999999}


    #-------------------------------------------------------------------
    # ref2m

    test ref2m-1.1 {Convert origin} -setup setup -body {
        proj ref2m A00A00
    } -cleanup {
        cleanup
    } -result {0 0}

    test ref2m-1.2 {Convert bounds} -setup setup -body {
        proj ref2m K99G66
    } -cleanup {
        cleanup
    } -result {999 666}

    test ref2m-1.3 {Convert midpoint} -setup setup -body {
        proj ref2m F00D33
    } -cleanup {
        cleanup
    } -result {500 333}

    test ref2m-1.4 {Convert with zoom} -setup setup -body {
        proj zoom 200
        proj ref2m K99G66
    } -cleanup {
        cleanup
    } -result {999 666}

    test ref2m-1.5 {Convert list} -setup setup -body {
        proj ref2m A00A00 K99G66
    } -cleanup {
        cleanup
    } -result {0 0 999 666}

    #-------------------------------------------------------------------
    # ref validate

    test ref_validate-1.1 {bad syntax} -setup setup -body {
        proj ref validate A00A00A
    } -returnCodes {
        error
    } -cleanup {
        cleanup
    } -result {not a map reference string}

    test ref_validate-1.2 {out of bounds} -setup setup -body {
        proj ref validate K99K99
    } -returnCodes {
        error
    } -cleanup {
        cleanup
    } -result {out of bounds}

    test ref_validate-1.3 {multiple points} -setup setup -body {
        proj ref validate A00A00 K99K99 A00A00
    } -returnCodes {
        error
    } -cleanup {
        cleanup
    } -result {point "K99K99" is out of bounds}

    test ref_validate-1.4 {valid} -setup setup -body {
        proj ref validate A00A00 A00A00
    } -cleanup {
        cleanup
    } -result {A00A00 A00A00}

    #-------------------------------------------------------------------
    # Cleanup

    cleanupTests
}

namespace delete ::minlib::test

