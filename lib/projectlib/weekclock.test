# -*-Tcl-*-
#-----------------------------------------------------------------------
# TITLE:
#    weekclock.test
#
# AUTHOR:
#    Will Duquette
#
# DESCRIPTION:
#    Tcltest test suite for projectlib(n) weekclock(n)
#
#-----------------------------------------------------------------------

#-----------------------------------------------------------------------
# Initialize tcltest(n)

if {[lsearch [namespace children] ::tcltest] == -1} {
    package require tcltest 2.2 
    eval ::tcltest::configure $argv
}

#-----------------------------------------------------------------------
# Load the package to be tested

package require projectlib 1.0

#-----------------------------------------------------------------------
# Test Suite
#
# The tests run in a namespace so as not to interfere with other
# test suites.

namespace eval ::projectlib::test {
    #-------------------------------------------------------------------
    # Set up the test environment

    # Import tcltest(n)
    namespace import ::tcltest::*

    # Import the code to be tested
    namespace import ::projectlib::*

    # setup and cleanup 

    proc setup {} {
        weekclock myclock
    }

    proc cleanup {} {
        myclock destroy
    }

    #-------------------------------------------------------------------
    # Creation

    test creation-1.1 {Default T0} -setup {
        setup
    } -body {
        myclock cget -t0
    } -cleanup {
        cleanup
    } -result {2012W01}

    test creation-1.2 {Time starts at zero} -setup {
        setup
    } -body {
        myclock now
    } -cleanup {
        cleanup
    } -result {0}

    test creation-1.3 {Time string starts at -t0} -setup {
        setup
    } -body {
        myclock asString
    } -cleanup {
        cleanup
    } -result {2012W01}

    #-------------------------------------------------------------------
    # advance

    test advance-1.1 {Error on non-integer} -setup {
        setup
    } -body {
        myclock advance now
    } -returnCodes {
        error
    } -cleanup {
        cleanup
    } -result {expected integer ticks: "now"}

    test advance-1.2 {Error on negative} -setup {
        setup
    } -body {
        myclock advance -1
    } -returnCodes {
        error
    } -cleanup {
        cleanup
    } -result {expected t >= 0, got "-1"}

    test advance-2.1 {Time can advance by ticks.} -setup {
        setup
    } -body {
        myclock advance 10
        set a [myclock now]
        myclock advance 20 
        set b [myclock now]

        list $a $b
    } -cleanup {
        cleanup
    } -result {10 20}

    test advance-2.2 {Time can advance to current time.} -setup {
        setup
    } -body {
        myclock advance 0
        myclock now
    } -cleanup {
        cleanup
    } -result {0}

    #-------------------------------------------------------------------
    # tick

    test tick-1.1 {advance time by one tick} -setup {
        setup
        myclock advance 9
    } -body {
        myclock tick
        myclock now
    } -cleanup {
        cleanup
    } -result {10}

    #-------------------------------------------------------------------
    # reset

    test reset-1.1 {Resetting sets time back to 0} -setup {
        setup
    } -body {
        set t1 [myclock now]

        myclock advance 60
        set t2 [myclock now]

        myclock reset
        set t3 [myclock now]

        list $t1 $t2 $t3
    } -cleanup {
        cleanup
    } -result {0 60 0}

    #-------------------------------------------------------------------
    # now

    test now-1.1 {now + offset} -setup {
        setup
    } -body {
        myclock advance 60
        list [myclock now] [myclock now 30] [myclock now -30]
    } -cleanup {
        cleanup
    } -result {60 90 30}

    #-------------------------------------------------------------------
    # fromString

    test fromString-1.1 {fromString to ticks} -setup {
        setup
    } -body {
        myclock fromString 2012W05
    } -cleanup {
        cleanup
    } -result {4}

    #-------------------------------------------------------------------
    # toString

    test toString-1.1 {ticks to string} -setup {
        setup
    } -body {
        myclock toString 10
    } -cleanup {
        cleanup
    } -result {2012W11}

    #-------------------------------------------------------------------
    # timespec

    test timespec-1.1 {invalid spec 1} -setup {
        setup
    } -body {
        myclock timespec validate NONESUCH
    } -returnCodes {
        error
    } -cleanup {
        cleanup
    } -result {invalid time spec "NONESUCH", base time should be "NOW", "T0", an integer tick, or a week string}

    test timespec-1.2 {invalid spec 2} -setup {
        setup
    } -body {
        myclock timespec validate NOW++10
    } -returnCodes {
        error
    } -cleanup {
        cleanup
    } -result {invalid time spec "NOW++10", should be <basetime><+/-><offset>}

    test timespec-2.1 {valid specs} -setup {
        setup
        myclock advance 30
    } -body {
        set result [list]
        foreach spec {
            NOW
            T0
            10
            +10
            -10
            NOW+10
            NOW-10
            T0+10
            2012W30
            2012W30-5
            2012W30+5
        } {
            lappend result [myclock timespec validate $spec]
        }

        set result
    } -cleanup {
        cleanup
    } -result {30 0 10 40 20 40 20 10 29 24 34}

    #-------------------------------------------------------------------
    # asString

    test asString-1.1 {asString for non-zero t.} -setup {
        setup
    } -body {
        myclock advance 10
        list [myclock asString] [myclock asString 30]
    } -cleanup {
        cleanup
    } -result {2012W11 2012W41}

    #-------------------------------------------------------------------
    # -t0

    test t0-1.1 {-t0 sets start time} -setup {
        setup
    } -body {
        myclock configure -t0 2010W20
        list [myclock now 5] [myclock asString 5]
    } -cleanup {
        cleanup
    } -result {5 2010W25}

    #-------------------------------------------------------------------
    # Cleanup

    cleanupTests
}

namespace delete ::projectlib::test




