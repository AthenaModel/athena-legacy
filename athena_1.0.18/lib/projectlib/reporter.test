# -*-Tcl-*-
#-----------------------------------------------------------------------
# TITLE:
#    reporter.test
#
# AUTHOR:
#    Will Duquette
#
# DESCRIPTION:
#    Tcltest test suite for projectlib(n), reporter.tcl
#
#-----------------------------------------------------------------------

#-----------------------------------------------------------------------
# Initialize tcltest(n)

if {[lsearch [namespace children] ::tcltest] == -1} {
    package require tcltest 2.2 
    eval ::tcltest::configure $argv
}
 
#-----------------------------------------------------------------------
# Load the package to be tested

package require projectlib 1.0

#-----------------------------------------------------------------------
# Test Suite
#
# The tests run in a namespace so as not to interfere with other
# test suites.

namespace eval ::projectlib::test {
    #-------------------------------------------------------------------
    # Set up the test environment

    # Import tcltest(n)
    namespace import ::tcltest::*

    # Import marsutil(n)
    namespace import ::marsutil::*

    # Import the code to be tested
    namespace import ::projectlib::*

    # Setup for tests
    simclockType myclock

    sqldocument db -clock [namespace current]::myclock
    db open :memory:
    db clear

    # -reportcmd handler
    proc ReportCmd {dict} {
        array set opts $dict
        puts ""
        parray opts
        puts -nonewline "    "
    }

    # -deletecmd handler
    proc DeleteCmd {id} {
        puts -nonewline $id
    }


    # Helper Routines

    proc setup {} {
        reporter configure \
            -db    [namespace current]::db      \
            -clock [namespace current]::myclock 
    }

    proc cleanup {} {
        reporter bin clear

        reporter configure -db "" -clock "" -reportcmd "" -deletecmd ""

        db eval {DELETE FROM reports}

    }

    # pprint block
    #
    # Pretty-prints a result block so that the test looks nice
    
    proc pprint {block} {
        set block [string map [list \" \'] $block]
        return "\n$block    "
    }

    # dump ?bin?
    #
    # bin     A bin name
    #
    # Returns a dumps all of the reports; optionally, all those
    # in a bin.

    proc dump {{bin ""}} {
        if {$bin eq ""} {
            pprint [db query {SELECT * FROM reports}]
        } else {
            set view [reporter bin view $bin]

            pprint [db query "SELECT * FROM $view"]
        }
    }

    #-------------------------------------------------------------------
    # Options: configure/cget

    test options-1.1 {Options default to ""} -body {
        list \
            [reporter cget -clock]     \
            [reporter cget -db]        \
            [reporter cget -deletecmd] \
            [reporter cget -reportcmd]
    } -result {{} {} {} {}}


    test options-1.2 {Error if options not defined} -body {
        reporter bin define all "All" "" ""
    } -returnCodes {
        error
    } -result {reporter(n) option -db is has not been set.}


    test options-1.3 {Can set options} -body {
        reporter configure -clock A -db B -deletecmd C -reportcmd D
        list \
            [reporter cget -clock]     \
            [reporter cget -db]        \
            [reporter cget -deletecmd] \
            [reporter cget -reportcmd]
    } -cleanup {
        cleanup
    } -result {A B C D}


    test options-1.4 {Can clear options} -body {
        reporter configure -clock A  -db B  -deletecmd C  -reportcmd D
        reporter configure -clock "" -db "" -deletecmd "" -reportcmd ""

        list \
            [reporter cget -clock]     \
            [reporter cget -db]        \
            [reporter cget -deletecmd] \
            [reporter cget -reportcmd]
    } -cleanup {
        cleanup
    } -result {{} {} {} {}}

    #-------------------------------------------------------------------
    # reporter save

    # 1.* Errors

    test save-1.1 {No -title} -setup {
        setup
    } -body {
        reporter save -type A
    } -returnCodes {
        error
    } -cleanup {
        cleanup
    } -result {Report has no -title}


    test save-1.2 {No -text} -setup {
        setup
    } -body {
        reporter save -type A -title B
    } -returnCodes {
        error
    } -cleanup {
        cleanup
    } -result {Report has no -text}


    # 2.x: Server-side operations

    test save-2.1 {Save report with minimal options} -setup {
        setup
    } -body {
        reporter save \
            -type  A  \
            -title B  \
            -text  C

        reporter save \
            -type  D  \
            -title E  \
            -text  F
            
        dump
    } -cleanup {
        cleanup
    } -result {
id time stamp        rtype subtype title text requested hotlist meta1 meta2 meta3 meta4 
-- ---- ------------ ----- ------- ----- ---- --------- ------- ----- ----- ----- ----- 
1  0    010000ZJAN70 A             B     C    0         0                               
2  0    010000ZJAN70 D             E     F    0         0                               
    }


    test save-2.2 {Save report with all server-side options} -setup {
        setup
    } -body {
        reporter save     \
            -type      A  \
            -subtype   B  \
            -title     C  \
            -text      D  \
            -requested 1  \
            -meta1     E  \
            -meta2     F  \
            -meta3     G  \
            -meta4     H

        reporter save     \
            -type      J  \
            -subtype   K  \
            -title     L  \
            -text      M  \
            -requested 0  \
            -meta1     N  \
            -meta2     P  \
            -meta3     Q  \
            -meta4     R
            
        dump
    } -cleanup {
        cleanup
    } -result {
id time stamp        rtype subtype title text requested hotlist meta1 meta2 meta3 meta4 
-- ---- ------------ ----- ------- ----- ---- --------- ------- ----- ----- ----- ----- 
1  0    010000ZJAN70 A     B       C     D    1         0       E     F     G     H     
2  0    010000ZJAN70 J     K       L     M    0         0       N     P     Q     R     
    }

    test save-2.3 {Returns report id} -setup {
        setup
    } -body {
        set a [reporter save \
                   -type  A  \
                   -title B  \
                   -text  C]

        set b [reporter save \
                   -type  D  \
                   -title E  \
                   -text  F]
            
        list $a $b
    } -cleanup {
        cleanup
    } -result {1 2}


    # 3.x: Callbacks

    test save-3.1 {-reportcmd is called} -setup {
        setup
        reporter configure -reportcmd [namespace current]::ReportCmd
    } -body {
        reporter save     \
            -type      A  \
            -subtype   B  \
            -title     C  \
            -text      D  \
            -requested 1  \
            -meta1     E  \
            -meta2     F  \
            -meta3     G  \
            -meta4     H
    } -cleanup {
        cleanup
    } -result {1} -output {
opts(-id)        = 1
opts(-meta1)     = E
opts(-meta2)     = F
opts(-meta3)     = G
opts(-meta4)     = H
opts(-requested) = 1
opts(-stamp)     = 010000ZJAN70
opts(-subtype)   = B
opts(-text)      = D
opts(-time)      = 0
opts(-title)     = C
opts(-type)      = A
    }


    # 4.x: Client-side operations

    test save-4.1 {Save report with all client-side options} -setup {
        setup
    } -body {
        reporter save     \
            -id        10 \
            -time      99 \
            -stamp     151021ZMAY09 \
            -type      A  \
            -subtype   B  \
            -title     C  \
            -text      D  \
            -requested 1  \
            -meta1     E  \
            -meta2     F  \
            -meta3     G  \
            -meta4     H
        dump
    } -cleanup {
        cleanup
    } -result {
id time stamp        rtype subtype title text requested hotlist meta1 meta2 meta3 meta4 
-- ---- ------------ ----- ------- ----- ---- --------- ------- ----- ----- ----- ----- 
10 99   151021ZMAY09 A     B       C     D    1         0       E     F     G     H     
    }

    #-------------------------------------------------------------------
    # reporter delete

    test delete-1.1 {Deleting a non-existent report does nothing} -setup {
        setup
    } -body {
        reporter delete 5
    } -cleanup {
        cleanup
    } -result {}


    test delete-1.2 {Deleting a report deletes it} -setup {
        setup

        reporter configure -deletecmd [namespace current]::DeleteCmd

        reporter save     \
            -id        10 \
            -type      A  \
            -subtype   B  \
            -title     C  \
            -text      D
    } -body {
        reporter delete 10
        dump
    } -cleanup {
        cleanup
    } -result {
    } -output {10}

    #-------------------------------------------------------------------
    # bin

    test bin-1.1 {Parent must exist} -setup {
        setup
    } -body {
        reporter bin define all "All" NONESUCH ""
    } -returnCodes {
        error
    } -cleanup {
        cleanup
    } -result {no such parent bin: "NONESUCH"}


    test bin-1.2 {Query must be valid} -setup {
        setup
    } -body {
        reporter bin define all "All" "" ""
    } -returnCodes {
        error
    } -cleanup {
        cleanup
    } -result {near ";": syntax error}


    test bin-2.1 {Define top-level bins} -setup {
        setup
    } -body {
        reporter bin define all "All Reports" "" {
            SELECT * FROM reports
        }

        reporter bin define requested "Requested" "" {
            SELECT * FROM reports WHERE requested=1
        }

        reporter bin children ""
    } -cleanup {
        cleanup
    } -result {all requested}


    test bin-2.2 {Define child bins} -setup {
        setup
    } -body {
        reporter bin define all "All Reports" "" {
            SELECT * FROM reports
        }

        reporter bin define these "These" all {
            SELECT * FROM reports WHERE rtype='THESE'
        }

        reporter bin define those "Those" all {
            SELECT * FROM reports WHERE rtype='THOSE'
        }

        list \
            [reporter bin children ""]  \
            [reporter bin children all]
    } -cleanup {
        cleanup
    } -result {all {these those}}


    test bin-2.3 {Bin Views Function} -setup {
        setup
        
        reporter save \
            -type TEST \
            -title "A" \
            -text  "B"

        reporter save \
            -type OTHER \
            -title "C"  \
            -text  "D"
    } -body {
        reporter bin define test "Test Bin" "" {
            SELECT * FROM reports WHERE rtype='TEST'
        }

        dump test
    } -cleanup {
        cleanup
    } -result {
id time stamp        rtype subtype title text requested hotlist meta1 meta2 meta3 meta4 
-- ---- ------------ ----- ------- ----- ---- --------- ------- ----- ----- ----- ----- 
1  0    010000ZJAN70 TEST          A     B    0         0                               
    }


    test bin-2.4 {Views are redefined as needed.} -setup {
        setup

        reporter bin define test "Test Bin" "" {
            SELECT * FROM reports WHERE rtype='TEST'
        }

        # Re-initialize the DB, thus clearing the view definition
        db clear

        reporter save \
            -type TEST \
            -title "A" \
            -text  "B"

        reporter save \
            -type OTHER \
            -title "C"  \
            -text  "D"
    } -body {
        dump test
    } -cleanup {
        cleanup
    } -result {
id time stamp        rtype subtype title text requested hotlist meta1 meta2 meta3 meta4 
-- ---- ------------ ----- ------- ----- ---- --------- ------- ----- ----- ----- ----- 
1  0    010000ZJAN70 TEST          A     B    0         0                               
    }


    # 3.x: Other queries

    test bin-3.1 {bin parent} -setup {
        setup

        reporter bin define p "Parent Bin" "" {
            SELECT * FROM reports
        } 

        reporter bin define c "Child Bin" p {
            SELECT * FROM reports WHERE rtype='TEST'
        }
    } -body {
        list [reporter bin parent p] [reporter bin parent c]
    } -cleanup {
        cleanup
    } -result {{} p}

    test bin-3.2 {bin parent} -setup {
        setup

        reporter bin define p "Parent Bin" "" {
            SELECT * FROM reports
        } 

        reporter bin define c "Child Bin" p {
            SELECT * FROM reports WHERE rtype='TEST'
        }
    } -body {
        list [reporter bin title p] [reporter bin title c]
    } -cleanup {
        cleanup
    } -result {{Parent Bin} {Child Bin}}

    # 4.x: getall/setall

    test bin-4.1 {bin getall/setall} -setup {
        setup

        reporter bin define all "All Reports" "" {
            SELECT * FROM reports
        }

        reporter bin define these "These" all {
            SELECT * FROM reports WHERE rtype='THESE'
        }

        reporter bin define those "Those" all {
            SELECT * FROM reports WHERE rtype='THOSE'
        }
    } -body {
        set a [reporter bin getall]
        reporter bin clear
        set b [reporter bin getall]
        reporter bin setall $a
        set c [reporter bin getall]

        list [expr {$b eq ""}] [expr {$a eq $c}] [reporter bin children all]
    } -cleanup {
        cleanup
    } -result {1 1 {these those}}


    #-------------------------------------------------------------------
    # hotlist

    test hotlist-1.1 {Can set and clear individual flags.} -setup {
        setup

        reporter save  \
            -title "A" \
            -text  "B"

        reporter save  \
            -title "C" \
            -text  "D"
    } -body {
        set a [db query {SELECT id,hotlist FROM reports}]
        reporter hotlist set 2 1
        set b [db query {SELECT id,hotlist FROM reports}]
        reporter hotlist set 2 0
        set c [db query {SELECT id,hotlist FROM reports}]

        pprint "$a\n$b\n$c"
    } -cleanup {
        cleanup
    } -result {
id hotlist 
-- ------- 
1  0       
2  0       

id hotlist 
-- ------- 
1  0       
2  1       

id hotlist 
-- ------- 
1  0       
2  0       
    }
    

    test hotlist-1.2 {Can set and clear multiple flags.} -setup {
        setup

        reporter save  \
            -title "A" \
            -text  "B"

        reporter save  \
            -title "C" \
            -text  "D"
    } -body {
        set a [db query {SELECT id,hotlist FROM reports}]
        reporter hotlist set {1 2} 1
        set b [db query {SELECT id,hotlist FROM reports}]
        reporter hotlist set {1 2} 0
        set c [db query {SELECT id,hotlist FROM reports}]

        pprint "$a\n$b\n$c"
    } -cleanup {
        cleanup
    } -result {
id hotlist 
-- ------- 
1  0       
2  0       

id hotlist 
-- ------- 
1  1       
2  1       

id hotlist 
-- ------- 
1  0       
2  0       
    }


    test hotlist-1.3 {Can set and clear all flags.} -setup {
        setup

        reporter save  \
            -title "A" \
            -text  "B"

        reporter save  \
            -title "C" \
            -text  "D"
    } -body {
        set a [db query {SELECT id,hotlist FROM reports}]
        reporter hotlist set all 1
        set b [db query {SELECT id,hotlist FROM reports}]
        reporter hotlist set all 0
        set c [db query {SELECT id,hotlist FROM reports}]

        pprint "$a\n$b\n$c"
    } -cleanup {
        cleanup
    } -result {
id hotlist 
-- ------- 
1  0       
2  0       

id hotlist 
-- ------- 
1  1       
2  1       

id hotlist 
-- ------- 
1  0       
2  0       
    }


    #-------------------------------------------------------------------
    # Cleanup

    cleanupTests
}

namespace delete ::projectlib::test



