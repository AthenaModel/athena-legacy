<<manpage gramdb2(5) "GRAM V2.0 Database File Format">>

<<section SYNOPSIS>>

<<itemlist>>

<<section DESCRIPTION>>

gramdb2(5) defines a database format used for initializing
instances of <<xref gram2(n)>>.  Note that <<xref gram2(n)>> does not
require that gramdb2(5) be used; it is a convenience for testing and
development.<p>

<<xref gramdb2(n)>> parses gramdb2(5) files into SQL tables in
an <<xref sqldocument(n)>> database.
run-time database.  The syntax of the file mirrors the SQL
<<xref "DATABASE SCHEMA">>.<p> 

<<swallow {
# Let's let simlib do some of the work.
package require simlib
namespace import -force ::simlib::*
}>>

<<section "BASIC SYNTAX">>

A gramdb2(5) file is a text file which defines the contents of a number
of SQL tables.  This section describes the file's syntax; see
<<xref TABLES>> for an example of each gramdb2(5) table.<p>

The gramdb2(5) file may contain comments and <b>table</b>
statements. A comment is a line of text beginning with the "#"
character:<p>

<pre>
# This is a comment.
</pre>

<<subsection "Table Syntax">>

A <b>table</b> statement defines the content of a single
database table; each table consists of zero or more records.  The
<b>table</b> statement has this syntax:<p>

<pre>
<b>table</b> <i>tableName</i> {
    <i>record</i>
    <i>record</i>
        .
        .
        .
}
</pre><p>

<<subsection "Records and Keys">>

The records of each table are identified by the table's key fields.
Each record in the <b>gramdb_civ_g</b> table, for example, defines a single
civilian group; the key field, <b>g</b>, is the name of the group.  This
name must be unique for each record in the table.  Some tables
have two or even three key fields.  The <b>gramdb_civ_fg</b> table, for
example, contains the civilian group relationship values; it has
two keys, <b>f</b> and <b>g</b>, each of which is the name of a
civilian group.<p>

Each record is defined by a <b>record</b> statement, which has this syntax:<p>

<pre>
<b>table</b> <i>tableName</i> {
    <b>record</b> <i>keyName</i> <i>keyValue</i> ... {
         <i>field</i>
         <i>field</i>
         .
         .
         .
    }
    .
    .
    .
}
</pre><p>

<<subsection Fields>>

In addition to its key field or fields, most tables also have one or
more data fields.  Field values are defined using the <b>field</b>
statement, which has this syntax:<p>

<pre>
<b>table</b> <i>tableName</i> {
    <b>record</b> <i>keyName</i> <i>keyValue</i> ... {
         <b>field</b> <i>fieldName</i> <i>fieldValue</i>
         <b>field</b> <i>fieldName</i> <i>fieldValue</i>
         .
         .
         .
    }
    .
    .
    .
}
</pre>

Field values containing whitespace must be quoted with double
quotes or curly brackets.  By convention, double quotes are used
for short strings and curly brackets for structured values
(e.g., lists) and for text which spills onto more than one line.
See the example for each of the gramdb2(5) <<xref TABLES>> to see what
each form looks like in practice.<p>

<<section CONCERNS>>

One of the tables (<b>gramdb_gc</b>) depend on the
following sets of concerns; the symbolic name of each concern is
shown in parentheses.<p>

<dl>
  <dt> <b>Autonomy (AUT)</b>
  <dd> Does the group feel it can maintain order and govern itself 
       with a stable government and a viable economy?<p>

  <dt> <b>Quality of Life (QOL)</b>
  <dd> QOL includes the physical plants that provide services, 
       including water, power, public transportation, commercial 
       markets, hospitals, etc. and those things associated with 
       these services such as sanitation, health, education, 
       employment, food, clothing, and shelter.<p>

  <dt> <b>Culture (CUL)</b>
  <dd> Does the group feel that its culture and religion, 
       including cultural and religious sites and artifacts, 
       are respected or denigrated? <p>

  <dt> <b>Physical Safety (SFT)</b>
  <dd> Do members of the group fear for their lives, both from 
       hostile attack and from collateral damage from CF activities?
       This fear includes environmental concerns such as life 
       threatening disease, starvation, and dying of thirst.<p>
</dl>

<<section TABLES>>

<<subsection gramdb_civ_g>>

The <b>gramdb_g</b> table defines the complete set of civilian groups.
The table has a single key field, the group name, <b>g</b>.<p>

<b>Constraints:</b><p>

<ul>
  <li> The table must contain at least one group.
</ul><p>

<table border=1 cellspacing=0>
<tr align=left>
<th>Field</th> <th>Default</th> <th>Description</th>
</tr>

<tr valign=top>
<td>g</td>
<td>n/a</td>
<td>
<b>Key Field.</b>  A symbolic name for the group.  The name may
consist of uppercase letters, digits, and underscores only--no white
space or other punctuation.
</td>
</tr>

<tr valign=top>
<td>n</td>
<td>n/a</td>
<td>
The neighborhood in which the group resides,
as defined in the <b>gramdb_n</b> table.
</td>
</tr>


<tr valign=top>
<td>population</td>
<td>n/a</td>
<td>
The population of the group.
</td>
</tr>

</table><p>

The following example defines a CIV group.<p>

<pre>
table gramdb_civ_g {
    record g SUNB {
        field n          N1
        field population 10000
    }

    .
    .
    .
}
</pre>

<<subsection gramdb_frc_g>>

The <b>gramdb_frc_g</b> table defines the complete set of force groups.
The table has a single key field, the group name, <b>g</b>.<p>

<b>Constraints:</b><p>

<ul>
  <li> The table must contain at least one group.
</ul><p>

<table border=1 cellspacing=0>
<tr align=left>
<th>Field</th> <th>Default</th> <th>Description</th>
</tr>

<tr valign=top>
<td>g</td>
<td>n/a</td>
<td>
<b>Key Field.</b>  A symbolic name for the group.  The name may
consist of uppercase letters, digits, and underscores only--no white
space or other punctuation.
</td>
</tr>
</table><p>

The following example defines a FRC group.<p>

<pre>
table gramdb_frc_g {
    record g BLUE { }

    .
    .
    .

}
</pre>

<<subsection gramdb_n>>

This table defines neighborhoods within the playbox.  GRAM tracks
civilian satisfaction within each neighborhood for the groups who
live there.  Table <b>gramdb_mn</b> describes the relationships between
the different neighborhoods.

<b>Constraints:</b><p>

<ul>
  <li> The table must define at least one neighborhood.
</ul><p>


<table border=1 cellspacing=0>
<tr align=left>
<th>Field</th> <th>Default</th> <th>Description</th>
</tr>

<tr valign=top>
<td>n</td>
<td>n/a</td>
<td>
<b>Key Field.</b>  A symbolic name for the neighborhood.  The name may
consist of uppercase letters, digits, and underscores only--no white
space or other punctuation.
</td>
</tr>

</table><p>

For example,<p>

<pre>
table gramdb_n {
    record n N1 {}
    record n N2 {}
}
</pre>


<<subsection gramdb_gc>>

This table contains all data which is defined by group and concern.
At present, the data consists of the civilian groups' satisfaction
curves.<p>

This table has two keys, <b>g</b> (the group name) and
<b>c</b> (the concern name, see <<xref CONCERNS>>).  If the table is
omitted from the gramdb2(5) input, the <<xref sqldocument(n)>> table
will be populated with default values for all valid combinations of
group and concern.<p>

<table border=1 cellspacing=0>
<tr align=left>
<th>Field</th> <th>Default</th> <th>Description</th>
</tr>

<tr valign=top>
<td>g</td>
<td>n/a</td>
<td>
<b>Key Field.</b>  A civilian group name, as defined in the
<b>gramdb_civ_g</b> table.
</td>
</tr>

<tr valign=top>
<td>c</td>
<td>n/a</td>
<td>
<b>Key Field.</b>  A concern name, as defined in
<<xref CONCERNS>>.
</td>
</tr>

<tr valign=top>
<td>sat0</td>
<td>0.0</td>
<td>
The initial satisfaction at time 0.0, a numeric or symbolic
<<xref simtypes(n) qsat>> value:

<<qsat html>>
</td>
</tr>

<tr valign=top>
<td>saliency</td>
<td>1.0</td>
<td>
The saliency (importance) of this concern to this group, a numeric or
symbolic <<xref simtypes(n) qsaliency>> value:

<<qsaliency html>>
</td>
</tr>

</table><p>

For example,<p>

<pre>
table gramdb_gc {
    record g SUNB c AUT {
        field sat0     -61
        field saliency 1
    }

    record g SUNB c CUL {
        field sat0     -61
        field saliency 1
    }

    .
    .
    .
}
</pre>

<<subsection gramdb_civ_fg>>

This table contains all data which is defined by pairs of civilian groups.
At present, the data consists of the civilian group 
relationship matrix.<p>

This table has two keys, <b>f</b> (the name of the first
group) and <b>g</b> (the name of the second group).  If the
table is omitted from the gramdb2(5) input, the <<xref sqldocument(n)>>
table will be populated with default values for all pairs
of groups.<p>

<table border=1 cellspacing=0>
<tr align=left>
<th>Field</th> <th>Default</th> <th>Description</th>
</tr>

<tr valign=top>
<td>f</td>
<td>n/a</td>
<td>
<b>Key Field.</b>  The first group name, as defined in the
<b>gramdb_civ_g</b> table.
</td>
</tr>

<tr valign=top>
<td>g</td>
<td>n/a</td>
<td>
<b>Key Field.</b>  The second group name, as defined in the
<b>gramdb_civ_g</b> table.
</td>
</tr>

<tr valign=top>
<td>rel</td>
<td>
1.0 if <b>f</b> == <b>g</b><br>
0.0 otherwise.</td>
<td>
The relationship between the two groups from group <b>f</b>'s point
of view (the relationship need not be symmetric).  The value is a
<<xref simtypes(n) qrel>> value and may range from
<<qrel cget -min>> to <<qrel cget -max>>. The
following symbolic constants may be used during data entry:<p>

<<qrel html>>
</td>
</tr>

</table><p>

For example,<p>

<pre>
table gramdb_fg {
    record f SUNB g SHIA {
        field rel   -0.3
    }
    .
    .
    .
}
</pre>

<<subsection gramdb_frc_fg>>

This table contains all data which is defined by pairs of force groups.
At present, the data consists force group relationship matrix.
<p>

This table has two keys, <b>f</b> (the name of the first
group) and <b>g</b> (the name of the second group).  If the
table is omitted from the gramdb2(5) input, the <<xref sqldocument(n)>>
table will be populated with default values for all pairs
of groups.<p>

<table border=1 cellspacing=0>
<tr align=left>
<th>Field</th> <th>Default</th> <th>Description</th>
</tr>

<tr valign=top>
<td>f</td>
<td>n/a</td>
<td>
<b>Key Field.</b>  The first group name, as defined in the
<b>gramdb_frc_g</b> table.
</td>
</tr>

<tr valign=top>
<td>g</td>
<td>n/a</td>
<td>
<b>Key Field.</b>  The second group name, as defined in the
<b>gramdb_frc_g</b> table.
</td>
</tr>

<tr valign=top>
<td>rel</td>
<td>
1.0 if <b>f</b> == <b>g</b><br>
0.0 otherwise.</td>
<td>
The relationship between the two groups from group <b>f</b>'s point
of view (the relationship need not be symmetric).  The value is a
<<xref simtypes(n) qrel>> value and may range from
<<qrel cget -min>> to <<qrel cget -max>>. The
following symbolic constants may be used during data entry:<p>

<<qrel html>>
</td>
</tr>

</table><p>

For example,<p>

<pre>
table gramdb_fg {
    record f OPFOR g BLUE {
        field rel   -0.8
    }
    .
    .
    .
}
</pre>

<<subsection gramdb_coop_fg>>

This table contains all data which is defined by CIV group/FRC group pairs.
At present, the data consists of the initial cooperation matrix.<p>

This table has two keys, <b>f</b> (the name of the civilian
group) and <b>g</b> (the name of the force group).  If the
table is omitted from the gramdb2(5) input, the <<xref sqldocument(n)>>
table will be populated with default values for all pairs
of groups.<p>

<table border=1 cellspacing=0>
<tr align=left>
<th>Field</th> <th>Default</th> <th>Description</th>
</tr>

<tr valign=top>
<td>f</td>
<td>n/a</td>
<td>
<b>Key Field.</b>  The civilian group name, as defined in the
<b>gramdb_civ_g</b> table.
</td>
</tr>

<tr valign=top>
<td>g</td>
<td>n/a</td>
<td>
<b>Key Field.</b>  The force group name, as defined in the
<b>gramdb_frc_g</b> table.
</td>
</tr>

<tr valign=top>
<td>coop0</td>
<td>
50.0</td>
<td>
The probability that group <b>f</b> will cooperate with (provide
information to) group <b>g</b>.  The value is a
<<xref simtypes(n) qcooperation>> value and may range from
<<qcooperation cget -min>> to <<qcooperation cget -max>>.  The
following symbolic constants may be used during data entry:<p>

<<qcooperation html>>
</td>
</tr>

</table><p>

For example,<p>

<pre>
table gramdb_fg {
    record f SUNB g BLUE {
        field coop0 U
    }

    record f SUNB g OPFOR {
        field coop0 75.0
    }
    .
    .
    .
}
</pre>

<<subsection gramdb_mn>>

This table contains all data which is defined by pairs of
<<xref gramdb_n>>: the <b>proximity</b> and the <b>effects_delay</b>.<p>

This table has two keys, <b>m</b> (the name of the first
neighborhood) and <b>n</b> (the name of the second
neighborhood). If the table is omitted from the gramdb2(5) input,
the <<xref sqldocument(n)>> table will be populated with default
values for all pairs of neighborhoods.<p> 

<b>Constraints:</b><p>

<ul>
  <li> When <b>m</b> equals <b>n</b>, the <b>proximity</b> must be
       <b>HERE</b> and the <b>effects_delay</b> must be 0.0.
  <li> When <b>m</b> does not equal <b>n</b>, the <b>proximity</b> must
       <i>not</i> be <b>HERE</b>.<p>
</ul><p>

<table border=1 cellspacing=0>
<tr align=left>
<th>Field</th> <th>Default</th> <th>Description</th>
</tr>

<tr valign=top>
<td>m</td>
<td>n/a</td>
<td>
<b>Key Field.</b>  The first neighborhood name, as defined in the
<b>gramdb_n</b> table.
</td>
</tr>

<tr valign=top>
<td>n</td>
<td>n/a</td>
<td>
<b>Key Field.</b>  The second neighborhood name, as defined in the
<b>gramdb_n</b> table.
</td>
</tr>

<tr valign=top>
<td>proximity</td>
<td>
HERE if <b>m</b> == <b>n</b>,
FAR otherwise</td>
<td>
The value is the proximity of neighborhood <b>n</b> to neighborhood
<b>m</b> from the point of view of residents of <b>m</b>.  Whereas
<b>effects_delay</b> measures the speed of information flow,
<b>proximity</b> measures the physical distance between the
neighborhoods, as perceived by the residents.  Proximity can have any
of the following <<xref simtypes(n) eproximity>> values:

<<eproximity html>>

Note that proximity need not be symmetric.  Consider a neighborhood
<b>n</b> which contains an important resource (a bridge, or a shopping
area).  Residents of many neighborhoods might consider <b>n</b> to be
<b>NEAR</b> because they frequently travel to or through <b>n</b>,
even though the residents of <b>n</b> might consider these other
neighborhoods to be <b>FAR</b>.<p>
</td>
</tr>

<tr valign=top>
<td>effects_delay</td>
<td>0.0</td>
<td>
The value is the indirect effects delay in decimal days--that is, the
delay before indirect effects begin in neighborhood <b>m</b> for a direct
effect in neighborhood <b>n</b>.  If <b>m</b> == <b>n</b>, then the value is
the delay for indirect effects within the same neighborhood (this will
usually be 0.0).
<p>

Note that the delay between two neighborhoods need not be symmetric;
indirect effects in outlying areas from a direct effect in the capital
will likely begin more quickly than indirect effects in the capital from
a direct effect in an outlying area.
</td>
</tr>

</table><p>

The following example states that all neighborhoods are <b>FAR</b>
from each other, except for those explicitly mentioned as being
<b>NEAR</b>.<p>

<pre>
table gramdb_mn {
    record m N1 n N2 {
        field proximity      NEAR
        field effects_delay  0.2
    }

    record m N2 n N1 {
        field proximity      NEAR
        field effects_delay  0.2
    }
}

</pre>

<<section "DATABASE SCHEMA">>

The <<xref gramdb2(n)>> parser defines the following SQL schema which
will receive the <<xref gramdb2(5)>> data:<p>

<pre>
<<gramdb sqlsection schema>>
</pre>

<<section AUTHOR>>

Will Duquette<p>

<<section HISTORY>>

gramdb2(5) is a modified (and greatly simplified) version of the simdb(5)
format used by JNEM.<p>

<</manpage>>









