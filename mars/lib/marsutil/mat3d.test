# -*-Tcl-*-
#-----------------------------------------------------------------------
# TITLE:
#    mat3d.test
#
# AUTHOR:
#    Will Duquette
#
# DESCRIPTION:
#    Tcltest test suite for marsutil(n) mat3d(n)
#
#-----------------------------------------------------------------------

#-----------------------------------------------------------------------
# Initialize tcltest(n)

if {[lsearch [namespace children] ::tcltest] == -1} {
    package require tcltest 2.2 
    eval ::tcltest::configure $argv
}
 
#-----------------------------------------------------------------------
# Load the package to be tested

package require marsutil 1.0

#-----------------------------------------------------------------------
# Test Suite
#
# The tests run in a namespace so as not to interfere with other
# test suites.

namespace eval ::marsutil::test {
    #-------------------------------------------------------------------
    # Set up the test environment

    # Import tcltest(n)
    namespace import ::tcltest::*

    # Import the code to be tested
    namespace import ::marsutil::*

    # Some matrices to work on

    set a {
        {{1 2 3}
         {4 5 6}
         {7 8 9}}
    
        {{9 8 7}
         {6 5 4}
         {3 2 1}}
    }

    set b {
        {{1 1 1}
         {2 2 2}
         {3 3 3}}
    
        {{4 4 4}
         {5 5 5}
         {6 6 6}}
    }

    # A quality, for pprintq

    quality goodness {
        VG "Very Good" 9
        G  "Good"      7
        N  "Neutral"   5
        B  "Bad"       3
        VB "Very Bad"  1
    } -format "%d"

    #-------------------------------------------------------------------
    # new

    test mat3d_new-1.1 {creating a matrix with default values} -body {
        mat3d new 2 3 4
    } -result {{{{} {} {} {}} {{} {} {} {}} {{} {} {} {}}} {{{} {} {} {}} {{} {} {} {}} {{} {} {} {}}}}

    test mat3d_new-1.2 {creating a matrix with a specified value} -body {
        mat3d new 2 3 4 0
    } -result {{{0 0 0 0} {0 0 0 0} {0 0 0 0}} {{0 0 0 0} {0 0 0 0} {0 0 0 0}}}

    test mat3d_new-1.3 {invalid number of sheets} -body {
        mat3d new -1 3 4
    } -returnCodes {
        error
    } -result {Assertion failed: $s >= 1 && $m >= 1 && $n >= 1}

    test mat3d_new-1.4 {invalid number of rows} -body {
        mat3d new 2 -1 4
    } -returnCodes {
        error
    } -result {Assertion failed: $s >= 1 && $m >= 1 && $n >= 1}

    test mat3d_new-1.5 {invalid number of columns} -body {
        mat3d new 2 3 -1
    } -returnCodes {
        error
    } -result {Assertion failed: $s >= 1 && $m >= 1 && $n >= 1}

    #-------------------------------------------------------------------
    # sheets

    test mat3d_sheets-1.1 {nominal case} -body {
        mat3d sheets [mat3d new 2 3 4]
    } -result {2}

    #-------------------------------------------------------------------
    # rows

    test mat3d_rows-1.1 {nominal case} -body {
        mat3d rows [mat3d new 2 3 4]
    } -result {3}

    #-------------------------------------------------------------------
    # cols

    test mat3d_cols-1.1 {nominal case} -body {
        mat3d cols [mat3d new 2 3 4]
    } -result {4}

    #-------------------------------------------------------------------
    # add

    test mat3d_add-1.1 {nominal case} -body {
        mat3d add $a $b
    } -result {{{2 3 4} {6 7 8} {10 11 12}} {{13 12 11} {11 10 9} {9 8 7}}}

    #-------------------------------------------------------------------
    # sub

    test mat3d_sub-1.1 {nominal case} -body {
        mat3d sub $a $b
    } -result {{{0 1 2} {2 3 4} {4 5 6}} {{5 4 3} {1 0 -1} {-3 -4 -5}}}

    test mat3d_sub-1.2 {a - a} -body {
        mat3d sub $a $a
    } -result {{{0 0 0} {0 0 0} {0 0 0}} {{0 0 0} {0 0 0} {0 0 0}}}

    #-------------------------------------------------------------------
    # scalarmul

    test mat3d_scalarmul-1.1 {nominal case} -body {
        mat3d scalarmul $a 2
    } -result {{{2 4 6} {8 10 12} {14 16 18}} {{18 16 14} {12 10 8} {6 4 2}}}

    #-------------------------------------------------------------------
    # equal

    test mat3d_equal-1.1 {equal matrices} -body {
        mat3d equal $a $a
    } -result {1}

    test mat3d_equal-1.2 {unequal matrices} -body {
        mat3d equal $a $b
    } -result {0}

    #-------------------------------------------------------------------
    # format

    test mat3d_format-1.1 {normal case} -body {
        mat3d format $a %3.1f
    } -result {{{1.0 2.0 3.0} {4.0 5.0 6.0} {7.0 8.0 9.0}} {{9.0 8.0 7.0} {6.0 5.0 4.0} {3.0 2.0 1.0}}}

    #-------------------------------------------------------------------
    # pprint

    test mat3d_pprint-1.1 {explicit sheet labels} -body {
        mat3d pprint $a {"Test Sheet A" "Test Sheet B"}
    } -result {Test Sheet A
      Col 0 Col 1 Col 2
Row 0     1     2     3
Row 1     4     5     6
Row 2     7     8     9

Test Sheet B
      Col 0 Col 1 Col 2
Row 0     9     8     7
Row 1     6     5     4
Row 2     3     2     1
}

    test mat3d_pprint-1.2 {default sheet labels} -body {
        mat3d pprint $a
    } -result {Sheet 0:
      Col 0 Col 1 Col 2
Row 0     1     2     3
Row 1     4     5     6
Row 2     7     8     9

Sheet 1:
      Col 0 Col 1 Col 2
Row 0     9     8     7
Row 1     6     5     4
Row 2     3     2     1
}

    #-------------------------------------------------------------------
    # pprintf

    test mat3d_pprintf-1.1 {explicit sheet labels} -body {
        mat3d pprintf $a "%2.1f" {"Test Sheet A" "Test Sheet B"}
    } -result {Test Sheet A
      Col 0 Col 1 Col 2
Row 0   1.0   2.0   3.0
Row 1   4.0   5.0   6.0
Row 2   7.0   8.0   9.0

Test Sheet B
      Col 0 Col 1 Col 2
Row 0   9.0   8.0   7.0
Row 1   6.0   5.0   4.0
Row 2   3.0   2.0   1.0
}

    test mat3d_pprintf-1.2 {default sheet labels} -body {
        mat3d pprintf $a "%2.1f"
    } -result {Sheet 0:
      Col 0 Col 1 Col 2
Row 0   1.0   2.0   3.0
Row 1   4.0   5.0   6.0
Row 2   7.0   8.0   9.0

Sheet 1:
      Col 0 Col 1 Col 2
Row 0   9.0   8.0   7.0
Row 1   6.0   5.0   4.0
Row 2   3.0   2.0   1.0
}

    #-------------------------------------------------------------------
    # pprintq

    test mat3d_pprintq-1.1 {explicit sheet labels} -body {
        mat3d pprintq $a [namespace current]::goodness \
            {"Test Sheet A" "Test Sheet B"}
    } -result {Test Sheet A
      Col 0 Col 1 Col 2
Row 0  VB=1   B=2   B=3
Row 1   N=4   N=5   G=6
Row 2   G=7  VG=8  VG=9

Test Sheet B
      Col 0 Col 1 Col 2
Row 0  VG=9  VG=8   G=7
Row 1   G=6   N=5   N=4
Row 2   B=3   B=2  VB=1
}

    test mat3d_pprintq-1.2 {default sheet labels} -body {
        mat3d pprintq $a [namespace current]::goodness
    } -result {Sheet 0:
      Col 0 Col 1 Col 2
Row 0  VB=1   B=2   B=3
Row 1   N=4   N=5   G=6
Row 2   G=7  VG=8  VG=9

Sheet 1:
      Col 0 Col 1 Col 2
Row 0  VG=9  VG=8   G=7
Row 1   G=6   N=5   N=4
Row 2   B=3   B=2  VB=1
}


    #-------------------------------------------------------------------
    # Cleanup

    cleanupTests
}

namespace delete ::marsutil::test







