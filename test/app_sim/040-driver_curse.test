# -*-Tcl-*-
#-----------------------------------------------------------------------
# TITLE:
#   040-driver_curse.test
#
# AUTHOR:
#   Dave Hanks
#
# DESCRIPTION:
#   CURSE tests.
#
#   This test suite tests that the rules fire when appropriate.
#
#-----------------------------------------------------------------------

#-----------------------------------------------------------------------
# Test Suite
#
# The tests run in a namespace so as not to interfere with other
# test suites.

namespace eval ::athena_test::tests:: {
    #-------------------------------------------------------------------
    # Set up the test environment

    # Import tcltest(n)
    namespace import ::tcltest::*

    # Define an htools buffer for tests
    htools ht

    # pprint text
    #
    # text  - block text
    #
    # Prints it so that it looks nice in a -result option.

    proc pprint {text} {
        return "\n[string trim $text]\n    "
    }

    # setup 
    #
    # Sets up for tests.
    
    proc setup {} {
        # FIRST, other rule sets shouldn't muddy the waters.
        parm set dam.PRESENCE.active no
        parm set dam.ENI.active no
        parm set dam.CONSUMP.active no
        parm set dam.UNEMP.active no
        rdb eval {DELETE FROM drivers}
        rdb eval {DELETE FROM mads}
        
        # NEXT, create the entities
        ted create JOE BOB NB1 SHIA SUNN BLUE

        ted order CURSE:CREATE curse_id C1
        ted order CURSE:CREATE curse_id C2
        ted order CURSE:CREATE curse_id C3
        ted order CURSE:CREATE curse_id C4
        ted order CURSE:CREATE curse_id C5

        # NEXT, add INJECTS to CURSES
        # Individual injects
        ted order INJECT:HREL:CREATE curse_id C1 f @CIV1 g @FRC1 mag S+
        ted order INJECT:VREL:CREATE curse_id C2 g @CIV1 a @ACT1 mag M+
        ted order INJECT:SAT:CREATE  curse_id C3 g @CIV1 c AUT   mag L+
        ted order INJECT:COOP:CREATE curse_id C4 f @CIV1 g @FRC1 mag XL+

        # Multiple injects
        ted order INJECT:HREL:CREATE curse_id C5 f @CIV1 g @FRC1 mag S+
        ted order INJECT:VREL:CREATE curse_id C5 g @CIV1 a @ACT1 mag M+
        ted order INJECT:SAT:CREATE  curse_id C5 g @CIV1 c AUT   mag L+
        ted order INJECT:COOP:CREATE curse_id C5 f @CIV1 g @FRC1 mag XL+
    }
    
    # curse cid roles
    #
    # cid      - The ID of the curse to cast
    # roles    - The role mapping for the curse
    #
    # Creates the BROADCAST tactic, and locks the scenario.

    proc curse {cid roles} {
        ted order TACTIC:CURSE:CREATE \
            owner       SYSTEM \
            curse       $cid   \
            roles       $roles \
            on_lock     YES    \
            once        NO

        ted lock
    }
    
    # Clean up after a test
    proc cleanup {} {
        ht clear
        ted cleanup
    }

    
    #-------------------------------------------------------------------
    # assess
    
    test assess-1.1 {Rule 1-1 fires} -setup {
        setup
    } -body {
        
        curse C1 {
            @CIV1 {_type CIVGROUPS _rule BY_VALUE raw_value {SHIA SUNN}}
            @FRC1 {_type FRCGROUPS _rule BY_VALUE raw_value BLUE}
        }

        ted querylist {
            SELECT * FROM rule_firings
        }
    } -cleanup {
        cleanup
    } -result {
firing_id  1
t          0
driver_id  1000
ruleset    CURSE
rule       CURSE-1-1
fdict      dtype CURSE curse_id C1 atype hrel mode T mag 3.0 f {SHIA SUNN} g BLUE
    }
    
    test assess-1.2 {Rule 2-1 fires} -setup {
        setup
    } -body {
        
        curse C2 {
            @CIV1 {_type CIVGROUPS _rule BY_VALUE raw_value {SHIA SUNN}}
            @ACT1 {_type ACTORS _rule BY_VALUE raw_value JOE}
        }

        ted querylist {
            SELECT * FROM rule_firings
        }
    } -cleanup {
        cleanup
    } -result {
firing_id  1
t          0
driver_id  1000
ruleset    CURSE
rule       CURSE-2-1
fdict      dtype CURSE curse_id C2 atype vrel mode T mag 5.0 g {SHIA SUNN} a JOE
    }
    
    test assess-1.3 {Rule 3-1 fires} -setup {
        setup
    } -body {
        
        curse C3 {
            @CIV1 {_type CIVGROUPS _rule BY_VALUE raw_value {SHIA SUNN}}
        }

        ted querylist {
            SELECT * FROM rule_firings
        }
    } -cleanup {
        cleanup
    } -result {
firing_id  1
t          0
driver_id  1000
ruleset    CURSE
rule       CURSE-3-1
fdict      dtype CURSE curse_id C3 atype sat mode T mag 7.5 c AUT g {SHIA SUNN}
    }
    
    test assess-1.4 {Rule 4-1 fires} -setup {
        setup
    } -body {
        
        curse C4 {
            @CIV1 {_type CIVGROUPS _rule BY_VALUE raw_value {SHIA SUNN}}
            @FRC1 {_type FRCGROUPS _rule BY_VALUE raw_value BLUE}
        }

        ted querylist {
            SELECT * FROM rule_firings
        }
    } -cleanup {
        cleanup
    } -result {
firing_id  1
t          0
driver_id  1000
ruleset    CURSE
rule       CURSE-4-1
fdict      dtype CURSE curse_id C4 atype coop mode T mag 10.0 f {SHIA SUNN} g BLUE
    }
    
    test assess-1.5 {Rule 1-1 inputs} -setup {
        setup
    } -body {
        curse C5 {
            @CIV1 {_type CIVGROUPS _rule BY_VALUE raw_value {SHIA SUNN}}
            @FRC1 {_type FRCGROUPS _rule BY_VALUE raw_value BLUE}
            @ACT1 {_type ACTORS    _rule BY_VALUE raw_value JOE}
        }

        ted query {
            SELECT rule, atype, f, g, c, a
            FROM rule_firings JOIN rule_inputs USING (firing_id)
        }
    } -cleanup {
        cleanup
    } -result {
rule      atype f    g    c   a   
--------- ----- ---- ---- --- --- 
CURSE-1-1 hrel  SHIA BLUE         
CURSE-1-1 hrel  SUNN BLUE         
CURSE-2-1 vrel       SHIA     JOE 
CURSE-2-1 vrel       SUNN     JOE 
CURSE-3-1 sat        SHIA AUT     
CURSE-3-1 sat        SUNN AUT     
CURSE-4-1 coop  SHIA BLUE         
CURSE-4-1 coop  SUNN BLUE         
    }

    #-------------------------------------------------------------------
    # sigline

    test sigline-1.1 {sigline output} -setup {
        setup
    } -body {
        driver::CURSE sigline "C5" 
    } -cleanup {
        cleanup
    } -result {C5}
         

    #-------------------------------------------------------------------
    # narrative

    test narrative-1.1 {narrative output} -setup {
        setup
    } -body {
        driver::CURSE narrative {
            curse_id   C1
            atype      hrel
            mode       transient
            f          SHIA
            g          BLUE
            mag        1.0
        } 
    } -cleanup {
        cleanup
    } -result {CURSE {curse:C1} hrel transient SHIA with BLUE 1.0}

    test narrative-1.2 {narrative output} -setup {
        setup
    } -body {
        driver::CURSE narrative {
            curse_id   C1
            atype      vrel
            mode       transient
            g          BLUE
            a          JOE
            mag        1.0
        } 
    } -cleanup {
        cleanup
    } -result {CURSE {curse:C1} vrel transient BLUE with JOE 1.0}

    test narrative-1.3 {narrative output} -setup {
        setup
    } -body {
        driver::CURSE narrative {
            curse_id   C1
            atype      sat
            mode       transient
            g          {SHIA SUNN}
            c          SFT
            mag        1.0
        } 
    } -cleanup {
        cleanup
    } -result {CURSE {curse:C1} sat transient SHIA, SUNN with SFT 1.0}

    test narrative-1.4 {narrative output} -setup {
        setup
    } -body {
        driver::CURSE narrative {
            curse_id   C1
            atype      coop
            mode       transient
            f          SHIA
            g          BLUE
            mag        1.0
        } 
    } -cleanup {
        cleanup
    } -result {CURSE {curse:C1} coop transient SHIA with BLUE 1.0}

         
    #-------------------------------------------------------------------
    # detail

    test detail-1.1 {detail, C5} -setup {
        setup
    } -body {
        driver::CURSE detail {
            curse_id C5
        } [namespace current]::ht

        pprint [ht get] 
    } -cleanup {
        cleanup
    } -result {
<a href="my://app/curse/C5">CURSE C5</a>: C5<p>
    }
    

    
    cleanupTests
}

namespace delete ::athena_test::tests::









