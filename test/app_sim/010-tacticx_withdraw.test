# -*-Tcl-*-
#-----------------------------------------------------------------------
# TITLE:
#    010-tacticx_withdraw.test
#
# AUTHOR:
#    Will Duquette
#
# DESCRIPTION:
#    tacticx_withdraw(sim) tests.
#
#    This test suite tests the tacticx_withdraw(sim) class.
#
#-----------------------------------------------------------------------

#-----------------------------------------------------------------------
# Test Suite
#
# The tests run in a namespace so as not to interfere with other
# test suites.

namespace eval ::athena_test::tests:: {
    #-------------------------------------------------------------------
    # Set up the test environment

    # Import tcltest(n)
    namespace import ::tcltest::*

    # Set up for tests

    proc setup {} {
        variable T1
        variable coffer
        ted create JOE BOB NB1 NB2 BLUE BRIT SHIA SUNN KURD
        cash load
        set coffer [coffer new JOE]


        strategy::JOE addblock_
        set block [lindex [strategy::JOE blocks] end]
        set T1 [tacticx::WITHDRAW new $block]
    }

    # Clean up after a test

    proc cleanup {} {
        variable coffer
        $coffer destroy
        ted cleanup
    }

    #-------------------------------------------------------------------
    # Constructor

    test constructor-1.1 {default state} -setup {
        setup
    } -body {
        ted pdict [$T1 getdict]
    } -cleanup {
        cleanup
    } -match glob -result {
        amount     0.0
        id         *
        execstatus NONE
        state      normal
        block      ::bean::block*
    }

    

    #-------------------------------------------------------------------
    # narrative

    test narrative-1.1 {narrative, default state} -setup {
        setup
    } -body {
        $T1 narrative
    } -cleanup {
        cleanup
    } -result {Withdraw $0.00 from the cash reserve.}

    test narrative-1.2 {narrative, with amount} -setup {
        setup
        $T1 set amount 10.0
    } -body {
        $T1 narrative
    } -cleanup {
        cleanup
    } -result {Withdraw $10.00 from the cash reserve.}

    #-------------------------------------------------------------------
    # check

    test check-1.1 {Initial state succeeds} -setup {
        setup
    } -body {
        $T1 check
    } -cleanup {
        cleanup
    } -result {}

    #-------------------------------------------------------------------
    # obligate

    test obligate-1.1 {Sufficient cash} -setup {
        setup
    } -body {
        $T1 set amount 100.0

        set a [$T1 obligate $coffer]
        set b [$coffer cash]
        set c [$coffer reserve]

        list $a $b $c
    } -cleanup {
        cleanup
    } -result {1 10100.0 199900.0}

    test obligate-1.2 {Insufficient cash} -setup {
        setup
    } -body {
        $T1 set amount 400000.0

        set a [$T1 obligate $coffer]
        set b [$coffer cash]
        set c [$coffer reserve]

        list $a $b $c
    } -cleanup {
        cleanup
    } -result {1 410000.0 -200000.0}

    #-------------------------------------------------------------------
    # execute

    test execute-1.1 {always succeeds} -setup {
        setup
        $T1 set amount 1000.0
        $T1 obligate $coffer
    } -body {
        $T1 execute
        ted query {SELECT * FROM working_cash WHERE a='JOE'}
    } -cleanup {
        cleanup
    } -result {
a   cash_reserve income  cash_on_hand gifts 
--- ------------ ------- ------------ ----- 
JOE 199000.0     10000.0 11000.0      0.0   
    }

    #-------------------------------------------------------------------
    # Cleanup

    cleanupTests
}

namespace delete ::athena_test::tests::







