# -*-Tcl-*-
#-----------------------------------------------------------------------
# TITLE:
#    010-tactic_fund.test
#
# AUTHOR:
#    Will Duquette
#
# DESCRIPTION:
#    tactic_fund(sim) tests.
#
#    This test suite tests the tactic::FUND ensemble.
#
#-----------------------------------------------------------------------

#-----------------------------------------------------------------------
# Test Suite
#
# The tests run in a namespace so as not to interfere with other
# test suites.

namespace eval ::athena_test::tests:: {
    #-------------------------------------------------------------------
    # Set up the test environment

    # Import tcltest(n)
    namespace import ::tcltest::*

    # Set up for tests

    proc setup {} {
        ted create JOE BOB

        # Verify that unused columns contain NULL
        rdb nullvalue "@"
    }

    proc execute_setup {} {
        setup
        cash load
    }


    # Clean up after a test

    proc cleanup {} {
        # Clean up the test environment
        rdb nullvalue ""
        array unset parms
        ted cleanup
    }

    set T1 {
        tactic_type FUND
        owner       JOE
        priority    top
        a           BOB
        x1          2000.0
    }

    #-------------------------------------------------------------------
    # narrative

    test narrative-1.1 {narrative} -setup {
        setup
        tactic mutate create $T1
    } -body {
        tactic::FUND narrative [tactic get 1]
    } -cleanup {
        cleanup
    } -result {Fund actor BOB with $2,000.00/week.}

    #-------------------------------------------------------------------
    # check

    test check-1.1 {check: a no longer exists} -setup {
        setup
        tactic mutate create $T1
        rdb eval {DELETE FROM actors WHERE a='BOB'}
    } -body {
        tactic::FUND check [tactic get 1]
    } -cleanup {
        cleanup
    } -result {Actor BOB no longer exists.}

    test check-1.2 {check: OK} -setup {
        setup
        tactic mutate create $T1
    } -body {
        tactic::FUND check [tactic get 1]
    } -cleanup {
        cleanup
    } -result {}


    #-------------------------------------------------------------------
    # dollars

    test dollars-1.1 {dollars = x1} -setup {
        setup
        tactic mutate create $T1
    } -body {
        tactic::FUND dollars [tactic get 1]
    } -cleanup {
        cleanup
    } -result {2,000.00}

    #-------------------------------------------------------------------
    # execute

    test execute-1.1 {execute: insufficient funds} -setup {
        execute_setup
        rdb eval {UPDATE working_cash SET cash_on_hand=0}
        tactic mutate create $T1
    } -body {
        tactic::FUND execute [tactic get 1]
    } -cleanup {
        cleanup
    } -result {0}

    test execute-1.2 {execute: 1 on success} -setup {
        execute_setup
        tactic mutate create $T1
    } -body {
        tactic::FUND execute [tactic get 1]
    } -cleanup {
        cleanup
    } -result {1}

    test execute-1.3 {execute: money is transferred} -setup {
        execute_setup
        tactic mutate create $T1
    } -body {
        tactic::FUND execute [tactic get 1]
        # Money taken from JOE's cash_on_hand and placed in BOB's gifts.
        ted query {SELECT * FROM working_cash}
    } -cleanup {
        cleanup
    } -result {
a   cash_reserve income  cash_on_hand gifts  
--- ------------ ------- ------------ ------ 
JOE 200000.0     10000.0 8000.0       0.0    
BOB 150000.0     5000.0  5000.0       2000.0 
    }

    #-------------------------------------------------------------------
    # Cleanup

    cleanupTests
}

namespace delete ::athena_test::tests::





