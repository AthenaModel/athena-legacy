# -*-Tcl-*-
#-----------------------------------------------------------------------
# TITLE:
#    010-econ.test
#
# AUTHOR:
#    Will Duquette
#
# DESCRIPTION:
#    econ(sim) tests.
#
#    This test suite tests the econ(sim) mutators and queries
#
#-----------------------------------------------------------------------

#-----------------------------------------------------------------------
# Test Suite
#
# The tests run in a namespace so as not to interfere with other
# test suites.

namespace eval ::athena_test::tests:: {
    #-------------------------------------------------------------------
    # Set up the test environment

    # Import tcltest(n)
    namespace import ::tcltest::*

    # Clean up after a test

    proc cleanup {} {
        # Clean up the test environment
        ted cleanup
    }

    #-------------------------------------------------------------------
    # mutate update

    test update-1.1 {econ is updated} -setup {
        ted create NB1 NB2
    } -body {
        econ mutate update {
            n   NB1
            pcf 2.0
        }

        ted query {SELECT * FROM econ_n}
    } -cleanup {
        cleanup
    } -result {
n   pcf ccf cap0 cap 
--- --- --- ---- --- 
NB1 2.0 0.0 0.0  0.0 
NB2 1.0 0.0 0.0  0.0 
    }


    test update-1.2 {identical values are OK} -setup {
        ted create NB1 NB2

        set parmdict {
            n    NB1
            pcf  2.0
        }

        econ mutate update $parmdict
    } -body {
        set a [ted query {SELECT * FROM econ_n}]
        
        econ mutate update $parmdict

        set b [ted query {SELECT * FROM econ_n}]

        expr {$a eq $b}
    } -cleanup {
        cleanup
    } -result {1}


    test update-1.3 {empty values are OK} -setup {
        ted create NB1 NB2
    } -body {
        set a [ted query {SELECT * FROM econ_n}]

        econ mutate update {
            n   NB1
            pcf ""
        }

        set b [ted query {SELECT * FROM econ_n}]

        expr {$a eq $b}
    } -cleanup {
        cleanup
    } -result {1}


    test update-1.4 {<Entity> update} -setup {
        ted create NB1 NB2
    } -body {
        ted notifier bind ::econ <Entity>
        econ mutate update {
            n   NB1
            pcf 2.0
        }
        ted notifier received
    } -cleanup {
        cleanup
    } -result {
        {::econ <Entity> update NB1}
    }


    test update-2.1 {undo undoes the change} -setup {
        ted create NB1 NB2
    } -body {

        set a [ted query {SELECT * FROM econ_n}]

        set undo [econ mutate update {
            n   NB1
            pcf 2.0
        }]

        eval $undo

        set b [ted query {SELECT * FROM econ_n}]

        expr {$a eq $b}
    } -cleanup {
        cleanup
    } -result {1}


    test update-2.2 {undo sends <Entity> update} -setup {
        ted create NB1 NB2
    } -body {
        set undo [econ mutate update {
            n   NB1
            pcf 2.0
        }]

        ted notifier bind ::econ <Entity>
        eval $undo
        ted notifier received
    } -cleanup {
        cleanup
    } -result {
        {::econ <Entity> update NB1}
    }

    #-------------------------------------------------------------------
    # Cleanup

    cleanupTests
}

namespace delete ::athena_test::tests::





