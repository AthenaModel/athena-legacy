# -*-Tcl-*-
#-----------------------------------------------------------------------
# TITLE:
#    020-RELATIONSHIP.test
#
# AUTHOR:
#    Will Duquette
#
# DESCRIPTION:
#    app_sim(1) REL:* order tests.
#
#    This test suite tests the relationship-related orders.
#
#-----------------------------------------------------------------------

#-----------------------------------------------------------------------
# Test Suite
#
# The tests run in a namespace so as not to interfere with other
# test suites.

namespace eval ::athena_test::tests:: {
    #-------------------------------------------------------------------
    # Set up the test environment

    # Import tcltest(n)
    namespace import ::tcltest::*

    proc setup {} {
        ted create BLUE NB1 SHIA SUNN
        rel mutate reconcile
    }


    # Clean up after a test

    proc cleanup {} {
        ted cleanup
    }


    #-------------------------------------------------------------------
    # REL:UPDATE

    test UPDATE-1.1 {required parms} -body {
        ted order -reject REL:UPDATE {}
    } -result {
        id {required value}
    }
    

    test UPDATE-1.2 {invalid f, g} -setup {
        setup
    } -body {
        ted order -reject REL:UPDATE id {NONESUCH NONESUCH}
    } -cleanup {
        cleanup
    } -result {
        id {Invalid group, should be one of: BLUE, SHIA, SUNN}
    }


    test UPDATE-1.3 {invalid rel: out of range} -setup {
        setup
    } -body {
        ted order -reject REL:UPDATE id {SHIA BLUE} rel 1.1
    } -cleanup {
        cleanup
    } -result {
        rel {invalid value "1.1", should be a real number in range -1.0, 1.0, or one of: FRIEND, NEUTRAL, ENEMY}
    }


    test UPDATE-1.4 {f=g but rel != 1.0} -setup {
        setup
    } -body {
        ted order -reject REL:UPDATE id {SHIA SHIA} rel 0.5
    } -cleanup {
        cleanup
    } -result {
        rel {invalid value "0.5", a group's relationship with itself must be 1.0}
    }


    test UPDATE-2.1 {rel is updated} -setup {
        setup
    } -body {
        ted order REL:UPDATE {
            id    {SHIA BLUE}
            rel   0.5
        }

        ted query {SELECT * FROM rel_fg}
    } -cleanup {
        cleanup
    } -result {
f    g    rel 
---- ---- --- 
BLUE BLUE 1.0 
BLUE SHIA 0.0 
BLUE SUNN 0.0 
SHIA BLUE 0.5 
SHIA SHIA 1.0 
SHIA SUNN 0.0 
SUNN BLUE 0.0 
SUNN SHIA 0.0 
SUNN SUNN 1.0 
    }


    test UPDATE-2.2 {<Entity> update} -setup {
        setup
    } -body {
        ted notifier bind ::rdb <rel_fg>
        ted order REL:UPDATE id {SHIA BLUE} rel 0.5
        ted notifier received
    } -cleanup {
        cleanup
    } -result {
        {::rdb <rel_fg> update {SHIA BLUE}}
    }


    test UPDATE-3.1 {undo undoes the change} -setup {
        setup

        ted order REL:UPDATE {
            id    {SHIA BLUE}
            rel   0.5
        }
    } -body {
        ted notifier bind ::rdb <rel_fg>
        cif undo -test
        ted notifier received
    } -cleanup {
        cleanup
    } -result {
        {::rdb <rel_fg> update {SHIA BLUE}}
    }

    #-------------------------------------------------------------------
    # REL:UPDATE:MULTI

    test UPDATE:MULTI-1.1 {required parms} -setup {
        setup
    } -body {
        ted order -reject REL:UPDATE:MULTI {}
    } -cleanup {
        cleanup
    } -result {
        ids {required value}
    }
    

    test UPDATE:MULTI-1.2 {invalid f in ids} -setup {
        setup
    } -body {
        ted order -reject REL:UPDATE:MULTI \
            ids {{NONESUCH BLUE}}
    } -cleanup {
        cleanup
    } -result {
        ids {Invalid group, should be one of: BLUE, SHIA, SUNN}
    }


    test UPDATE:MULTI-1.3 {invalid g in ids} -setup {
        setup
    } -body {
        ted order -reject REL:UPDATE:MULTI \
            ids {{SHIA NONESUCH}}
    } -cleanup {
        cleanup
    } -result {
        ids {Invalid group, should be one of: BLUE, SHIA, SUNN}
    }


    test UPDATE:MULTI-1.5 {invalid rel: out of range} -setup {
        setup
    } -body {
        ted order -reject REL:UPDATE:MULTI \
            ids {{SHIA BLUE}} rel 1.1
    } -cleanup {
        cleanup
    } -result {
        rel {invalid value "1.1", should be a real number in range -1.0, 1.0, or one of: FRIEND, NEUTRAL, ENEMY}
    }


    test UPDATE:MULTI-1.6 {f=g but rel != 1.0} -setup {
        setup
    } -body {
        ted order -reject REL:UPDATE:MULTI \
            ids {{SHIA SHIA} {SHIA BLUE}} rel 0.5
    } -cleanup {
        cleanup
    } -result {
        rel {invalid value "0.5", a group's relationship with itself must be 1.0}
    }


    test UPDATE:MULTI-2.1 {one relationship of several is updated} -setup {
        setup
    } -body {
        ted notifier bind ::rdb <rel_fg>

        ted order REL:UPDATE:MULTI {
            ids       {{SHIA BLUE}}
            rel       0.5
        }

        ted notifier received
    } -cleanup {
        cleanup
    } -result {
        {::rdb <rel_fg> update {SHIA BLUE}}
    }


    test UPDATE:MULTI-2.2 {several relationships are updated} -setup {
        setup
    } -body {
        ted notifier bind ::rdb <rel_fg>
        ted order REL:UPDATE:MULTI {
            ids   {{SHIA BLUE} {BLUE SHIA}} 
            rel   0.5
        }
        ted notifier received
    } -cleanup {
        cleanup
    } -result {
        {::rdb <rel_fg> update {SHIA BLUE}}
        {::rdb <rel_fg> update {BLUE SHIA}}
    }


    test UPDATE:MULTI-3.1 {undo undoes the change} -setup {
        setup

        ted order REL:UPDATE:MULTI {
            ids        {{SHIA BLUE} {BLUE SHIA}}
            rel        0.5
        }
    } -body {
        ted notifier bind ::rdb <rel_fg>
        cif undo -test
        ted notifier received
    } -cleanup {
        cleanup
    } -result {
        {::rdb <rel_fg> update {SHIA BLUE}}
        {::rdb <rel_fg> update {BLUE SHIA}}
    }


    #-------------------------------------------------------------------
    # Cleanup

    cleanupTests
}

namespace delete ::athena_test::tests::







