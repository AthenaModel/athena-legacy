# -*-Tcl-*-
#-----------------------------------------------------------------------
# TITLE:
#    020-CONDITION-TROOPS.test
#
# AUTHOR:
#    Will Duquette
#
# DESCRIPTION:
#    app_sim(1) CONDITION:TROOPS:* order tests.
#
#    This test suite tests the CONDITION:TROOPS:* orders.
#
#-----------------------------------------------------------------------

#-----------------------------------------------------------------------
# Test Suite
#
# The tests run in a namespace so as not to interfere with other
# test suites.

namespace eval ::athena_test::tests:: {
    #-------------------------------------------------------------------
    # Set up the test environment

    # Import tcltest(n)
    namespace import ::tcltest::*

    # Set up for tests
    proc setup {} {
        ted create JOE BOB NB1 NB2 BLUE BRIT ALQ
        ted order TACTIC:DEPOSIT:CREATE owner JOE amount 10
    }


    # Clean up after a test

    proc cleanup {} {
        # Clean up the test environment
        ted cleanup
    }

    # Standard items

    set C1 {
        cc_id          1
        g              BLUE
        op1            GT
        int1           10000
    }

    #-------------------------------------------------------------------
    # CONDITION:TROOPS:CREATE

    test TROOPS:CREATE-1.1 {required parms} -body {
        ted order -reject CONDITION:TROOPS:CREATE {}
    } -result {
        cc_id {required value}
        g {required value}
        op1 {required value}
        int1 {required value}
    }

    
    test TROOPS:CREATE-1.2 {tactic is unknown} -setup {
        setup
    } -body {
        ted order -reject CONDITION:TROOPS:CREATE \
            [dict merge $C1 [list cc_id NONESUCH]]
    } -cleanup {
        cleanup
    } -result {
        cc_id {Invalid goal or tactic ID: "NONESUCH"}
    }

    test TROOPS:CREATE-1.3 {group is unknown} -setup {
        setup
    } -body {
        ted order -reject CONDITION:TROOPS:CREATE \
            [dict merge $C1 [list g NONESUCH]]
    } -cleanup {
        cleanup
    } -result {
        g {Invalid force/org group "NONESUCH", should be one of: ALQ, BLUE, BRIT}
    }

    test TROOPS:CREATE-1.4 {op1 is invalid} -setup {
        setup
    } -body {
        ted order -reject CONDITION:TROOPS:CREATE \
            [dict merge $C1 [list op1 NONESUCH]]
    } -cleanup {
        cleanup
    } -result {
        op1 {invalid value "NONESUCH", should be one of: EQ, GE, GT, LE, LT}
    }

    test TROOPS:CREATE-1.5 {int1 is invalid} -setup {
        setup
    } -body {
        ted order -reject CONDITION:TROOPS:CREATE [dict merge $C1 {
            int1 NONESUCH
        }]
    } -cleanup {
        cleanup
    } -result {
        int1 {invalid value "NONESUCH", expected integer}
    }

    test TROOPS:CREATE-2.1 {condition is created} -setup {
        setup
    } -body {
        ted order CONDITION:TROOPS:CREATE $C1

        ted querylist {SELECT * FROM conditions_TROOPS}
    } -cleanup {
        cleanup
    } -result {
condition_id    1
condition_type  TROOPS
cc_id           1
narrative       Group BLUE's total number of personnel in the playbox is greater than 10,000.
state           normal
flag            
g               BLUE
op1             GT
int1            10000
    }


    test TROOPS:CREATE-2.2 {Effects} -setup {
        setup
    } -body {
        ted notifier bind ::rdb <conditions>
        ted order CONDITION:TROOPS:CREATE $C1
        ted notifier received
    } -cleanup {
        cleanup
    } -result {
        {::rdb <conditions> update 1}
    }


    test TROOPS:CREATE-3.1 {undo effects} -setup {
        setup
        ted order CONDITION:TROOPS:CREATE $C1
    } -body {
        ted notifier bind ::rdb <conditions>
        cif undo -test
        ted notifier received
    } -cleanup {
        cleanup
    } -result {
        {::rdb <conditions> delete 1}
    }


    #-------------------------------------------------------------------
    # CONDITION:TROOPS:UPDATE

    proc setup_update_savings {} {
        variable C1
        setup
        ted order CONDITION:TROOPS:CREATE $C1
    }

    test TROOPS:UPDATE-1.1 {required parms} -body {
        ted order -reject CONDITION:TROOPS:UPDATE {}
    } -result {
        condition_id {required value}
    }

    
    test TROOPS:UPDATE-1.2 {condition_id is unknown} -setup {
        setup_update_savings
    } -body {
        ted order -reject CONDITION:TROOPS:UPDATE condition_id NONESUCH int1 10
    } -cleanup {
        cleanup
    } -result {
        condition_id {Invalid condition ID: "NONESUCH"}
    }

    test TROOPS:UPDATE-1.3 {group is unknown} -setup {
        setup_update_savings
    } -body {
        ted order -reject CONDITION:TROOPS:UPDATE condition_id 1 g NONESUCH
    } -cleanup {
        cleanup
    } -result {
        g {Invalid force/org group "NONESUCH", should be one of: ALQ, BLUE, BRIT}
    }

    test TROOPS:UPDATE-1.4 {op1 is invalid} -setup {
        setup_update_savings
    } -body {
        ted order -reject CONDITION:TROOPS:UPDATE condition_id 1 op1 NONESUCH
    } -cleanup {
        cleanup
    } -result {
        op1 {invalid value "NONESUCH", should be one of: EQ, GE, GT, LE, LT}
    }

    test TROOPS:UPDATE-1.5 {int1 is invalid} -setup {
        setup_update_savings
    } -body {
        ted order -reject CONDITION:TROOPS:UPDATE condition_id 1 int1 NONESUCH
    } -cleanup {
        cleanup
    } -result {
        int1 {invalid value "NONESUCH", expected integer}
    }

    test TROOPS:UPDATE-1.6 {wrong flavor of condition} -setup {
        setup_update_savings
        rdb eval {UPDATE conditions SET condition_type='BOGUS'}
    } -body {
        ted order -reject CONDITION:TROOPS:UPDATE condition_id 1 int1 5
    } -cleanup {
        cleanup
    } -result {
        condition_id {Condition 1 is not a TROOPS condition}
    }

    test TROOPS:UPDATE-2.1 {activities are updated} -setup {
        setup_update_savings
    } -body {
        ted order CONDITION:TROOPS:UPDATE condition_id 1 g BRIT op1 EQ int1 20

        ted querylist {SELECT * FROM conditions_TROOPS}
    } -cleanup {
        cleanup
    } -result {
condition_id    1
condition_type  TROOPS
cc_id           1
narrative       Group BRIT's total number of personnel in the playbox is equal to 20.
state           normal
flag            
g               BRIT
op1             EQ
int1            20
    }


    test TROOPS:UPDATE-2.2 {Effects} -setup {
        setup_update_savings
    } -body {
        ted notifier bind ::rdb <conditions>
        ted order CONDITION:TROOPS:UPDATE condition_id 1 int1 20
        ted notifier received
    } -cleanup {
        cleanup
    } -result {
        {::rdb <conditions> update 1}
    }


    test TROOPS:UPDATE-3.1 {undo effects} -setup {
        setup_update_savings
        ted order CONDITION:TROOPS:UPDATE condition_id 1 int1 20
    } -body {
        ted notifier bind ::rdb <conditions>
        cif undo -test
        ted notifier received
    } -cleanup {
        cleanup
    } -result {
        {::rdb <conditions> update 1}
    }


    #-------------------------------------------------------------------
    # Cleanup

    cleanupTests
}

namespace delete ::athena_test::tests::







