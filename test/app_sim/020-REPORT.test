# -*-Tcl-*-
#-----------------------------------------------------------------------
# TITLE:
#    020-REPORT.test
#
# AUTHOR:
#    Will Duquette
#
# DESCRIPTION:
#    app_sim(1) REPORT:* order tests.
#
#    This test suite tests the report orders.
#
#-----------------------------------------------------------------------

#-----------------------------------------------------------------------
# Test Suite
#
# The tests run in a namespace so as not to interfere with other
# test suites.

namespace eval ::athena_test::tests:: {
    #-------------------------------------------------------------------
    # Set up the test environment

    # Import tcltest(n)
    namespace import ::tcltest::*

    proc setup {} {
        ted create NB1 NB2 BLUE SHIA NB1SHIA NB2SHIA USAID
        sim mutate run -ticks 1
    }


    # Clean up after a test

    proc cleanup {} {
        # Clean up the test environment
        sim restart
        sim checkpoint
        ted cleanup
    }

    #-------------------------------------------------------------------
    # REPORT:CIVILIAN:SAT

    test CIVILIAN:SAT-1.1 {not in prep} -body {
        ted order -reject REPORT:CIVILIAN:SAT {}
    } -result {
        * {Simulation state is PREP, but order is valid only in these states: PAUSED, RUNNING}
    }


    test CIVILIAN:SAT-1.2 {required parms} -setup {
        setup
    } -body {
        ted order -reject REPORT:CIVILIAN:SAT {}
    } -cleanup {
        cleanup
    } -result {
        n {required value}
        g {required value}
    }


    test CIVILIAN:SAT-1.3 {invalid neighborhood} -setup {
        setup
    } -body {
        ted order -reject REPORT:CIVILIAN:SAT n NONESUCH g SHIA
    } -cleanup {
        cleanup
    } -result {
        n {Invalid neighborhood "NONESUCH", should be one of: ALL, NB1, NB2}
    }


    test CIVILIAN:SAT-1.4 {invalid group} -setup {
        setup
    } -body {
        ted order -reject REPORT:CIVILIAN:SAT n NB1 g NONESUCH
    } -cleanup {
        cleanup
    } -result {
        g {Invalid civilian group "NONESUCH", should be one of: ALL, SHIA}
    }


    test CIVILIAN:SAT-2.1 {n ALL g ALL} -setup {
        setup
    } -body {
        ted order REPORT:CIVILIAN:SAT n ALL g ALL
    } -cleanup {
        cleanup
    } -result {}


    test CIVILIAN:SAT-2.2 {n ALL g SHIA} -setup {
        setup
    } -body {
        ted order REPORT:CIVILIAN:SAT n ALL g SHIA
    } -cleanup {
        cleanup
    } -result {}


    test CIVILIAN:SAT-2.3 {n NB1 g ALL} -setup {
        setup
    } -body {
        ted order REPORT:CIVILIAN:SAT n NB1 g ALL
    } -cleanup {
        cleanup
    } -result {}


    test CIVILIAN:SAT-2.4 {n NB1 g SHIA} -setup {
        setup
    } -body {
        ted order REPORT:CIVILIAN:SAT n NB1 g SHIA
    } -cleanup {
        cleanup
    } -result {}


    #-------------------------------------------------------------------
    # REPORT:DRIVER

    test DRIVER-1.1 {not in prep} -body {
        ted order -reject REPORT:DRIVER {}
    } -result {
        * {Simulation state is PREP, but order is valid only in these states: PAUSED, RUNNING}
    }


    test DRIVER-1.2 {required parms} -setup {
        setup
    } -body {
        ted order -reject REPORT:DRIVER {}
    } -cleanup {
        cleanup
    } -result {
        state {required value}
    }


    test DRIVER-1.3 {invalid state} -setup {
        setup
    } -body {
        ted order -reject REPORT:DRIVER state NONESUCH
    } -cleanup {
        cleanup
    } -result {
        state {invalid value "NONESUCH", should be one of: all, active, inactive, empty}
    }


    test DRIVER-2.1 {can be sent} -setup {
        setup
    } -body {
        ted order REPORT:DRIVER state all
    } -cleanup {
        cleanup
    } -result {}


    #-------------------------------------------------------------------
    # REPORT:ORGANIZATION:SAT

    test ORGANIZATION:SAT-1.1 {not in prep} -body {
        ted order -reject REPORT:ORGANIZATION:SAT {}
    } -result {
        * {Simulation state is PREP, but order is valid only in these states: PAUSED, RUNNING}
    }


    test ORGANIZATION:SAT-1.2 {required parms} -setup {
        setup
    } -body {
        ted order -reject REPORT:ORGANIZATION:SAT {}
    } -cleanup {
        cleanup
    } -result {
        n {required value}
        g {required value}
    }


    test ORGANIZATION:SAT-1.3 {invalid neighborhood} -setup {
        setup
    } -body {
        ted order -reject REPORT:ORGANIZATION:SAT n NONESUCH g USAID
    } -cleanup {
        cleanup
    } -result {
        n {Invalid neighborhood "NONESUCH", should be one of: ALL, NB1, NB2}
    }


    test ORGANIZATION:SAT-1.4 {invalid group} -setup {
        setup
    } -body {
        ted order -reject REPORT:ORGANIZATION:SAT n NB1 g NONESUCH
    } -cleanup {
        cleanup
    } -result {
        g {Invalid organization group "NONESUCH", should be one of: ALL, USAID}
    }


    test ORGANIZATION:SAT-2.1 {n ALL g ALL} -setup {
        setup
    } -body {
        ted order REPORT:ORGANIZATION:SAT n ALL g ALL
    } -cleanup {
        cleanup
    } -result {}


    test ORGANIZATION:SAT-2.2 {n ALL g USAID} -setup {
        setup
    } -body {
        ted order REPORT:ORGANIZATION:SAT n ALL g USAID
    } -cleanup {
        cleanup
    } -result {}


    test ORGANIZATION:SAT-2.3 {n NB1 g ALL} -setup {
        setup
    } -body {
        ted order REPORT:ORGANIZATION:SAT n NB1 g ALL
    } -cleanup {
        cleanup
    } -result {}


    test ORGANIZATION:SAT-2.4 {n NB1 g USAID} -setup {
        setup
    } -body {
        ted order REPORT:ORGANIZATION:SAT n NB1 g USAID
    } -cleanup {
        cleanup
    } -result {}


    #-------------------------------------------------------------------
    # Cleanup

    cleanupTests
}

namespace delete ::athena_test::tests::






