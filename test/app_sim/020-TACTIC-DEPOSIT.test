# -*-Tcl-*-
#-----------------------------------------------------------------------
# TITLE:
#    020-TACTIC-DEPOSIT.test
#
# AUTHOR:
#    Will Duquette
#
# DESCRIPTION:
#    TACTIC:DEPOSIT:* Orders tests
#
#-----------------------------------------------------------------------

#-----------------------------------------------------------------------
# Test Suite
#
# The tests run in a namespace so as not to interfere with other
# test suites.

namespace eval ::athena_test::tests:: {
    #-------------------------------------------------------------------
    # Set up the test environment

    # Import tcltest(n)
    namespace import ::tcltest::*

    # Set up for tests

    proc setup {} {
        ted create JOE
        variable S1
        variable B1
        variable T1
        set S1 [strategy getname JOE]
        ted order STRATEGY:BLOCK:ADD agent JOE
        lassign [$S1 blocks] B1
        ted order BLOCK:TACTIC:ADD block_id [$B1 id] typename DEPOSIT
        lassign [$B1 tactics] T1
    }

    # Clean up after a test

    proc cleanup {} {
        ted cleanup
    }

    #-------------------------------------------------------------------
    # TACTIC:DEPOSIT:UPDATE

    test TACTIC:DEPOSIT:UPDATE-1.1 {required parameters} -setup {
        setup
    } -body {
        ted order -reject TACTIC:DEPOSIT:UPDATE
    } -cleanup {
        cleanup
    } -result {
        tactic_id {required value}
        amount {required value}
    }

    test TACTIC:DEPOSIT:UPDATE-1.2 {unknown tactic_id} -setup {
        setup
    } -body {
        ted order -reject TACTIC:DEPOSIT:UPDATE tactic_id NONESUCH
    } -cleanup {
        cleanup
    } -match glob -result {
        tactic_id {invalid value "NONESUCH", should be one of: *}
    }

    test TACTIC:DEPOSIT:UPDATE-1.3 {invalid amount} -setup {
        setup
    } -body {
        ted order -reject TACTIC:DEPOSIT:UPDATE tactic_id [$T1 id] amount NONESUCH
    } -cleanup {
        cleanup
    } -result {
        amount {invalid money value "NONESUCH", expected positive numeric value with optional K, M, or B suffix}
    }

    test TACTIC:DEPOSIT:UPDATE-2.1 {tactic updated} -setup {
        setup
    } -body {
        ted order TACTIC:DEPOSIT:UPDATE \
            tactic_id [$T1 id] \
            amount    100.0

        ted pdicts [$T1 getdict]
    } -cleanup {
        cleanup
    } -match glob -result {
        amount     100.0
        execstatus NONE
        id         *
        parent     ::bean::block*
        state      normal
    }

    test TACTIC:DEPOSIT:UPDATE-2.2 {notifier event} -setup {
        setup
    } -body {
        ted notifier bind ::projectlib::bean <Monitor>
        ted order TACTIC:DEPOSIT:UPDATE tactic_id [$T1 id] amount 10.0
        ted notifier received
    } -cleanup {
        cleanup
    } -match glob -result {*{::projectlib::bean <Monitor>}*}

    test TACTIC:DEPOSIT:UPDATE-2.3 {undo notifier event} -setup {
        setup
        ted order TACTIC:DEPOSIT:UPDATE tactic_id [$T1 id] amount 10.0
    } -body {
        ted notifier bind ::projectlib::bean <Monitor>
        cif undo -test
        ted notifier received
    } -cleanup {
        cleanup
    } -match glob -result {*{::projectlib::bean <Monitor>}*}
 

    #-------------------------------------------------------------------
    # Cleanup

    cleanupTests
}

namespace delete ::athena_test::tests::







