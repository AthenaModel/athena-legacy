# -*-Tcl-*-
#-----------------------------------------------------------------------
# TITLE:
#    010-tactic_defroe.test
#
# AUTHOR:
#    Will Duquette
#
# DESCRIPTION:
#    defroe(sim) tests.
#
#    This test suite tests the tactic::DEFROE ensemble.
#
#-----------------------------------------------------------------------

#-----------------------------------------------------------------------
# Test Suite
#
# The tests run in a namespace so as not to interfere with other
# test suites.

namespace eval ::athena_test::tests:: {
    #-------------------------------------------------------------------
    # Set up the test environment

    # Import tcltest(n)
    namespace import ::tcltest::*

    # Set up for tests

    proc setup {} {
        ted create JOE BOB NB1 NB2 BLUE BRIT

        # Verify that unused columns contain NULL
        rdb nullvalue "@"
    }

    # Clean up after a test

    proc cleanup {} {
        # Clean up the test environment
        rdb nullvalue ""
        ted cleanup
    }

    set T1 {
        tactic_type DEFROE
        owner       JOE
        priority    top
        n           NB1
        g           BLUE
        text1       HOLD_FIRE
    }

    #-------------------------------------------------------------------
    # narrative

    test narrative-1.1 {narrative} -setup {
        setup
        tactic mutate create $T1
    } -body {
        tactic::DEFROE narrative [tactic get 1]
    } -cleanup {
        cleanup
    } -result {Group BLUE defends in NB1 with ROE HOLD_FIRE}

    #-------------------------------------------------------------------
    # check

    test check-1.1 {check: n no longer exists} -setup {
        setup
        tactic mutate create $T1
        rdb eval {DELETE FROM nbhoods WHERE n='NB1'}
    } -body {
        tactic::DEFROE check [tactic get 1]
    } -cleanup {
        cleanup
    } -result {Neighborhood NB1 no longer exists.}

    test check-1.2 {check: g no longer exists} -setup {
        setup
        tactic mutate create $T1
        rdb eval {DELETE FROM frcgroups WHERE g='BLUE'}
    } -body {
        tactic::DEFROE check [tactic get 1]
    } -cleanup {
        cleanup
    } -result {Force group BLUE no longer exists.}

    test check-1.3 {check: g no longer owned by owner} -setup {
        setup
        tactic mutate create $T1
        rdb eval {UPDATE frcgroups SET a=NULL}
    } -body {
        tactic::DEFROE check [tactic get 1]
    } -cleanup {
        cleanup
    } -result {Force group BLUE is no longer owned by actor JOE.}

    test check-1.4 {check: g no longer uniformed} -setup {
        setup
        tactic mutate create $T1
        rdb eval {UPDATE frcgroups SET uniformed=0}
    } -body {
        tactic::DEFROE check [tactic get 1]
    } -cleanup {
        cleanup
    } -result {Force group BLUE is no longer a uniformed force group.}

    test check-1.5 {check: multiple failures} -setup {
        setup
        tactic mutate create $T1
        rdb eval {UPDATE frcgroups SET a=NULL, uniformed=0}
        rdb eval {DELETE FROM nbhoods WHERE n='NB1'}
    } -body {
        tactic::DEFROE check [tactic get 1]
    } -cleanup {
        cleanup
    } -result {Neighborhood NB1 no longer exists.  Force group BLUE is no longer owned by actor JOE.  Force group BLUE is no longer a uniformed force group.}

    #-------------------------------------------------------------------
    # dollars

    test dollars-1.1 {dollars} -setup {
        setup
        tactic mutate create $T1
    } -body {
        tactic::DEFROE dollars [tactic get 1]
    } -cleanup {
        cleanup
    } -result {n/a}

    #-------------------------------------------------------------------
    # execute

    test execute-1.1 {execute} -setup {
        setup
        tactic mutate create $T1
    } -body {
        tactic::DEFROE execute [tactic get 1]
        ted query {SELECT * FROM defroe_ng}
    } -cleanup {
        cleanup
    } -result {
n   g    roe       
--- ---- --------- 
NB1 BLUE HOLD_FIRE 
    }


    #-------------------------------------------------------------------
    # reset

    test reset-1.1 {All defroes are deleted} -setup {
        ted create NB1 NB2 BLUE

        rdb eval {
            INSERT INTO defroe_ng(n,g,roe)
            VALUES('NB1','BLUE','HOLD_FIRE');
        }
    } -body {
        tactic::DEFROE reset
        ted query {SELECT * FROM defroe_view}
    } -cleanup {
        cleanup
    } -result {
n   g    roe                  override 
--- ---- -------------------- -------- 
NB1 BLUE FIRE_BACK_IF_PRESSED 0        
NB2 BLUE FIRE_BACK_IF_PRESSED 0        
    }



    #-------------------------------------------------------------------
    # Cleanup

    cleanupTests
}

namespace delete ::athena_test::tests::





