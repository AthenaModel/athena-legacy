# -*-Tcl-*-
#-----------------------------------------------------------------------
# TITLE:
#    010-tactic_spend.test
#
# AUTHOR:
#    Will Duquette
#
# DESCRIPTION:
#    tactic_spend(sim) tests.
#
#    This test suite tests the tactic_spend(sim) class.
#
#-----------------------------------------------------------------------

#-----------------------------------------------------------------------
# Test Suite
#
# The tests run in a namespace so as not to interfere with other
# test suites.

namespace eval ::athena_test::tests:: {
    #-------------------------------------------------------------------
    # Set up the test environment

    # Import tcltest(n)
    namespace import ::tcltest::*

    # Set up for tests

    proc setup {} {
        variable T1
        variable coffer
        ted create JOE BOB NB1 NB2 BLUE BRIT SHIA SUNN KURD
        cash load
        set coffer [coffer new JOE]


        set B1 [ted addblock JOE]
        set T1 [ted addtactic $B1 SPEND]
    }

    # Clean up after a test

    proc cleanup {} {
        variable coffer
        $coffer destroy
        ted cleanup
    }

    #-------------------------------------------------------------------
    # Constructor

    test constructor-1.1 {default state} -setup {
        setup
    } -body {
        ted pdict [$T1 getdict]
    } -cleanup {
        cleanup
    } -match glob -result {
        world      1
        state      normal
        execstatus NONE
        amount     0.0
        goods      1
        region     1
        black      1
        id         *
        pop        1
        parent     ::bean::block*
        mode       ALL
    }

    test constructor-1.2 {can set options} -setup {
        setup
    } -body {
        set T1 [tactic::SPEND new -parent DUMMY]
        $T1 get parent
    } -cleanup {
        cleanup
    } -result {DUMMY}
    

    #-------------------------------------------------------------------
    # narrative

    test narrative-1.1 {narrative, default state} -setup {
        setup
    } -body {
        $T1 narrative
    } -cleanup {
        cleanup
    } -result {Spend all remaining cash-on-hand according to the following profile: goods: 20%; black: 20%; pop: 20%; region: 20%; world: 20%}

    test narrative-1.2 {narrative, with amount} -setup {
        setup
        $T1 set mode SOME
        $T1 set amount 10.0
    } -body {
        $T1 narrative
    } -cleanup {
        cleanup
    } -result {Spend 10.00 according to the following profile: goods: 20%; black: 20%; pop: 20%; region: 20%; world: 20%}

    #-------------------------------------------------------------------
    # check

    test check-1.1 {Initial state succeeds} -setup {
        setup
    } -body {
        $T1 check
    } -cleanup {
        cleanup
    } -result {}

    #-------------------------------------------------------------------
    # obligate

    test obligate-1.1 {ALL cash} -setup {
        setup
    } -body {
        $T1 set mode ALL

        set a [$T1 obligate $coffer]
        set b [$coffer cash]

        list $a $b
    } -cleanup {
        cleanup
    } -result {1 0.0}

    test obligate-1.2 {SOME cash} -setup {
        setup
    } -body {
        $T1 set mode SOME
        $T1 set amount 1000.0

        set a [$T1 obligate $coffer]
        set b [$coffer cash]

        list $a $b
    } -cleanup {
        cleanup
    } -result {1 9000.0}

    test obligate-1.3 {insufficient cash on tick} -setup {
        setup
    } -body {
        $T1 set mode SOME
        $T1 set amount 10001.0

        set a [$T1 obligate $coffer]
        set b [$coffer cash]

        list $a $b
    } -cleanup {
        cleanup
    } -result {0 10000.0}

    test obligate-1.4 {insufficient cash on lock} -setup {
        setup
        strategy locking 1
    } -body {
        $T1 set mode SOME
        $T1 set amount 10001.0

        set a [$T1 obligate $coffer]
        set b [$coffer cash]

        list $a $b
    } -cleanup {
        cleanup
    } -result {1 0.0}

    test obligate-1.4 {no cash on lock} -setup {
        setup
        strategy locking 1
    } -body {
        $T1 set mode SOME
        $T1 set amount 10001.0
        $coffer spend [$coffer cash]
        
        set a [$T1 obligate $coffer]
        set b [$coffer cash]

        list $a $b
    } -cleanup {
        cleanup
    } -result {1 0.0}

    #-------------------------------------------------------------------
    # execute

    test execute-1.1 {always succeeds} -setup {
        setup
        $T1 set mode SOME
        $T1 set amount 1000.0
        $T1 obligate $coffer
    } -body {
        $T1 execute
        rdb onecolumn {SELECT narrative FROM sigevents WHERE component='tactic'}
    } -cleanup {
        cleanup
    } -result {SPEND: Actor {actor:JOE} spends 1000.0 on goods: 20%; black: 20%; pop: 20%; region: 20%; world: 20%}

    #-------------------------------------------------------------------
    # Cleanup

    cleanupTests
}

namespace delete ::athena_test::tests::









