# -*-Tcl-*-
#-----------------------------------------------------------------------
# TITLE:
#    010-sat.test
#
# AUTHOR:
#    Will Duquette
#
# DESCRIPTION:
#    sat(sim) tests.
#
#    This test suite tests the sat(sim) mutators and queries
#
#-----------------------------------------------------------------------

#-----------------------------------------------------------------------
# Test Suite
#
# The tests run in a namespace so as not to interfere with other
# test suites.

namespace eval ::athena_test::tests:: {
    #-------------------------------------------------------------------
    # Set up the test environment

    # Import tcltest(n)
    namespace import ::tcltest::*

    # Clean up after a test

    proc cleanup {} {
        # Clean up the test environment
        array unset parms
        ted cleanup
    }


    #-------------------------------------------------------------------
    # mutate update

    test update-1.1 {sat is updated} -setup {
        ted create NB1 SHIA
    } -body {
        sat mutate update {
            id             {SHIA AUT}
            base           1.0
            saliency       0.5
        }

        ted query {SELECT * FROM sat_gc}
    } -cleanup {
        cleanup
    } -result {
g    c   base saliency 
---- --- ---- -------- 
SHIA AUT 1.0  0.5      
SHIA SFT 0.0  1.0      
SHIA CUL 0.0  1.0      
SHIA QOL 0.0  1.0      
    }


    test update-1.2 {identical values are OK} -setup {
        ted create NB1 SHIA

        set parmdict {
            id             {SHIA AUT}
            base           1.0
            saliency       0.5
        }

        sat mutate update $parmdict
    } -body {

        set a [ted query {SELECT * FROM sat_gc}]
        
        sat mutate update $parmdict

        set b [ted query {SELECT * FROM sat_gc}]

        expr {$a eq $b}
    } -cleanup {
        cleanup
    } -result {1}


    test update-1.3 {empty values are OK} -setup {
        ted create NB1 SHIA
    } -body {
        set a [ted query {SELECT * FROM sat_gc}]

        sat mutate update  {
            id             {SHIA SFT}
            base           ""
            saliency       ""
        }

        set b [ted query {SELECT * FROM sat_gc}]

        expr {$a eq $b}
    } -cleanup {
        cleanup
    } -result {1}


    test update-2.1 {undo undoes the change} -setup {
        ted create NB1 SHIA
    } -body {

        set a [ted query {SELECT * FROM sat_gc ORDER BY g,c}]

        set undo [sat mutate update {
            id             {SHIA SFT}
            base           1.0
            saliency       0.5
        }]

        eval $undo

        set b [ted query {SELECT * FROM sat_gc ORDER BY g,c}]

        expr {$a eq $b}
    } -cleanup {
        cleanup
    } -result {1}

    #-------------------------------------------------------------------
    # exists

    test exists-1.1 {sat does not exist} -body {
        sat exists NONESUCH NONESUCH
    } -cleanup {
        cleanup
    } -result {0}

    test exists-1.2 {sat exists} -setup {
        ted create NB1 SHIA
    } -body {
        sat exists SHIA SFT
    } -cleanup {
        cleanup
    } -result {1}


    #-------------------------------------------------------------------
    # validate

    test validate-1.1 {invalid civgroup} -setup {
        ted create NB1 SHIA
    } -body {
        sat validate {NONESUCH NONESUCH}
    } -returnCodes {
        error
    } -cleanup {
        cleanup
    } -result {Invalid civilian group, should be one of: SHIA}

    test validate-1.2 {Invalid concern} -setup {
        ted create NB1 SHIA
    } -body {
        sat validate {SHIA NONESUCH}
    } -returnCodes {
        error
    } -cleanup {
        cleanup
    } -result {invalid value "NONESUCH", should be one of: AUT, SFT, CUL, QOL}

    test validate-2.1 {Valid group} -setup {
        ted create NB1 SHIA
    } -body {
        sat validate {SHIA SFT}
    } -cleanup {
        cleanup
    } -result {SHIA SFT}

    
    #-------------------------------------------------------------------
    # Cleanup

    cleanupTests
}

namespace delete ::athena_test::tests::





