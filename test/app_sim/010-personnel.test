# -*-Tcl-*-
#-----------------------------------------------------------------------
# TITLE:
#    010-personnel.test
#
# AUTHOR:
#    Will Duquette
#
# DESCRIPTION:
#    personnel(sim) tests.
#
#    This test suite tests the personnel(sim) mutators and queries
#
#-----------------------------------------------------------------------

#-----------------------------------------------------------------------
# Test Suite
#
# The tests run in a namespace so as not to interfere with other
# test suites.

namespace eval ::athena_test::tests:: {
    #-------------------------------------------------------------------
    # Set up the test environment

    # Import tcltest(n)
    namespace import ::tcltest::*

    # Clean up after a test

    proc cleanup {} {
        # Clean up the test environment
        ted cleanup
    }

    proc setup {} {
        ted create NB1 NB2 BLUE BRIT
    }

    #-------------------------------------------------------------------
    # mutate set

    test set-1.1 {set updates the personnel count} -setup {
        setup
    } -body {
        personnel mutate set {id {NB1 BLUE} personnel 30}
        ted query {SELECT * FROM personnel_ng ORDER BY n,g}
    } -cleanup {
        cleanup
    } -result {
n   g    personnel 
--- ---- --------- 
NB1 BLUE 30        
NB1 BRIT 0         
NB2 BLUE 0         
NB2 BRIT 0         
    }

    test set-2.1 {undo undoes the change} -setup {
        setup
    } -body {
        set a [ted query {SELECT * FROM personnel_ng ORDER BY n,g}]
        set undo [personnel mutate set {id {NB1 BLUE} personnel 30}]
        namespace eval :: $undo
        set b [ted query {SELECT * FROM personnel_ng ORDER BY n,g}]
        
        expr {$a eq $b}
    } -cleanup {
        cleanup
    } -result {1}


    #-------------------------------------------------------------------
    # mutate adjust

    test adjust-1.1 {adjust updates the personnel count} -setup {
        setup
    } -body {
        personnel mutate adjust {id {NB1 BLUE} delta 30}
        ted query {SELECT * FROM personnel_ng ORDER BY n,g}
    } -cleanup {
        cleanup
    } -result {
n   g    personnel 
--- ---- --------- 
NB1 BLUE 30        
NB1 BRIT 0         
NB2 BLUE 0         
NB2 BRIT 0         
    }

    test adjust-1.2 {negative adjusts down to zero} -setup {
        setup
        personnel mutate adjust {id {NB1 BLUE} delta 30}
    } -body {
        personnel mutate adjust {id {NB1 BLUE} delta -40}
        ted query {SELECT * FROM personnel_ng ORDER BY n,g}
    } -cleanup {
        cleanup
    } -result {
n   g    personnel 
--- ---- --------- 
NB1 BLUE 0         
NB1 BRIT 0         
NB2 BLUE 0         
NB2 BRIT 0         
    }

    test adjust-2.1 {undo undoes the change} -setup {
        setup
    } -body {
        set a [ted query {SELECT * FROM personnel_ng}]
        set undo [personnel mutate adjust {id {NB1 BLUE} delta 30}]
        namespace eval :: $undo
        set b [ted query {SELECT * FROM personnel_ng}]
        
        expr {$a eq $b}
    } -cleanup {
        cleanup
    } -result {1}

    test adjust-2.2 {undo restores truncated value} -setup {
        setup
        personnel mutate adjust {id {NB1 BLUE} delta 30}
    } -body {
        set a [ted query {SELECT * FROM personnel_ng}]
        set undo [personnel mutate adjust {id {NB1 BLUE} delta -40}]
        namespace eval :: $undo
        set b [ted query {SELECT * FROM personnel_ng}]
        
        expr {$a eq $b}
    } -cleanup {
        cleanup
    } -result {1}

    test adjust-2.3 {joined undo's yield the right answer} -setup {
        setup
    } -body {
        set a [ted query {SELECT * FROM personnel_ng}]
        set undo [list]
        lappend undo [personnel mutate adjust {id {NB1 BLUE} delta 30}]
        lappend undo [personnel mutate adjust {id {NB1 BLUE} delta 15}]
        namespace eval :: [join $undo \n]
        set b [ted query {SELECT * FROM personnel_ng}]
        
        expr {$a eq $b}
    } -cleanup {
        cleanup
    } -result {1}

    #-------------------------------------------------------------------
    # Cleanup

    cleanupTests
}

namespace delete ::athena_test::tests::





