# -*-Tcl-*-
#-----------------------------------------------------------------------
# TITLE:
#    020-HREL.test
#
# AUTHOR:
#    Will Duquette
#
# DESCRIPTION:
#    app_sim(1) HREL:* order tests.
#
#    This test suite tests the horizontal relationship-related orders.
#
#-----------------------------------------------------------------------

#-----------------------------------------------------------------------
# Test Suite
#
# The tests run in a namespace so as not to interfere with other
# test suites.

namespace eval ::athena_test::tests:: {
    #-------------------------------------------------------------------
    # Set up the test environment

    # Import tcltest(n)
    namespace import ::tcltest::*

    proc setup {} {
        ted create BLUE SHIA SUNN
    }


    # Clean up after a test

    proc cleanup {} {
        ted cleanup
    }

    #-------------------------------------------------------------------
    # HREL:OVERRIDE

    test UPDATE-1.1 {required parms} -body {
        ted order -reject HREL:OVERRIDE {}
    } -result {
        id {required value}
    }
    

    test UPDATE-1.2 {invalid f, g} -setup {
        setup
    } -body {
        ted order -reject HREL:OVERRIDE id {NONESUCH NONESUCH}
    } -cleanup {
        cleanup
    } -result {
        id {Invalid group, should be one of: BLUE, SHIA, SUNN}
    }


    test UPDATE-1.3 {f eq g} -setup {
        setup
    } -body {
        ted order -reject HREL:OVERRIDE id {SHIA SHIA} hrel 1.0
    } -cleanup {
        cleanup
    } -result {
        id {A group's relationship with itself cannot be overridden.}
    }


    test UPDATE-1.4 {invalid rel: out of range} -setup {
        setup
    } -body {
        ted order -reject HREL:OVERRIDE id {SHIA SUNN} hrel 1.1
    } -cleanup {
        cleanup
    } -result {
        hrel {invalid value "1.1", should be a real number in range -1.0, 1.0, or one of: SUPPORT, LIKE, INDIFF, DISLIKE, OPPOSE}
    }

    # Create new override

    test UPDATE-2.1 {override is created} -setup {
        setup
    } -body {
        ted order HREL:OVERRIDE {
            id    {SHIA BLUE}
            hrel   0.5
        }

        ted query {SELECT * FROM hrel_fg ORDER BY f,g}
    } -cleanup {
        cleanup
    } -result {
f    g    hrel 
---- ---- ---- 
SHIA BLUE 0.5  
    }

    test UPDATE-2.2 {Rel defaults to 0.0} -setup {
        setup
    } -body {
        ted order HREL:OVERRIDE {id {SHIA SUNN}}
        ted query {SELECT * FROM hrel_fg}
    } -cleanup {
        cleanup
    } -result {
f    g    hrel 
---- ---- ---- 
SHIA SUNN 0.0  
    }


    test UPDATE-2.3 {table monitor event on creation} -setup {
        setup
    } -body {
        ted notifier bind ::rdb <hrel_fg>
        ted order HREL:OVERRIDE id {SHIA BLUE} hrel 0.5
        ted notifier received
    } -cleanup {
        cleanup
    } -result {
        {::rdb <hrel_fg> update {SHIA BLUE}}
    }


    test UPDATE-2.4 {undo undoes the creation} -setup {
        setup

        ted order HREL:OVERRIDE {
            id    {SHIA BLUE}
            hrel   0.5
        }
    } -body {
        ted notifier bind ::rdb <hrel_fg>
        cif undo -test
        ted notifier received
    } -cleanup {
        cleanup
    } -result {
        {::rdb <hrel_fg> delete {SHIA BLUE}}
    }


    # Update existing override

    test UPDATE-3.1 {rel is updated} -setup {
        setup
        ted order HREL:OVERRIDE {id {SHIA BLUE}}
    } -body {
        ted order HREL:OVERRIDE {
            id    {SHIA BLUE}
            hrel   0.5
        }

        ted query {SELECT * FROM hrel_fg ORDER BY f,g}
    } -cleanup {
        cleanup
    } -result {
f    g    hrel 
---- ---- ---- 
SHIA BLUE 0.5  
    }


    test UPDATE-3.2 {table monitor event} -setup {
        setup
        ted order HREL:OVERRIDE {id {SHIA BLUE}}
    } -body {
        ted notifier bind ::rdb <hrel_fg>
        ted order HREL:OVERRIDE id {SHIA BLUE} hrel 0.5
        ted notifier received
    } -cleanup {
        cleanup
    } -result {
        {::rdb <hrel_fg> update {SHIA BLUE}}
    }


    test UPDATE-3.3 {undo undoes the change} -setup {
        setup

        ted order HREL:OVERRIDE {id {SHIA BLUE}}
        ted order HREL:OVERRIDE {
            id    {SHIA BLUE}
            hrel   0.5
        }
    } -body {
        ted notifier bind ::rdb <hrel_fg>
        cif undo -test
        ted notifier received
    } -cleanup {
        cleanup
    } -result {
        {::rdb <hrel_fg> update {SHIA BLUE}}
    }

    #-------------------------------------------------------------------
    # HREL:RESTORE

    test DELETE-1.1 {required parms} -body {
        ted order -reject HREL:RESTORE {}
    } -result {
        id {required value}
    }
    

    test DELETE-1.2 {unknown f in id} -setup {
        setup
    } -body {
        ted order -reject HREL:RESTORE id {NONESUCH SUNN}
    } -cleanup {
        cleanup
    } -result {
        id {Invalid group, should be one of: BLUE, SHIA, SUNN}
    }

    test DELETE-1.3 {unknown g in id} -setup {
        setup
    } -body {
        ted order -reject HREL:RESTORE id {SHIA NONESUCH}
    } -cleanup {
        cleanup
    } -result {
        id {Invalid group, should be one of: BLUE, SHIA, SUNN}
    }

    test DELETE-2.1 {Effects} -setup {
        setup
        ted order HREL:OVERRIDE {id {SHIA SUNN}}
    } -body {
        ted notifier bind ::rdb <hrel_fg>
        ted order HREL:RESTORE id {SHIA SUNN}
        ted notifier received
    } -cleanup {
        cleanup
    } -result {
        {::rdb <hrel_fg> delete {SHIA SUNN}}
    }


    test DELETE-2.2 {Effects on undo} -setup {
        setup
        ted order HREL:OVERRIDE {id {SHIA SUNN}}
        ted order HREL:RESTORE {id {SHIA SUNN}}
    } -body {
        ted notifier bind ::rdb <hrel_fg>
        cif undo -test
        ted notifier received
    } -cleanup {
        cleanup
    } -result {
        {::rdb <hrel_fg> update {SHIA SUNN}}
    }

    test DELETE-3.1 {OK if there's no override} -setup {
        setup
    } -body {
        ted notifier bind ::rdb <hrel_fg>
        ted order HREL:RESTORE id {SHIA SUNN}
        ted notifier received
    } -cleanup {
        cleanup
    } -result {}


    test DELETE-3.2 {Can undo even if there was no override} -setup {
        setup
        ted order HREL:RESTORE {id {SHIA SUNN}}
    } -body {
        ted notifier bind ::rdb <hrel_fg>
        cif undo -test
        ted notifier received
    } -cleanup {
        cleanup
    } -result {}


    #-------------------------------------------------------------------
    # HREL:OVERRIDE:MULTI

    test UPDATE:MULTI-1.1 {required parms} -setup {
        setup
    } -body {
        ted order -reject HREL:OVERRIDE:MULTI {}
    } -cleanup {
        cleanup
    } -result {
        ids {required value}
    }
    

    test UPDATE:MULTI-1.2 {invalid f in ids} -setup {
        setup
    } -body {
        ted order -reject HREL:OVERRIDE:MULTI \
            ids {{NONESUCH BLUE}}
    } -cleanup {
        cleanup
    } -result {
        ids {Invalid group, should be one of: BLUE, SHIA, SUNN}
    }


    test UPDATE:MULTI-1.3 {invalid g in ids} -setup {
        setup
    } -body {
        ted order -reject HREL:OVERRIDE:MULTI \
            ids {{SHIA NONESUCH}}
    } -cleanup {
        cleanup
    } -result {
        ids {Invalid group, should be one of: BLUE, SHIA, SUNN}
    }


    test UPDATE:MULTI-1.4 {f eq g in ids} -setup {
        setup
    } -body {
        ted order -reject HREL:OVERRIDE:MULTI \
            ids {{SHIA SHIA}}
    } -cleanup {
        cleanup
    } -result {
        ids {A group's relationship with itself cannot be overridden.}
    }


    test UPDATE:MULTI-1.5 {invalid rel: out of range} -setup {
        setup
    } -body {
        ted order -reject HREL:OVERRIDE:MULTI \
            ids {{SHIA BLUE}} hrel 1.1
    } -cleanup {
        cleanup
    } -result {
        hrel {invalid value "1.1", should be a real number in range -1.0, 1.0, or one of: SUPPORT, LIKE, INDIFF, DISLIKE, OPPOSE}
    }

    # Create new overrides

    test UPDATE:MULTI-2.1 {create new overrides} -setup {
        setup
    } -body {
        ted notifier bind ::rdb <hrel_fg>

        ted order HREL:OVERRIDE:MULTI {
            ids       {{SHIA BLUE} {BLUE SUNN}}
            hrel       0.5
        }

        ted notifier received
    } -cleanup {
        cleanup
    } -result {
        {::rdb <hrel_fg> update {SHIA BLUE}}
        {::rdb <hrel_fg> update {BLUE SUNN}}
    }

    test UPDATE:MULTI-2.2 {undo undoes the change} -setup {
        setup
        ted order HREL:OVERRIDE:MULTI {
            ids        {{SHIA BLUE} {SHIA SUNN}}
            hrel        0.5
        }
    } -body {
        ted notifier bind ::rdb <hrel_fg>
        cif undo -test
        ted notifier received
    } -cleanup {
        cleanup
    } -result {
        {::rdb <hrel_fg> delete {SHIA BLUE}}
        {::rdb <hrel_fg> delete {SHIA SUNN}}
    }

    # Update existing overrides
    test UPDATE:MULTI-3.1 {several overrides} -setup {
        setup
        ted order HREL:OVERRIDE {id {SHIA SUNN}}
        ted order HREL:OVERRIDE {id {SHIA BLUE}}
    } -body {
        ted notifier bind ::rdb <hrel_fg>
        ted order HREL:OVERRIDE:MULTI {
            ids   {{SHIA BLUE} {SHIA SUNN}} 
            hrel  0.5
        }
        ted notifier received
    } -cleanup {
        cleanup
    } -result {
        {::rdb <hrel_fg> update {SHIA BLUE}}
        {::rdb <hrel_fg> update {SHIA SUNN}}
    }

    test UPDATE:MULTI-3.2 {undo undoes the change} -setup {
        setup
        ted order HREL:OVERRIDE {id {SHIA SUNN}}
        ted order HREL:OVERRIDE {id {SHIA BLUE}}

        ted order HREL:OVERRIDE:MULTI {
            ids        {{SHIA BLUE} {SHIA SUNN}}
            hrel       0.5
        }
    } -body {
        ted notifier bind ::rdb <hrel_fg>
        cif undo -test
        ted notifier received
    } -cleanup {
        cleanup
    } -result {
        {::rdb <hrel_fg> update {SHIA BLUE}}
        {::rdb <hrel_fg> update {SHIA SUNN}}
    }


    #-------------------------------------------------------------------
    # Cleanup

    cleanupTests
}

namespace delete ::athena_test::tests::








