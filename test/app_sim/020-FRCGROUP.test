# -*-Tcl-*-
#-----------------------------------------------------------------------
# TITLE:
#    020-GROUP-FORCE.test
#
# AUTHOR:
#    Will Duquette
#
# DESCRIPTION:
#    app_sim(1) FRCGROUP:* order tests.
#
#    This test suite tests the frcgroup-related orders.
#
#-----------------------------------------------------------------------

#-----------------------------------------------------------------------
# Test Suite
#
# The tests run in a namespace so as not to interfere with other
# test suites.

namespace eval ::athena_test::tests:: {
    #-------------------------------------------------------------------
    # Set up the test environment

    # Import tcltest(n)
    namespace import ::tcltest::*

    # Standard groups

    set blue {
        g         BLUE
        longname  "US Army"
        color     #0000ff
        shape     FRIEND
        forcetype REGULAR
        demeanor  AVERAGE
        uniformed yes
        local     no
    }

    set brit {
        g         BRIT
        longname  "British Forces"
        color     #00ffff
        shape     FRIEND
        forcetype REGULAR
        demeanor  AVERAGE
        uniformed yes
        local     no
    }


    # Clean up after a test

    proc cleanup {} {
        # Clean up the test environment
        ted cleanup
    }

    #-------------------------------------------------------------------
    # FRCGROUP:CREATE

    test CREATE-1.1 {required parms} -body {
        ted order -reject FRCGROUP:CREATE {}
    } -result {
        g {required value}
        longname {required value}
        color {required value}
        shape {required value}
        forcetype {required value}
        demeanor {required value}
        uniformed {required value}
        local {required value}
    }
    

    test CREATE-1.2 {Duplicate g, longname} -setup {
        ted order FRCGROUP:CREATE $blue
    } -body {
        ted order -reject FRCGROUP:CREATE $blue
    } -cleanup {
        cleanup
    } -result {
        g {An entity with this ID already exists}
        longname {An entity with this name already exists}
    }


    test CREATE-1.3 {longname duplicates n} -body {
        ted order -reject FRCGROUP:CREATE [dict merge $blue {
            longname BLUE
        }]
    } -cleanup {
        cleanup
    } -result {
        longname {longname must not be identical to ID}
    }


    test CREATE-1.4 {g is not an ident} -body {
        ted order -reject FRCGROUP:CREATE [dict merge $blue {
            g "BL&E"
        }]
    } -cleanup {
        cleanup
    } -result {
        g {Identifiers begin with a letter and contain only letters and digits.}
    }


    test CREATE-1.5 {invalid color} -body {
        ted order -reject FRCGROUP:CREATE [dict merge $blue {
            color NONESUCH
        }]
    } -cleanup {
        cleanup
    } -result {
        color {Invalid hexadecimal color specifier, should be "#RRGGBB"}
    }


    test CREATE-1.6 {invalid shape} -body {
        ted order -reject FRCGROUP:CREATE [dict merge $blue {
            shape NONESUCH
        }]
    } -cleanup {
        cleanup
    } -result {
        shape {invalid value "NONESUCH", should be one of: FRIEND, ENEMY, NEUTRAL}
    }


    test CREATE-1.7 {invalid forcetype} -body {
        ted order -reject FRCGROUP:CREATE [dict merge $blue {
            forcetype NONESUCH
        }]
    } -result {
        forcetype {invalid value "NONESUCH", should be one of: REGULAR, PARAMILITARY, POLICE, IRREGULAR, CRIMINAL}
    }

    test CREATE-1.8 {invalid demeanor} -body {
        ted order -reject FRCGROUP:CREATE [dict merge $blue {
            demeanor NONESUCH
        }]
    } -result {
        demeanor {invalid value "NONESUCH", should be one of: APATHETIC, AVERAGE, AGGRESSIVE}
    }

    test CREATE-1.9 {invalid uniformed} -body {
        ted order -reject FRCGROUP:CREATE [dict merge $blue {
            uniformed NONESUCH
        }]
    } -result {
        uniformed {invalid boolean "NONESUCH", should be one of: 1, 0, true, false, yes, no, on, off}
    }

    test CREATE-1.10 {invalid local} -body {
        ted order -reject FRCGROUP:CREATE [dict merge $blue {
            local NONESUCH
        }]
    } -result {
        local {invalid boolean "NONESUCH", should be one of: 1, 0, true, false, yes, no, on, off}
    }

    test CREATE-2.1 {frcgroup is created} -body {
        ted order FRCGROUP:CREATE $blue

        ted query {SELECT * FROM frcgroups_view}
    } -cleanup {
        cleanup
    } -result {
g    longname color   shape  symbol   demeanor gtype forcetype uniformed local 
---- -------- ------- ------ -------- -------- ----- --------- --------- ----- 
BLUE US Army  #0000ff FRIEND infantry AVERAGE  FRC   REGULAR   1         0     
    }


    test CREATE-2.2 {Effects} -body {
        ted notifier bind ::frcgroup <Entity>
        ted notifier bind ::scenario <Reconcile>
        ted order FRCGROUP:CREATE $blue
        ted notifier received
    } -cleanup {
        cleanup
    } -result {
        {::frcgroup <Entity> create BLUE}
        {::scenario <Reconcile>}
    }


    test CREATE-3.1 {undo effects} -setup {
        ted order FRCGROUP:CREATE $blue
    } -body {
        ted notifier bind ::frcgroup <Entity>
        cif undo -test
        ted notifier received
    } -cleanup {
        cleanup
    } -result {
        {::frcgroup <Entity> delete BLUE}
    }


    #-------------------------------------------------------------------
    # FRCGROUP:DELETE

    test DELETE-1.1 {required parms} -body {
        ted order -reject FRCGROUP:DELETE {}
    } -result {
        g {required value}
    }

    
    test DELETE-1.2 {unknown g} -body {
        ted order -reject FRCGROUP:DELETE g NONESUCH
    } -result {
        g {Invalid force group, none are defined}
    }


    test DELETE-2.1 {Effects} -setup {
        ted order FRCGROUP:CREATE $blue
    } -body {
        ted notifier bind ::frcgroup <Entity>
        ted notifier bind ::scenario <Reconcile>
        ted order FRCGROUP:DELETE g BLUE
        ted notifier received
    } -cleanup {
        cleanup
    } -result {
        {::frcgroup <Entity> delete BLUE}
        {::scenario <Reconcile>}
    }


    test DELETE-3.1 {Undo effects} -setup {
        ted order FRCGROUP:CREATE $blue
        ted order FRCGROUP:DELETE g BLUE
    } -body {
        ted notifier bind ::frcgroup <Entity>
        cif undo -test
        ted notifier received
    } -cleanup {
        cleanup
    } -result {
        {::frcgroup <Entity> create BLUE}
    }


    #-------------------------------------------------------------------
    # FRCGROUP:UPDATE

    test UPDATE-1.1 {required parms} -body {
        ted order -reject FRCGROUP:UPDATE {}
    } -result {
        g {required value}
    }
    

    test UPDATE-1.2 {Duplicate longname} -setup {
        ted order FRCGROUP:CREATE $blue
        ted order FRCGROUP:CREATE $brit
    } -body {
        ted order -reject FRCGROUP:UPDATE g BLUE longname "British Forces"
    } -cleanup {
        cleanup
    } -result {
        longname {An entity with this name already exists}
    }


    test UPDATE-1.3 {longname duplicates some g} -setup {
        ted order FRCGROUP:CREATE $blue
        ted order FRCGROUP:CREATE $brit
    } -body {
        ted order -reject FRCGROUP:UPDATE g BLUE longname BRIT
    } -cleanup {
        cleanup
    } -result {
        longname {An entity with this ID already exists}
    }


    test UPDATE-1.4 {invalid color} -setup {
        ted order FRCGROUP:CREATE $blue
    } -body {
        ted order -reject FRCGROUP:UPDATE g BLUE color NONESUCH
    } -cleanup {
        cleanup
    } -result {
        color {Invalid hexadecimal color specifier, should be "#RRGGBB"}
    }


    test UPDATE-1.5 {invalid shape} -setup {
        ted order FRCGROUP:CREATE $blue
    } -body {
        ted order -reject FRCGROUP:UPDATE g BLUE shape NONESUCH
    } -cleanup {
        cleanup
    } -result {
        shape {invalid value "NONESUCH", should be one of: FRIEND, ENEMY, NEUTRAL}
    }


    test UPDATE-1.6 {invalid forcetype} -setup {
        ted order FRCGROUP:CREATE $blue
    } -body {
        ted order -reject FRCGROUP:UPDATE g BLUE forcetype NONESUCH
    } -cleanup {
        cleanup
    } -result {
        forcetype {invalid value "NONESUCH", should be one of: REGULAR, PARAMILITARY, POLICE, IRREGULAR, CRIMINAL}
    }


    test UPDATE-1.7 {invalid demeanor} -setup {
        ted order FRCGROUP:CREATE $blue
    } -body {
        ted order -reject FRCGROUP:UPDATE g BLUE demeanor NONESUCH
    } -cleanup {
        cleanup
    } -result {
        demeanor {invalid value "NONESUCH", should be one of: APATHETIC, AVERAGE, AGGRESSIVE}
    }


    test UPDATE-1.8 {invalid uniformed} -setup {
        ted order FRCGROUP:CREATE $blue
    } -body {
        ted order -reject FRCGROUP:UPDATE g BLUE uniformed NONESUCH
    } -cleanup {
        cleanup
    } -result {
        uniformed {invalid boolean "NONESUCH", should be one of: 1, 0, true, false, yes, no, on, off}
    }


    test UPDATE-1.9 {invalid local} -setup {
        ted order FRCGROUP:CREATE $blue
    } -body {
        ted order -reject FRCGROUP:UPDATE g BLUE local NONESUCH
    } -cleanup {
        cleanup
    } -result {
        local {invalid boolean "NONESUCH", should be one of: 1, 0, true, false, yes, no, on, off}
    }


    test UPDATE-2.1 {frcgroup is updated} -setup {
        ted order FRCGROUP:CREATE $blue
    } -body {
        ted order FRCGROUP:UPDATE {
            g            BLUE
            longname     "Blue Angels"
            color        "#ff0000"
            shape        NEUTRAL
            forcetype    POLICE
            demeanor     AGGRESSIVE
            uniformed    no
            local        yes
        }

        ted query {SELECT * FROM frcgroups_view}
    } -cleanup {
        cleanup
    } -result {
g    longname    color   shape   symbol demeanor   gtype forcetype uniformed local 
---- ----------- ------- ------- ------ ---------- ----- --------- --------- ----- 
BLUE Blue Angels #ff0000 NEUTRAL police AGGRESSIVE FRC   POLICE    0         1     
    }


    test UPDATE-2.2 {<Entity> update} -setup {
        ted order FRCGROUP:CREATE $blue
    } -body {
        ted notifier bind ::frcgroup <Entity>
        ted order FRCGROUP:UPDATE g BLUE longname "Blue Angels"
        ted notifier received
    } -cleanup {
        cleanup
    } -result {
        {::frcgroup <Entity> update BLUE}
    }


    test UPDATE-3.1 {undo undoes the change} -setup {
        ted order FRCGROUP:CREATE $blue
        ted order FRCGROUP:UPDATE {
            g            BLUE
            longname     "Blue Angels"
            color        "#ff0000"
            forcetype    POLICE
            demeanor     AGGRESSIVE
            local        yes
            uniformed    no
        }
    } -body {
        ted notifier bind ::frcgroup <Entity>
        cif undo -test
        ted notifier received
    } -cleanup {
        cleanup
    } -result {
        {::frcgroup <Entity> update BLUE}
    }

    #-------------------------------------------------------------------
    # FRCGROUP:UPDATE:MULTI

    test UPDATE:MULTI-1.1 {required parms} -body {
        ted order -reject FRCGROUP:UPDATE:MULTI {}
    } -result {
        ids {required value}
    }
    

    test UPDATE:MULTI-1.2 {invalid ids, no groups} -body {
        ted order -reject FRCGROUP:UPDATE:MULTI ids NONESUCH
    } -result {
        ids {Invalid force group, none are defined}
    }


    test UPDATE:MULTI-1.3 {invalid ids, groups} -setup {
        ted order FRCGROUP:CREATE $blue
    } -body {
        ted order -reject FRCGROUP:UPDATE:MULTI ids NONESUCH
    } -cleanup {
        cleanup
    } -result {
        ids {Invalid force group, should be one of: BLUE}
    }


    test UPDATE:MULTI-1.4 {invalid color} -setup {
        ted order FRCGROUP:CREATE $blue
    } -body {
        ted order -reject FRCGROUP:UPDATE:MULTI ids BLUE color NONESUCH
    } -cleanup {
        cleanup
    } -result {
        color {Invalid hexadecimal color specifier, should be "#RRGGBB"}
    }


    test UPDATE:MULTI-1.5 {invalid shape} -setup {
        ted order FRCGROUP:CREATE $blue
    } -body {
        ted order -reject FRCGROUP:UPDATE:MULTI ids BLUE shape NONESUCH
    } -cleanup {
        cleanup
    } -result {
        shape {invalid value "NONESUCH", should be one of: FRIEND, ENEMY, NEUTRAL}
    }


    test UPDATE:MULTI-1.6 {invalid forcetype} -setup {
        ted order FRCGROUP:CREATE $blue
    } -body {
        ted order -reject FRCGROUP:UPDATE:MULTI ids BLUE forcetype NONESUCH
    } -cleanup {
        cleanup
    } -result {
        forcetype {invalid value "NONESUCH", should be one of: REGULAR, PARAMILITARY, POLICE, IRREGULAR, CRIMINAL}
    }


    test UPDATE:MULTI-1.7 {invalid demeanor} -setup {
        ted order FRCGROUP:CREATE $blue
    } -body {
        ted order -reject FRCGROUP:UPDATE:MULTI ids BLUE demeanor NONESUCH
    } -cleanup {
        cleanup
    } -result {
        demeanor {invalid value "NONESUCH", should be one of: APATHETIC, AVERAGE, AGGRESSIVE}
    }


    test UPDATE:MULTI-1.8 {invalid uniformed} -setup {
        ted order FRCGROUP:CREATE $blue
    } -body {
        ted order -reject FRCGROUP:UPDATE:MULTI ids BLUE uniformed NONESUCH
    } -cleanup {
        cleanup
    } -result {
        uniformed {invalid boolean "NONESUCH", should be one of: 1, 0, true, false, yes, no, on, off}
    }


    test UPDATE:MULTI-1.9 {invalid local} -setup {
        ted order FRCGROUP:CREATE $blue
    } -body {
        ted order -reject FRCGROUP:UPDATE:MULTI ids BLUE local NONESUCH
    } -cleanup {
        cleanup
    } -result {
        local {invalid boolean "NONESUCH", should be one of: 1, 0, true, false, yes, no, on, off}
    }


    test UPDATE:MULTI-2.1 {one group of several is updated} -setup {
        ted order FRCGROUP:CREATE $blue
        ted order FRCGROUP:CREATE $brit
    } -body {
        ted notifier bind ::frcgroup <Entity>

        ted order FRCGROUP:UPDATE:MULTI {
            ids       BLUE 
            color     "#ff0000"
            shape     NEUTRAL
            forcetype POLICE
            demeanor  AGGRESSIVE
            uniformed no
            local     yes
        }

        ted notifier received
    } -cleanup {
        cleanup
    } -result {
        {::frcgroup <Entity> update BLUE}
    }


    test UPDATE:MULTI-2.2 {several groups are updated} -setup {
        ted order FRCGROUP:CREATE $blue
        ted order FRCGROUP:CREATE $brit
    } -body {
        ted notifier bind ::frcgroup <Entity>

        ted order FRCGROUP:UPDATE:MULTI {
            ids       {BLUE BRIT}
            color     "#ff0000"
            shape     NEUTRAL
            forcetype POLICE
            demeanor  AGGRESSIVE
            uniformed no
            local     yes
        }

        ted notifier received
    } -cleanup {
        cleanup
    } -result {
        {::frcgroup <Entity> update BLUE}
        {::frcgroup <Entity> update BRIT}
    }



    test UPDATE:MULTI-3.1 {undo effects} -setup {
        ted order FRCGROUP:CREATE $blue
        ted order FRCGROUP:CREATE $brit
        ted order FRCGROUP:UPDATE:MULTI {
            ids       {BLUE BRIT}
            color     "#ff0000"
        }
    } -body {
        ted notifier bind ::frcgroup <Entity>
        cif undo -test
        ted notifier received
    } -cleanup {
        cleanup
    } -result {
        {::frcgroup <Entity> update BLUE}
        {::frcgroup <Entity> update BRIT}
    }

    #-------------------------------------------------------------------
    # Cleanup

    cleanupTests
}

namespace delete ::athena_test::tests::






