# -*-Tcl-*-
#-----------------------------------------------------------------------
# TITLE:
#    020-GROUP-CIVILIAN.test
#
# AUTHOR:
#    Will Duquette
#
# DESCRIPTION:
#    app_sim(1) CIVGROUP:* order tests.
#
#    This test suite tests the civgroup-related orders.
#
#-----------------------------------------------------------------------

#-----------------------------------------------------------------------
# Test Suite
#
# The tests run in a namespace so as not to interfere with other
# test suites.

namespace eval ::athena_test::tests:: {
    #-------------------------------------------------------------------
    # Set up the test environment

    # Import tcltest(n)
    namespace import ::tcltest::*

    # Standard groups

    set shia {
        g         SHIA
        longname  "Shia Locals"
        n         NB1
        color     #ffff00
        shape     NEUTRAL
        demeanor  AVERAGE
        basepop   10000
        pop_cr    0.0
        sa_flag   0
    }

    set sunn {
        g         SUNN
        longname  "Sunni Locals"
        n         NB1
        color     #ffffff
        shape     ENEMY
        demeanor  AGGRESSIVE
        basepop   20000
        pop_cr    0.0
        sa_flag   1
    }


    # Clean up after a test

    proc cleanup {} {
        # Clean up the test environment
        ted cleanup
    }

    #-------------------------------------------------------------------
    # CIVGROUP:CREATE

    test CREATE-1.1 {required parms} -body {
        ted order -reject CIVGROUP:CREATE {}
    } -result {
        g {required value}
        n {required value}
        color {required value}
        shape {required value}
        demeanor {required value}
        basepop {required value}
        pop_cr {required value}
        sa_flag {required value}
    }
    
    test CREATE-1.2 {Duplicate g} -setup {
        ted create NB1
        ted order CIVGROUP:CREATE $shia
    } -body {
        ted order -reject CIVGROUP:CREATE $shia
    } -cleanup {
        cleanup
    } -result {
        g {An entity with this ID already exists}
    }

    test CREATE-1.3 {g is not an ident} -body {
        ted create NB1
        ted order -reject CIVGROUP:CREATE [dict merge $shia {
            g "BL&E"
        }]
    } -cleanup {
        cleanup
    } -result {
        g {Identifiers begin with a letter and contain only letters and digits.}
    }

    test CREATE-1.4 {invalid n} -body {
        ted create NB1
        ted order -reject CIVGROUP:CREATE [dict merge $shia {
            n NONESUCH
        }]
    } -cleanup {
        cleanup
    } -result {
        n {Invalid neighborhood, should be one of: NB1}
    }
    

    test CREATE-1.5 {invalid color} -body {
        ted create NB1
        ted order -reject CIVGROUP:CREATE [dict merge $shia {
            color NONESUCH
        }]
    } -cleanup {
        cleanup
    } -result {
        color {Invalid hex color specifier, should be "#RRGGBB" or a valid color name}
    }


    test CREATE-1.6 {invalid shape} -body {
        ted create NB1
        ted order -reject CIVGROUP:CREATE [dict merge $shia {
            shape NONESUCH
        }]
    } -cleanup {
        cleanup
    } -result {
        shape {invalid value "NONESUCH", should be one of: FRIEND, ENEMY, NEUTRAL}
    }

    test CREATE-1.7 {invalid demeanor} -setup {
        ted create NB1
    } -body {
        ted order -reject CIVGROUP:CREATE [dict merge $shia {
            demeanor NONESUCH
        }]
    } -cleanup {
        cleanup
    } -result {
        demeanor {invalid value "NONESUCH", should be one of: APATHETIC, AVERAGE, AGGRESSIVE}
    }


    test CREATE-1.8 {non-numeric basepop} -setup {
        ted create NB1
    } -body {
        ted order -reject CIVGROUP:CREATE [dict merge $shia {
            basepop NONESUCH
        }]
    } -cleanup {
        cleanup
    } -result {
        basepop {invalid value "NONESUCH", expected integer}
    }


    test CREATE-1.9 {negative basepop} -setup {
        ted create NB1
    } -body {
        ted order -reject CIVGROUP:CREATE [dict merge $shia {
            basepop -1
        }]
    } -cleanup {
        cleanup
    } -result {
        basepop {invalid value "-1", expected integer no less than 0}
    }

    test CREATE-1.10 {invalid sa_flag 1} -setup {
        ted create NB1
    } -body {
        ted order -reject CIVGROUP:CREATE [dict merge $shia {
            sa_flag NONESUCH
        }]
    } -cleanup {
        cleanup
    } -result {
        sa_flag {invalid boolean "NONESUCH", should be one of: 1, 0, true, false, yes, no, on, off}
    }

    test CREATE-2.1 {group is created} -body {
        ted create NB1
        ted order CIVGROUP:CREATE $shia
        
        ted query {SELECT * FROM civgroups_view}
    } -cleanup {
        cleanup
    } -result {
g    longname    color   shape   symbol   demeanor basepop pop_cr rel_entity gtype n   sa_flag 
---- ----------- ------- ------- -------- -------- ------- ------ ---------- ----- --- ------- 
SHIA Shia Locals #FFFF00 NEUTRAL civilian AVERAGE  10000   0.0    SHIA       CIV   NB1 0       
    }


    test CREATE-2.2 {longname defaults to ID} -body {
        ted create NB1
        ted order CIVGROUP:CREATE [dict merge $shia {longname ""}]
        
        ted query {SELECT * FROM civgroups_view}
    } -cleanup {
        cleanup
    } -result {
g    longname color   shape   symbol   demeanor basepop pop_cr rel_entity gtype n   sa_flag 
---- -------- ------- ------- -------- -------- ------- ------ ---------- ----- --- ------- 
SHIA SHIA     #FFFF00 NEUTRAL civilian AVERAGE  10000   0.0    SHIA       CIV   NB1 0       
    }

    test CREATE-2.3 {basepop can be zero} -body {
        ted create NB1
        ted order CIVGROUP:CREATE [dict merge $shia {basepop 0}]
        
        ted querylist {SELECT * FROM civgroups_view}
    } -cleanup {
        cleanup
    } -result {
g           SHIA
longname    Shia Locals
color       #FFFF00
shape       NEUTRAL
symbol      civilian
demeanor    AVERAGE
basepop     0
pop_cr      0.0
rel_entity  SHIA
gtype       CIV
n           NB1
sa_flag     0
    }

    test CREATE-2.4 {effects} -body {
        ted create NB1
        ted notifier bind ::rdb <civgroups>
        ted order CIVGROUP:CREATE $sunn
        ted notifier received
    } -cleanup {
        cleanup
    } -result {
        {::rdb <civgroups> update SUNN}
    }


    test CREATE-3.1 {effects are undone} -setup {
        ted create NB1
        ted order CIVGROUP:CREATE $sunn
    } -body {
        ted notifier bind ::rdb <civgroups>
        cif undo -test
        ted notifier received
    } -cleanup {
        cleanup
    } -result {
        {::rdb <civgroups> delete SUNN}
    }

    #-------------------------------------------------------------------
    # CIVGROUP:DELETE

    test DELETE-1.1 {required parms} -body {
        ted order -reject CIVGROUP:DELETE {}
    } -result {
        g {required value}
    }
    

    test DELETE-1.2 {unknown g} -body {
        ted order -reject CIVGROUP:DELETE g NONESUCH
    } -result {
        g {Invalid civilian group, none are defined}
    }


    test DELETE-2.1 {Effects} -setup {
        ted create NB1 SHIA
    } -body {
        ted notifier bind ::rdb <civgroups>
        ted order CIVGROUP:DELETE g SHIA
        ted notifier received
    } -cleanup {
        cleanup
    } -result {
        {::rdb <civgroups> delete SHIA}
    }


    test DELETE-3.1 {Effects on undo} -setup {
        ted create NB1 SHIA
        ted order CIVGROUP:DELETE g SHIA
    } -body {
        ted notifier bind ::rdb <civgroups>
        cif undo -test
        ted notifier received
    } -cleanup {
        cleanup
    } -result {
        {::rdb <civgroups> update SHIA}
    }

    #-------------------------------------------------------------------
    # CIVGROUP:UPDATE

    test UPDATE-1.1 {required parms} -body {
        ted order -reject CIVGROUP:UPDATE {}
    } -result {
        g {required value}
    }

    
    test UPDATE-1.4 {invalid neighborhood} -setup {
        ted create NB1 SHIA
    } -body {
        ted order -reject CIVGROUP:UPDATE g SHIA n NONESUCH
    } -cleanup {
        cleanup
    } -result {
        n {Invalid neighborhood, should be one of: NB1}
    }

    test UPDATE-1.5 {invalid color} -setup {
        ted create NB1 SHIA
    } -body {
        ted order -reject CIVGROUP:UPDATE g SHIA color NONESUCH
    } -cleanup {
        cleanup
    } -result {
        color {Invalid hex color specifier, should be "#RRGGBB" or a valid color name}
    }


    test UPDATE-1.6 {invalid shape} -setup {
        ted create NB1 SHIA
    } -body {
        ted order -reject CIVGROUP:UPDATE g SHIA shape NONESUCH
    } -cleanup {
        cleanup
    } -result {
        shape {invalid value "NONESUCH", should be one of: FRIEND, ENEMY, NEUTRAL}
    }


    test UPDATE-1.7 {invalid demeanor} -setup {
        ted create NB1 SHIA
    } -body {
        ted order -reject CIVGROUP:UPDATE g SHIA demeanor NONESUCH
    } -cleanup {
        cleanup
    } -result {
        demeanor {invalid value "NONESUCH", should be one of: APATHETIC, AVERAGE, AGGRESSIVE}
    }


    test UPDATE-1.8 {invalid population 1} -setup {
        ted create NB1 SHIA
    } -body {
        ted order -reject CIVGROUP:UPDATE \
            g SHIA basepop NONESUCH
    } -cleanup {
        cleanup
    } -result {
        basepop {invalid value "NONESUCH", expected integer}
    }


    test UPDATE-1.9 {basepop can't be negative} -setup {
        ted create NB1 SHIA
    } -body {
        ted order -reject CIVGROUP:UPDATE \
            g SHIA basepop -1
    } -cleanup {
        cleanup
    } -result {
        basepop {invalid value "-1", expected integer no less than 0}
    }


    test UPDATE-1.10 {invalid sa_flag 1} -setup {
        ted create NB1 SHIA
    } -body {
        ted order -reject CIVGROUP:UPDATE g SHIA sa_flag NONESUCH
    } -cleanup {
        cleanup
    } -result {
        sa_flag {invalid boolean "NONESUCH", should be one of: 1, 0, true, false, yes, no, on, off}
    }


    test UPDATE-2.1 {civgroup is updated} -setup {
        ted create NB1 NB2 SHIA
    } -body {
        ted order CIVGROUP:UPDATE {
            g            SHIA
            longname     "Shia Folk"
            n            NB2
            color        "#ff0000"
            shape        ENEMY
            demeanor     APATHETIC
            basepop      5000
            pop_cr       2.5
            sa_flag      YES
        }

        ted query {SELECT * FROM civgroups_view}
    } -cleanup {
        cleanup
    } -result {
g    longname  color   shape symbol   demeanor  basepop pop_cr rel_entity gtype n   sa_flag 
---- --------- ------- ----- -------- --------- ------- ------ ---------- ----- --- ------- 
SHIA Shia Folk #FF0000 ENEMY civilian APATHETIC 5000    2.5    SHIA       CIV   NB2 1       
    }


    test UPDATE-2.2 {table monitor event} -setup {
        ted create NB1 SHIA
    } -body {
        ted notifier bind ::rdb <civgroups>
        ted order CIVGROUP:UPDATE g SHIA longname "Shia Folk"
        ted notifier received
    } -cleanup {
        cleanup
    } -result {
        {::rdb <civgroups> update SHIA}
    }


    test UPDATE-3.1 {undo effects} -setup {
        ted create NB1 SHIA
        ted order CIVGROUP:UPDATE {
            g            SHIA
            longname     "Shia Folk"
            color        "#ff0000"
        }
    } -body {
        ted notifier bind ::rdb <civgroups>
        cif undo -test
        ted notifier received
    } -cleanup {
        cleanup
    } -result {
        {::rdb <civgroups> update SHIA}
    }

    #-------------------------------------------------------------------
    # CIVGROUP:UPDATE:MULTI

    test UPDATE:MULTI-1.1 {required parms} -body {
        ted order -reject CIVGROUP:UPDATE:MULTI {}
    } -result {
        ids {required value}
    }
    
    test UPDATE:MULTI-1.2 {invalid ids, no groups} -body {
        ted order -reject CIVGROUP:UPDATE:MULTI ids NONESUCH
    } -result {
        ids {Invalid civilian group, none are defined}
    }

    test UPDATE:MULTI-1.3 {invalid ids, groups} -setup {
        ted create NB1 SHIA
    } -body {
        ted order -reject CIVGROUP:UPDATE:MULTI ids NONESUCH
    } -cleanup {
        cleanup
    } -result {
        ids {Invalid civilian group, should be one of: SHIA}
    }

    test UPDATE:MULTI-1.4 {invalid neighborhood} -setup {
        ted create NB1 SHIA
    } -body {
        ted order -reject CIVGROUP:UPDATE:MULTI ids SHIA n NONESUCH
    } -cleanup {
        cleanup
    } -result {
        n {Invalid neighborhood, should be one of: NB1}
    }


    test UPDATE:MULTI-1.5 {invalid color} -setup {
        ted create NB1 SHIA
    } -body {
        ted order -reject CIVGROUP:UPDATE:MULTI ids SHIA color NONESUCH
    } -cleanup {
        cleanup
    } -result {
        color {Invalid hex color specifier, should be "#RRGGBB" or a valid color name}
    }

    test UPDATE:MULTI-1.6 {invalid shape} -setup {
        ted create NB1 SHIA
    } -body {
        ted order -reject CIVGROUP:UPDATE:MULTI ids SHIA shape NONESUCH
    } -cleanup {
        cleanup
    } -result {
        shape {invalid value "NONESUCH", should be one of: FRIEND, ENEMY, NEUTRAL}
    }


    test UPDATE:MULTI-1.7 {invalid demeanor} -setup {
        ted create NB1 SHIA
    } -body {
        ted order -reject CIVGROUP:UPDATE:MULTI ids SHIA demeanor NONESUCH
    } -cleanup {
        cleanup
    } -result {
        demeanor {invalid value "NONESUCH", should be one of: APATHETIC, AVERAGE, AGGRESSIVE}
    }


    test UPDATE:MULTI-1.8 {invalid population 1} -setup {
        ted create NB1 SHIA
    } -body {
        ted order -reject CIVGROUP:UPDATE:MULTI \
            ids SHIA basepop NONESUCH
    } -cleanup {
        cleanup
    } -result {
        basepop {invalid value "NONESUCH", expected integer}
    }


    test UPDATE:MULTI-1.9 {invalid population 2} -setup {
        ted create NB1 SHIA
    } -body {
        ted order -reject CIVGROUP:UPDATE:MULTI \
            ids SHIA basepop -1
    } -cleanup {
        cleanup
    } -result {
        basepop {invalid value "-1", expected integer no less than 0}
    }


    test UPDATE:MULTI-1.10 {invalid sap 1} -setup {
        ted create NB1 SHIA
    } -body {
        ted order -reject CIVGROUP:UPDATE:MULTI ids SHIA sa_flag NONESUCH
    } -cleanup {
        cleanup
    } -result {
        sa_flag {invalid boolean "NONESUCH", should be one of: 1, 0, true, false, yes, no, on, off}
    }

    test UPDATE:MULTI-2.1 {one civgroup of several is updated} -setup {
        ted create NB1 SHIA SUNN
    } -body {
        ted notifier bind ::rdb <civgroups>
        ted order CIVGROUP:UPDATE:MULTI ids SHIA color "#ff0000"
        ted notifier received
    } -cleanup {
        cleanup
    } -result {
        {::rdb <civgroups> update SHIA}
    }


    test UPDATE:MULTI-2.2 {several civgroups are updated} -setup {
        ted create NB1 SHIA SUNN
    } -body {
        ted notifier bind ::rdb <civgroups>
        ted order CIVGROUP:UPDATE:MULTI ids {SHIA SUNN} color "#ff0000"
        ted notifier received
    } -cleanup {
        cleanup
    } -result {
        {::rdb <civgroups> update SHIA}
        {::rdb <civgroups> update SUNN}
    }


    test UPDATE:MULTI-3.1 {undo effects} -setup {
        ted create NB1 SHIA SUNN
        ted order CIVGROUP:UPDATE:MULTI ids {SHIA SUNN} color "#ff0000"
    } -body {
        ted notifier bind ::rdb <civgroups>
        cif undo -test
        ted notifier received
    } -cleanup {
        cleanup
    } -result {
        {::rdb <civgroups> update SHIA}
        {::rdb <civgroups> update SUNN}
    }

    #-------------------------------------------------------------------
    # Cleanup

    cleanupTests
}

namespace delete ::athena_test::tests::







