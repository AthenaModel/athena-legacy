# -*-Tcl-*-
#-----------------------------------------------------------------------
# TITLE:
#    010-aam.test
#
# AUTHOR:
#    Will Duquette
#
# DESCRIPTION:
#    aam(sim) tests.
#
#    This test suite tests the aam(sim) mutators and queries
#
#-----------------------------------------------------------------------

#-----------------------------------------------------------------------
# Test Suite
#
# The tests run in a namespace so as not to interfere with other
# test suites.

namespace eval ::athena_test::tests:: {
    #-------------------------------------------------------------------
    # Set up the test environment

    # Import tcltest(n)
    namespace import ::tcltest::*

    # Clean up after a test

    proc cleanup {} {
        # Clean up the test environment
        ted cleanup
    }

    proc pprint_demog_g {} {
        ted query {
            SELECT g, attrition, displaced, population
            FROM demog_g
        }
    }

    # Units
    variable units
    array set units {
        BLUE-NB1/0000 {
            g         BLUE
            n         NB1
            a         NONE
            tn        NB1
            personnel 15
            cid       0
        }

        BLUE-NB1/0001 {
            g         BLUE
            n         NB1
            a         PATROL
            tn        NB1
            personnel 15
            cid       1
        }

        BRIT-NB1/0000 {
            g         BRIT
            n         NB1
            a         NONE
            tn        NB1
            personnel 15
            cid       0
        }

        USAID-NB1/0000 {
            g         USAID
            n         NB1
            a         NONE
            tn        NB1
            personnel 15
            cid       0
        }

        USAID-NB1/0001 {
            g         USAID
            n         NB1
            a         CMO_HEALTHCARE
            tn        NB1
            personnel 15
            cid       1
        }

        HAL-NB1/0000 {
            g         HAL
            n         NB1
            a         NONE
            tn        NB1
            personnel 15
            cid       0
        }
    }

    # Call this after creating all neighborhoods and units.
    proc mkunits {args} {
        variable units

        personnel mutate reconcile

        foreach unit $args {
            unit create $units($unit)

            dict with units($unit) {
                if {![rdb exists {
                    SELECT * FROM personnel_ng
                    WHERE n=$n AND g=$g
                }]} {
                    personnel mutate set [list id [list $n $g] personnel $personnel]
                } else {
                    personnel mutate adjust [list id [list $n $g] delta $personnel]
                }
            }
        }
    }



    #-------------------------------------------------------------------
    # mutate attritnf

    # 1.* -- Attrition to FRC and ORG units.
    #
    # The code is identical for both types, so we do one ORG test just 
    # to show that we can do it.

    test attritnf-1.1 {f is FRC, all BLUE units attrited} -setup {
        ted create NB1 BLUE BRIT
        mkunits BLUE-NB1/0000 BLUE-NB1/0001 BRIT-NB1/0000
    } -body {
        aam mutate attritnf [list n NB1 f BLUE casualties 20 g1 "" g2 ""]

        # All units had 15 personnel to start.
        # The two BLUE units should be attrited equally.
        # The BRIT unit should not be touched.
        ted query {SELECT u,personnel FROM units}
    } -cleanup {
        cleanup
    } -result {
u             personnel 
------------- --------- 
BLUE-NB1/0000 5         
BLUE-NB1/0001 5         
BRIT-NB1/0000 15        
    }


    test attritnf-1.2 {f is FRC, overkill leaves 0} -setup {
        ted create NB1 BLUE
        mkunits BLUE-NB1/0000 BLUE-NB1/0001 BRIT-NB1/0000
    } -body {
        aam mutate attritnf [list n NB1 f BLUE casualties 40 g1 "" g2 ""]

        # All BLUE units should be at 0.
        ted query {SELECT u,personnel FROM units}
    } -cleanup {
        cleanup
    } -result {
u             personnel 
------------- --------- 
BLUE-NB1/0000 0         
BLUE-NB1/0001 0         
BRIT-NB1/0000 15        
    }


    test attritnf-1.3 {f is FRC, no units present} -setup {
        ted create NB1 BLUE BRIT
        mkunits BRIT-NB1/0000
    } -body {
        aam mutate attritnf [list n NB1 f BLUE casualties 40 g1 "" g2 ""]

        # All BLUE units should be at 0.
        ted query {SELECT u,personnel FROM units}
    } -cleanup {
        cleanup
    } -result {
u             personnel 
------------- --------- 
BRIT-NB1/0000 15        
    }

    
    test attritnf-1.4 {f is ORG, units attrited in proper order} -setup {
        ted create NB1 USAID HAL
        mkunits USAID-NB1/0000 USAID-NB1/0001 HAL-NB1/0000
    } -body {
        aam mutate attritnf [list n NB1 f USAID casualties 20 g1 "" g2 ""]

        # All units had 15 personnel to start.
        # The USAID units should be attrited equally.
        # The HAL unit should not be touched.
        ted query {SELECT u,personnel FROM units}
    } -cleanup {
        cleanup
    } -result {
u              personnel 
-------------- --------- 
USAID-NB1/0000 5         
USAID-NB1/0001 5         
HAL-NB1/0000   15        
    }


    test attritnf-1.6 {f is FRC, ::unit <Entity>} -setup {
        ted create NB1 BLUE BRIT
        mkunits BLUE-NB1/0000 BLUE-NB1/0001 BRIT-NB1/0000
    } -body {
        ted notifier bind ::unit <Entity>
        aam mutate attritnf [list n NB1 f BLUE casualties 20 g1 "" g2 ""]
        ted notifier received
    } -cleanup {
        cleanup
    } -result {
        {::unit <Entity> update BLUE-NB1/0000}
        {::unit <Entity> update BLUE-NB1/0001}
    }


    test attritnf-1.7 {f is FRC, undo restores} -setup {
        ted create NB1 BLUE BRIT
        mkunits BLUE-NB1/0000 BLUE-NB1/0001 BRIT-NB1/0000

        set undo [aam mutate attritnf \
                      [list n NB1 f BLUE casualties 20 g1 "" g2 ""]]
    } -body {
        eval $undo

        # All units should have 15 personnel
        ted query {SELECT u,personnel FROM units}
    } -cleanup {
        cleanup
    } -result {
u             personnel 
------------- --------- 
BLUE-NB1/0000 15        
BLUE-NB1/0001 15        
BRIT-NB1/0000 15        
    }


    test attritnf-1.8 {f is ORG, undo deletes saved attrition} -setup {
        ted create NB1 USAID

        mkunits USAID-NB1/0000 USAID-NB1/0001

        set undo [aam mutate attritnf \
                      [list n NB1 f USAID casualties 20 g1 "" g2 ""]]
    } -body {
        eval $undo

        ted query {SELECT * FROM attrit_nf}
    } -cleanup {
        cleanup
    } -result {
    }


    test attritnf-1.9 {f is FRC, ::unit <Entity> on undo} -setup {
        ted create NB1 BLUE
        mkunits BLUE-NB1/0000 BLUE-NB1/0001 BRIT-NB1/0000

        set undo [aam mutate attritnf \
                      [list n NB1 f BLUE casualties 20 g1 "" g2 ""]]
    } -body {
        ted notifier bind ::unit <Entity>
        eval $undo
        ted notifier received
    } -cleanup {
        cleanup
    } -result {
        {::unit <Entity> update BLUE-NB1/0000}
        {::unit <Entity> update BLUE-NB1/0001}
    }



    # 2.* -- Attrition to a particular civ group

    test attritnf-2.1 {f is CIV, not resident in n} -setup {
        ted create NB1 NB2 BLUE SHIA KURD 
        ted order SIM:LOCK
    } -body {
        aam mutate attritnf [list n NB1 f KURD casualties 20 g1 "" g2 ""]
        demog analyze pop

        # No error
        pprint_demog_g
    } -cleanup {
        cleanup
    } -result {
g    attrition displaced population 
---- --------- --------- ---------- 
SHIA 0         0         1000       
KURD 0         0         1000       
    }

    test attritnf-2.2 {f is CIV, no units in n, normal} -setup {
        ted create NB1 BLUE SHIA SUNN
        ted order SIM:LOCK
    } -body {
        aam mutate attritnf [list n NB1 f SHIA casualties 20 g1 "" g2 ""]
        demog analyze pop

        pprint_demog_g
    } -cleanup {
        cleanup
    } -result {
g    attrition displaced population 
---- --------- --------- ---------- 
SHIA 20        0         980        
SUNN 0         0         1000       
    }


    test attritnf-2.3 {f is CIV, no units in n, overkill leaves 1} -setup {
        ted create NB1 BLUE SHIA SUNN
        ted order SIM:LOCK
    } -body {
        aam mutate attritnf [list n NB1 f SHIA casualties 2000 g1 "" g2 ""]
        demog analyze pop

        pprint_demog_g
    } -cleanup {
        cleanup
    } -result {
g    attrition displaced population 
---- --------- --------- ---------- 
SHIA 999       0         1          
SUNN 0         0         1000       
    }


    test attritnf-2.4 {f is CIV, no units in n, implicit = 1} -setup {
        ted create NB1 BLUE SHIA SUNN
        ted order SIM:LOCK
        # use overkill to get down to that point
        aam mutate attritnf [list n NB1 f SHIA casualties 2000 g1 "" g2 ""]
        demog analyze pop
    } -body {
        aam mutate attritnf [list n NB1 f SHIA casualties 20 g1 "" g2 ""]
        demog analyze pop

        # No change
        pprint_demog_g
    } -cleanup {
        cleanup
    } -result {
g    attrition displaced population 
---- --------- --------- ---------- 
SHIA 999       0         1          
SUNN 0         0         1000       
    }

    test attritnf-2.5 {f is CIV, overkill, attrition is saved} -setup {
        ted create NB1 BLUE SHIA SUNN
        ted order SIM:LOCK
    } -body {
        # There are only 1000 in the nbgroup, and 1 should remain.  However,
        # we'll count the 1 as a casualty anyway.
        aam mutate attritnf [list n NB1 f SHIA casualties 2000 g1 "" g2 ""]
        
        ted query {SELECT * FROM attrit_nf}
    } -cleanup {
        cleanup
    } -result {
id n   f    casualties 
-- --- ---- ---------- 
1  NB1 SHIA 1000       
    }


    test attritnf-2.6 {f is CIV, overkill, g1, g2 are saved} -setup {
        ted create NB1 BLUE BRIT SHIA SUNN
        ted order SIM:LOCK
    } -body {
        aam mutate attritnf \
            [list n NB1 f SHIA casualties 2000 g1 BLUE g2 BRIT]
        
        ted query {SELECT * FROM attrit_nfg}
    } -cleanup {
        cleanup
    } -result {
id n   f    g    casualties 
-- --- ---- ---- ---------- 
1  NB1 SHIA BLUE 1000       
2  NB1 SHIA BRIT 1000       
    }

    test attritnf-2.7 {f is CIV, undo restores} -setup {
        ted create NB1 BLUE SHIA SUNN
        ted order SIM:LOCK
        set undo [list]
        lappend undo [aam mutate attritnf \
                          [list n NB1 f SHIA casualties 15 g1 BLUE g2 BRIT]]
    } -body {
        eval [join $undo \n]

        set a [pprint_demog_g]
        set b [ted query {SELECT u,personnel FROM units}]
        set c [ted query {SELECT * FROM attrit_nf}]
        set d [ted query {SELECT * FROM attrit_nfg}]

        set e "$a$b$c$d"
    } -cleanup {
        cleanup
    } -result {
g    attrition displaced population 
---- --------- --------- ---------- 
SHIA 0         0         1000       
SUNN 0         0         1000       
    
u             personnel 
------------- --------- 
SHIA-NB1/0000 1000      
SUNN-NB1/0000 1000      
    
    
    }

    #-------------------------------------------------------------------
    # mutate attritn




    # 1.* -- All civilians in nbhood.

    test attritn-1.1 {All civilians in nbhood} -setup {
        ted create NB1 BLUE SHIA SUNN
        ted order SIM:LOCK
    } -body {
        aam mutate attritn [list n NB1 casualties 20 g1 "" g2 ""]
        demog analyze pop

        pprint_demog_g
    } -cleanup {
        cleanup
    } -result {
g    attrition displaced population 
---- --------- --------- ---------- 
SHIA 10        0         990        
SUNN 10        0         990        
    }


    test attritn-1.2 {nbhood, overkill leaves 1 per resident} -setup {
        ted create NB1 BLUE SHIA SUNN
        ted order SIM:LOCK
    } -body {
        aam mutate attritn [list n NB1 casualties 3000  g1 "" g2 ""]
        demog analyze pop

        pprint_demog_g
    } -cleanup {
        cleanup
    } -result {
g    attrition displaced population 
---- --------- --------- ---------- 
SHIA 999       0         1          
SUNN 999       0         1          
    }


    test attritn-1.3 {nbhood, attrition is proportional} -setup {
        ted create NB1 BLUE SHIA SUNN
        ted order SIM:LOCK
    } -body {
        aam mutate attritn [list n NB1 casualties 100  g1 "" g2 ""]
        demog analyze pop

        set a [pprint_demog_g]
        set b [ted query {SELECT u,personnel FROM units}]
        set c "$a$b"
    } -cleanup {
        cleanup
    } -result {
g    attrition displaced population 
---- --------- --------- ---------- 
SHIA 50        0         950        
SUNN 50        0         950        
    
u             personnel 
------------- --------- 
SHIA-NB1/0000 950       
SUNN-NB1/0000 950       
    }

    test attritn-1.4 {nbhood, displaced units attrit origin} -setup {
        ted create NB1 NB2 BLUE SHIA KURD
        ted order ACTIVITY:SCHEDULE n NB2 g KURD a DISPLACED tn NB1 \
            personnel 100 start 0 finish NEVER pattern daily
        ted order SIM:LOCK
    } -body {
        aam mutate attritn [list n NB1 casualties 100 g1 "" g2 ""]
        demog analyze pop

        set a [pprint_demog_g]
        set b [ted query {SELECT u,personnel FROM units}]
        set c "$a$b"
    } -cleanup {
        cleanup
    } -result {
g    attrition displaced population 
---- --------- --------- ---------- 
SHIA 91        0         909        
KURD 9         91        900        
    
u             personnel 
------------- --------- 
KURD-NB2/0001 91        
SHIA-NB1/0000 909       
KURD-NB2/0000 900       
    }


    test attritn-1.5 {nbhood, attrition is saved} -setup {
        ted create NB1 BLUE SHIA SUNN
        ted order SIM:LOCK
    } -body {
        aam mutate attritn [list n NB1 casualties 10000 g1 BLUE g2 BRIT]
        demog analyze pop

        set a [ted query {SELECT * FROM attrit_nf}]
        set b [ted query {SELECT * FROM attrit_nfg}]
        set c "$a$b"
    } -cleanup {
        cleanup
    } -result {
id n   f    casualties 
-- --- ---- ---------- 
1  NB1 SHIA 1000       
2  NB1 SUNN 1000       
    
id n   f    g    casualties 
-- --- ---- ---- ---------- 
1  NB1 SHIA BLUE 1000       
2  NB1 SHIA BRIT 1000       
3  NB1 SUNN BLUE 1000       
4  NB1 SUNN BRIT 1000       
    }


    test attritn-1.6 {nbhood, force, org units not attrited} -setup {
        ted create NB1 BLUE USAID SHIA SUNN
        personnel mutate reconcile
        ted order PERSONNEL:SET id {NB1 BLUE}  personnel 15
        ted order PERSONNEL:SET id {NB1 USAID} personnel 15
        ted order SIM:LOCK
    } -body {
        aam mutate attritn [list n NB1 casualties 10000 g1 BLUE g2 BRIT]

        ted query {SELECT u,personnel FROM units}
    } -cleanup {
        cleanup
    } -result {
u              personnel 
-------------- --------- 
BLUE-NB1/0000  15        
SHIA-NB1/0000  0         
SUNN-NB1/0000  0         
USAID-NB1/0000 15        
    }


    test attritn-1.7 {nbhood, ::unit <Entity>} -setup {
        ted create NB1 BLUE SHIA
        ted order SIM:LOCK
    } -body {
        ted notifier bind ::unit <Entity>
        aam mutate attritn [list n NB1 casualties 100 g1 "" g2 ""]
        ted notifier received
    } -cleanup {
        cleanup
    } -result {
        {::unit <Entity> update SHIA-NB1/0000}
    }


    test attritn-1.8 {nbhood, undo restores} -setup {
        ted create NB1 BLUE SHIA SUNN
        ted order SIM:LOCK

        set undo [list]
        lappend undo [aam mutate attritn \
                          [list n NB1 casualties 100 g1 "" g2 ""]]
    } -body {
        eval [join $undo \n]

        set a [pprint_demog_g]
        set b [ted query {SELECT u,personnel FROM units}]
        set c [ted query {SELECT * FROM attrit_nf}]
        set d [ted query {SELECT * FROM attrit_nfg}]
        set e "$a$b$c$d"
    } -cleanup {
        cleanup
    } -result {
g    attrition displaced population 
---- --------- --------- ---------- 
SHIA 0         0         1000       
SUNN 0         0         1000       
    
u             personnel 
------------- --------- 
SHIA-NB1/0000 1000      
SUNN-NB1/0000 1000      
    
    
    }


    test attritn-1.9 {nbhood, ::unit <Entity> on undo} -setup {
        ted create NB1 BLUE SHIA SUNN
        ted order SIM:LOCK

        set a [aam mutate attritn \
                   [list n NB1 casualties 100 g1 "" g2 ""]]

    } -body {
        ted notifier bind ::unit <Entity>
        eval $a
        ted notifier received
    } -cleanup {
        cleanup
    } -result {
        {::unit <Entity> update SHIA-NB1/0000}
        {::unit <Entity> update SUNN-NB1/0000}
    }

    #-------------------------------------------------------------------
    # mutate attritunit
    #
    # For CIV units, the unit's neighborhood group is attrited as well
    # as the unit.  For FRC and ORG units, the unit's personnel_ng 
    # record is attrited as well as the unit.  Otherwise, attrition is 
    # handled identically for all three kinds of unit.

    test attritunit-1.1 {FRC unit is attrited} -setup {
        ted create NB1 BLUE
        mkunits BLUE-NB1/0000 BLUE-NB1/0001
    } -body {
        aam mutate attritunit [list u BLUE-NB1/0001 casualties 5 g1 "" g2 ""]

        # All units had 15 personnel to start.
        # BLUE-NB1/0001 should be down 5.
        ted query {SELECT u,personnel FROM units}
    } -cleanup {
        cleanup
    } -result {
u             personnel 
------------- --------- 
BLUE-NB1/0000 15        
BLUE-NB1/0001 10        
    }

    # TBD: Show personnel_ng getting attrited and restored on undo.
    

    test attritunit-1.1 {ORG unit is attrited} -setup {
        ted create NB1 USAID
        mkunits USAID-NB1/0000 USAID-NB1/0001
    } -body {
        aam mutate attritunit [list u USAID-NB1/0001 casualties 5 g1 "" g2 ""]

        # All units had 15 personnel to start.
        # USAID-NB1/0001 should be down 5.
        ted query {SELECT u,personnel FROM units}
    } -cleanup {
        cleanup
    }  -result {
u              personnel 
-------------- --------- 
USAID-NB1/0000 15        
USAID-NB1/0001 10        
    }


    test attritunit-3.1 {CIV unit is attrited in home nbhood} -setup {
        ted create NB1 BLUE BRIT SHIA
        ted order SIM:LOCK
    } -body {
        aam mutate attritunit [list u SHIA-NB1/0000 casualties 5 g1 BLUE g2 BRIT]

        set a [ted query {SELECT u,personnel FROM units}]
        set b [pprint_demog_g]
        set c [ted query {SELECT * FROM attrit_nf}]
        set d [ted query {SELECT * FROM attrit_nfg}]
        set e "$a$b$c$d"
    } -cleanup {
        cleanup
    }  -result {
u             personnel 
------------- --------- 
SHIA-NB1/0000 995       
    
g    attrition displaced population 
---- --------- --------- ---------- 
SHIA 5         0         995        
    
id n   f    casualties 
-- --- ---- ---------- 
1  NB1 SHIA 5          
    
id n   f    g    casualties 
-- --- ---- ---- ---------- 
1  NB1 SHIA BLUE 5          
2  NB1 SHIA BRIT 5          
    }

    test attritunit-4.1 {::unit <Entity>} -setup {
        ted create NB1 BLUE SHIA
        ted order SIM:LOCK
    } -body {
        ted notifier bind ::unit <Entity>
        aam mutate attritunit [list u SHIA-NB1/0000 casualties 5 g1 "" g2 ""]
        ted notifier received
    } -cleanup {
        cleanup
    }  -result {
        {::unit <Entity> update SHIA-NB1/0000}
    }


    test attritunit-4.2 {Undo restores unit and nbgroup} -setup {
        ted create NB1 BLUE SHIA
        ted order SIM:LOCK

        set a [aam mutate attritunit \
                   [list u SHIA-NB1/0000 casualties 5 g1 "" g2 ""]]

    } -body {
        eval $a

        set a [ted query {SELECT u,personnel FROM units}]
        set b [pprint_demog_g]
        set c [ted query {SELECT * FROM attrit_nf}]
        set d [ted query {SELECT * FROM attrit_nfg}]
        set e "$a$b$c$d"
    } -cleanup {
        cleanup
    }  -result {
u             personnel 
------------- --------- 
SHIA-NB1/0000 1000      
    
g    attrition displaced population 
---- --------- --------- ---------- 
SHIA 0         0         1000       
    
    
    }


    test attritunit-4.3 {::unit <Entity> on undo} -setup {
        ted create NB1 BLUE SHIA
        ted order SIM:LOCK

        set a [aam mutate attritunit \
                   [list u SHIA-NB1/0000 casualties 5 g1 "" g2 ""]]

    } -body {
        ted notifier bind ::unit <Entity>
        eval $a
        ted notifier received
    } -cleanup {
        cleanup
    }  -result {
        {::unit <Entity> update SHIA-NB1/0000}
    }

    #-------------------------------------------------------------------
    # Cleanup

    cleanupTests
}

namespace delete ::athena_test::tests::





