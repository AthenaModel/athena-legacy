# -*-Tcl-*-
#-----------------------------------------------------------------------
# TITLE:
#    010-condition_nbcoop.test
#
# AUTHOR:
#    Will Duquette
#
# DESCRIPTION:
#    condition_nbcoop(sim) tests.
#
#    This test suite tests the condition_nbcoop(sim) ensemble.
#
#-----------------------------------------------------------------------

#-----------------------------------------------------------------------
# Test Suite
#
# The tests run in a namespace so as not to interfere with other
# test suites.

namespace eval ::athena_test::tests:: {
    #-------------------------------------------------------------------
    # Set up the test environment

    # Import tcltest(n)
    namespace import ::tcltest::*

    # Set up for tests

    proc setup {} {
        ted create JOE BOB NB1 NB2 BLUE BRIT SUNN SHIA

        ted order TACTIC:DEPOSIT:CREATE owner JOE amount 10

        # Verify that unused columns contain NULL
        rdb nullvalue "@"
    }

    # Clean up after a test

    proc cleanup {} {
        # Clean up the test environment
        rdb nullvalue ""
        array unset parms
        ted cleanup
    }

    # Standard Conditions.
    
    set C1 {
        cc_id          1
        condition_type NBCOOP
        n              NB1
        g              BLUE
        op1            LT
        x1             50.0
    }

    #-------------------------------------------------------------------
    # narrative

    test narrative-1.1 {narrative} -setup {
        setup
        condition mutate create $C1
    } -body {
        condition::NBCOOP narrative [condition get 1]
    } -cleanup {
        cleanup
    } -result {Neighborhood NB1's cooperation with force group BLUE is less than 50.0.}

    #-------------------------------------------------------------------
    # check


    test check-1.1 {check: successful} -setup {
        setup
        condition mutate create $C1
    } -body {
        condition::NBCOOP check [condition get 1]
    } -cleanup {
        cleanup
    } -result {}

    test check-1.2 {check: group deleted} -setup {
        setup
        condition mutate create $C1
        nbhood mutate delete NB1
    } -body {
        condition::NBCOOP check [condition get 1]
    } -cleanup {
        cleanup
    } -result {Neighborhood NB1 no longer exists.}

    test check-1.3 {check: group deleted} -setup {
        setup
        condition mutate create $C1
        frcgroup mutate delete BLUE
    } -body {
        condition::NBCOOP check [condition get 1]
    } -cleanup {
        cleanup
    } -result {Force group BLUE no longer exists.}

    #-------------------------------------------------------------------
    # eval


    proc NbcoopEval {nbcoop comp amount} {
        rdb eval {
            SELECT ng_id FROM uram_nbcoop WHERE n='NB1' AND g='BLUE'
        } {
            rdb eval {
                UPDATE uram_nbcoop_t 
                SET nbcoop=$nbcoop
                WHERE ng_id=$ng_id
            }
        }
        condition mutate update [list condition_id 1 op1 $comp x1 $amount]
        return [condition::NBCOOP eval [condition get 1]]
    }

    test eval-1.1 {Test eval} -setup {
        setup
        aram init
        condition mutate create $C1
    } -body {
        set a [NbcoopEval 50.000 EQ 50]
        set b [NbcoopEval 50 GE 50.000]
        set c [NbcoopEval 50 LE 50.000]
        set d [NbcoopEval 50 GT 45]
        set e [NbcoopEval 50 LT 45]

        list $a $b $c $d $e
    } -cleanup {
        cleanup
    } -result {1 1 1 1 0}

    #-------------------------------------------------------------------
    # Cleanup

    cleanupTests
}

namespace delete ::athena_test::tests::







