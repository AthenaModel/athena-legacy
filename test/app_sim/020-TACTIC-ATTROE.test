# -*-Tcl-*-
#-----------------------------------------------------------------------
# TITLE:
#    020-TACTIC-ATTROE.test
#
# AUTHOR:
#    Will Duquette
#
# DESCRIPTION:
#    TACTIC:ATTROE:* Orders tests
#
#-----------------------------------------------------------------------

#-----------------------------------------------------------------------
# Test Suite
#
# The tests run in a namespace so as not to interfere with other
# test suites.

namespace eval ::athena_test::tests:: {
    #-------------------------------------------------------------------
    # Set up the test environment

    # Import tcltest(n)
    namespace import ::tcltest::*

    # Set up for tests

    proc setup {} {
        ted create NB1 JOE BOB BLUE TAL
        variable S1
        variable B1
        variable T1

        set B1 [ted addblock JOE]
        set T1 [ted addtactic $B1 ATTROE]
    }

    # Clean up after a test

    proc cleanup {} {
        ted cleanup
    }

    #-------------------------------------------------------------------
    # TACTIC:ATTROE

    test TACTIC:ATTROE-1.1 {required parameters} -setup {
        setup
    } -body {
        ted order -reject TACTIC:ATTROE
    } -cleanup {
        cleanup
    } -result {
        tactic_id {required value}
    }

    test TACTIC:ATTROE-1.2 {unknown tactic_id} -setup {
        setup
    } -body {
        ted order -reject TACTIC:ATTROE tactic_id NONESUCH
    } -cleanup {
        cleanup
    } -match glob -result {
        tactic_id {Invalid ATTROE ID: "NONESUCH"}
    }

    test TACTIC:ATTROE-1.3 {invalid f} -setup {
        setup
    } -body {
        ted order -reject TACTIC:ATTROE tactic_id [$T1 id] f "NONE SUCH"
    } -cleanup {
        cleanup
    } -result {
        f {Identifiers begin with a letter and contain only letters and digits.}
    }

    test TACTIC:ATTROE-1.4 {invalid g} -setup {
        setup
    } -body {
        ted order -reject TACTIC:ATTROE tactic_id [$T1 id] g "NONE SUCH"
    } -cleanup {
        cleanup
    } -result {
        g {Identifiers begin with a letter and contain only letters and digits.}
    }

    test TACTIC:ATTROE-1.5 {invalid n} -setup {
        setup
    } -body {
        ted order -reject TACTIC:ATTROE tactic_id [$T1 id] n "NONE SUCH"
    } -cleanup {
        cleanup
    } -result {
        n {Identifiers begin with a letter and contain only letters and digits.}
    }

    test TACTIC:ATTROE-1.6 {invalid attacks} -setup {
        setup
    } -body {
        ted order -reject TACTIC:ATTROE tactic_id [$T1 id] attacks 0
    } -cleanup {
        cleanup
    } -result {
        attacks {invalid value "0", expected integer no less than 1}
    }

    test TACTIC:ATTROE-2.1 {tactic updated} -setup {
        setup
    } -body {
        ted order TACTIC:ATTROE \
            tactic_id [$T1 id]  \
            f         BLUE      \
            g         TAL       \
            n         NB1       \
            roe       ATTACK    \
            attacks   5

        ted pdicts [$T1 getdict]
    } -cleanup {
        cleanup
    } -match dictglob -result {
        attacks    5
        execstatus NONE
        f          BLUE
        g          TAL
        id         *
        n          NB1
        parent     ::bean::block*
        roe        ATTACK
        state      normal
    }

    test TACTIC:ATTROE-2.2 {notifier event} -setup {
        setup
    } -body {
        ted notifier bind ::projectlib::bean <Monitor>
        ted order TACTIC:ATTROE tactic_id [$T1 id] f BLUE
        ted notifier received
    } -cleanup {
        cleanup
    } -match glob -result {*{::projectlib::bean <Monitor>}*}

    test TACTIC:ATTROE-2.3 {undo notifier event} -setup {
        setup
        ted order TACTIC:ATTROE tactic_id [$T1 id] f BLUE
    } -body {
        ted notifier bind ::projectlib::bean <Monitor>
        cif undo -test
        ted notifier received
    } -cleanup {
        cleanup
    } -match glob -result {*{::projectlib::bean <Monitor>}*}
 

    #-------------------------------------------------------------------
    # Cleanup

    cleanupTests
}

namespace delete ::athena_test::tests::







