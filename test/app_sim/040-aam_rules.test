# -*-Tcl-*-
#-----------------------------------------------------------------------
# TITLE:
#    040-aam_rules.test
#
# AUTHOR:
#    Will Duquette
#
# DESCRIPTION:
#    aam_rules(sim) tests
#
#    This test suite tests that the rules fire when appropriate.
#
#-----------------------------------------------------------------------

#-----------------------------------------------------------------------
# Test Suite
#
# The tests run in a namespace so as not to interfere with other
# test suites.

namespace eval ::athena_test::tests:: {
    #-------------------------------------------------------------------
    # Set up the test environment

    # Import tcltest(n)
    namespace import ::tcltest::*

    # setup
    #
    # Sets up for tests.
    
    proc setup {} {
        # FIRST, other rule sets shouldn't muddy the waters.
        parm set dam.PRESENCE.active no
        parm set dam.UNEMP.active no
        parm set dam.ENI.active no
        rdb eval {DELETE FROM drivers}
        rdb eval {DELETE FROM mads_t}
        
        # NEXT, create the entities
        ted create JOE BOB NB1 BLUE BRIT SHIA SUNN
        
        # NEXT, lock, so we can do magic attrition
        ted lock
    }
    
    # attrit casualties ?g1 ?g2??
    #
    # casualties  - The number of casualities to inflict
    # g1          - The first responsible force group, if any
    # g2          - The second responsible force group, if any.
    #
    # Attrits groups in NB1, and advances time so that rules fire.
    
    proc attrit {casualties {g1 ""} {g2 ""}} {
        ted order ATTRIT:NBHOOD n NB1 casualties $casualties g1 $g1 g2 $g2
        ted step
    }
    
    # Clean up after a test
    proc cleanup {} {
        ted cleanup
    }

    #-------------------------------------------------------------------
    # CIVCAS
    
    test CIVCAS-1.1 {Rule 1-1 fires} -setup {
        setup
    } -body {
        attrit 1000
        ted querylist {
            SELECT * FROM rule_firings WHERE rule GLOB 'CIVCAS-1-*'
        }
    } -cleanup {
        cleanup
    } -result {
firing_id  1
t          1
driver_id  1001
ruleset    CIVCAS
rule       CIVCAS-1-1
fdict      casualties 500.0 f SHIA n NB1 mult 2.0

firing_id  2
t          1
driver_id  1002
ruleset    CIVCAS
rule       CIVCAS-1-1
fdict      casualties 500.0 f SUNN n NB1 mult 2.0
    }
    
    test CIVCAS-1.2 {Rule 1-1 inputs} -setup {
        setup
    } -body {
        attrit 1000
        ted query {
            SELECT rule, g, c, note 
            FROM rule_firings JOIN rule_inputs USING (firing_id)
            WHERE rule GLOB 'CIVCAS-1-*'
        }
    } -cleanup {
        cleanup
    } -result {
rule       g    c   note 
---------- ---- --- ---- 
CIVCAS-1-1 SHIA AUT      
CIVCAS-1-1 SHIA SFT      
CIVCAS-1-1 SHIA QOL      
CIVCAS-1-1 SUNN AUT      
CIVCAS-1-1 SUNN SFT      
CIVCAS-1-1 SUNN QOL      
    }
    
    test CIVCAS-2.1 {Rule 2-1 does not fire without groups} -setup {
        setup
    } -body {
        attrit 1000
        rdb eval {
            SELECT count(*) FROM rule_firings WHERE rule GLOB 'CIVCAS-2-*'
        }
    } -cleanup {
        cleanup
    } -result {0}
    
    test CIVCAS-2.2 {Rule 2-1 fires with one group} -setup {
        setup
    } -body {
        attrit 1000 BLUE
        ted querylist {
            SELECT * FROM rule_firings WHERE rule GLOB 'CIVCAS-2-*'
        }
    } -cleanup {
        cleanup
    } -result {
firing_id  3
t          1
driver_id  1001
ruleset    CIVCAS
rule       CIVCAS-2-1
fdict      casualties 500.0 f SHIA n NB1 g BLUE mult 2.0

firing_id  4
t          1
driver_id  1002
ruleset    CIVCAS
rule       CIVCAS-2-1
fdict      casualties 500.0 f SUNN n NB1 g BLUE mult 2.0
    }
    
    test CIVCAS-2.3 {Rule 2-1 fires with two groups} -setup {
        setup
    } -body {
        attrit 1000 BLUE BRIT
        ted querylist {
            SELECT * FROM rule_firings WHERE rule GLOB 'CIVCAS-2-*'
        }
    } -cleanup {
        cleanup
    } -result {
firing_id  3
t          1
driver_id  1001
ruleset    CIVCAS
rule       CIVCAS-2-1
fdict      casualties 500.0 f SHIA n NB1 g BLUE mult 2.0

firing_id  4
t          1
driver_id  1001
ruleset    CIVCAS
rule       CIVCAS-2-1
fdict      casualties 500.0 f SHIA n NB1 g BRIT mult 2.0

firing_id  5
t          1
driver_id  1002
ruleset    CIVCAS
rule       CIVCAS-2-1
fdict      casualties 500.0 f SUNN n NB1 g BLUE mult 2.0

firing_id  6
t          1
driver_id  1002
ruleset    CIVCAS
rule       CIVCAS-2-1
fdict      casualties 500.0 f SUNN n NB1 g BRIT mult 2.0
    }
    
    
    test CIVCAS-2.4 {Rule 2-1 inputs} -setup {
        setup
    } -body {
        attrit 1000 BLUE
        ted query {
            SELECT rule, f, g, note 
            FROM rule_firings JOIN rule_inputs USING (firing_id)
            WHERE rule GLOB 'CIVCAS-2-*'
        }
    } -cleanup {
        cleanup
    } -result {
rule       f    g    note 
---------- ---- ---- ---- 
CIVCAS-2-1 SHIA BLUE      
CIVCAS-2-1 SUNN BLUE      
    }
    
    
    
    
    
    
    cleanupTests
}

namespace delete ::athena_test::tests::







