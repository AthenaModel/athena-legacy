# -*-Tcl-*-
#-----------------------------------------------------------------------
# TITLE:
#    010-frcgroup.test
#
# AUTHOR:
#    Will Duquette
#
# DESCRIPTION:
#    frcgroup(sim) tests.
#
#    This test suite tests the frcgroup(sim) mutators and queries
#
#-----------------------------------------------------------------------

#-----------------------------------------------------------------------
# Test Suite
#
# The tests run in a namespace so as not to interfere with other
# test suites.

namespace eval ::athena_test::tests:: {
    #-------------------------------------------------------------------
    # Set up the test environment

    # Import tcltest(n)
    namespace import ::tcltest::*

    # Clean up after a test

    proc cleanup {} {
        # Clean up the test environment
        array unset parms
        ted cleanup
    }

    #-------------------------------------------------------------------
    # mutate create

    test create-1.1 {frcgroup is created} -body {
        frcgroup mutate create [ted entity BLUE]
        ted query {SELECT * FROM frcgroups_view}
    } -cleanup {
        cleanup
    } -result {
g    longname color   shape  symbol   demeanor gtype forcetype uniformed local 
---- -------- ------- ------ -------- -------- ----- --------- --------- ----- 
BLUE US Army  #f00001 FRIEND infantry AVERAGE  FRC   REGULAR   1         0     
    }


    test create-1.2 {<Entity> create} -body {
        ted notifier bind ::frcgroup <Entity>
        frcgroup mutate create [ted entity BLUE]
        ted notifier received
    } -cleanup {
        cleanup
    } -result {
        {::frcgroup <Entity> create BLUE}
    }


    test create-3.1 {undo deletes the frcgroup} -setup {
        frcgroup mutate create [ted entity BLUE]
        set undo [frcgroup mutate create [ted entity BRIT]]
    } -body {
        {*}$undo
        rdb eval {SELECT g FROM frcgroups_view}
    } -cleanup {
        cleanup
    } -result {BLUE}


    test create-3.2 {On undo, <Entity> delete} -setup {
        set undo [frcgroup mutate create [ted entity BLUE]]
    } -body {
        ted notifier bind ::frcgroup <Entity>
        {*}$undo
        ted notifier received
    } -cleanup {
        cleanup
    } -result {
        {::frcgroup <Entity> delete BLUE}
    }

    #-------------------------------------------------------------------
    # mutate delete

    test delete-1.1 {Group is deleted} -setup {
        ted create BLUE BRIT
    } -body {
        frcgroup mutate delete BLUE

        # Is BLUE gone?
        rdb eval {SELECT g FROM frcgroups_view}
    } -cleanup {
        cleanup
    } -result {BRIT}


    test delete-1.2 {<Entity> delete} -setup {
        ted create BLUE
    } -body {
        ted notifier bind ::frcgroup <Entity>
        frcgroup mutate delete BLUE
        ted notifier received
    } -cleanup {
        cleanup
    } -result {
        {::frcgroup <Entity> delete BLUE}
    }


    test delete-2.1 {Undo restores group} -setup {
        ted create BLUE
        set undo [frcgroup mutate delete BLUE]
    } -body {
        {*}$undo
        ted query {SELECT * FROM frcgroups_view}
    } -cleanup {
        cleanup
    } -result {
g    longname color   shape  symbol   demeanor gtype forcetype uniformed local 
---- -------- ------- ------ -------- -------- ----- --------- --------- ----- 
BLUE US Army  #f00001 FRIEND infantry AVERAGE  FRC   REGULAR   1         0     
    }


    test delete-2.2 {On undo, <Entity> create} -setup {
        ted create BLUE
        set undo [frcgroup mutate delete BLUE]
    } -body {
        ted notifier bind ::frcgroup <Entity>
        {*}$undo
        ted notifier received
    } -cleanup {
        cleanup
    } -result {
        {::frcgroup <Entity> create BLUE}
    }

    #-------------------------------------------------------------------
    # mutate update


    test update-1.1 {frcgroup is updated} -setup {
        ted create BLUE
    } -body {
        frcgroup mutate update {
            g            BLUE
            longname     "Blue Angels"
            color        "#ff0000"
            shape        NEUTRAL
            forcetype    POLICE
            demeanor     AGGRESSIVE
            uniformed    0
            local        1  
        }

        ted query {SELECT * FROM frcgroups_view}
    } -cleanup {
        cleanup
    } -result {
g    longname    color   shape   symbol demeanor   gtype forcetype uniformed local 
---- ----------- ------- ------- ------ ---------- ----- --------- --------- ----- 
BLUE Blue Angels #ff0000 NEUTRAL police AGGRESSIVE FRC   POLICE    0         1     
    }


    test update-1.2 {identical values are OK} -setup {
        ted create BLUE
    } -body {
        set a [ted query {SELECT * FROM frcgroups_view}]

        frcgroup mutate update [ted entity BLUE]

        set b [ted query {SELECT * FROM frcgroups_view}]

        expr {$a eq $b}
    } -cleanup {
        cleanup
    } -result {1}


    test update-1.3 {empty values are OK} -setup {
        ted create BLUE
    } -body {
        set a [ted query {SELECT * FROM frcgroups_view}]

        frcgroup mutate update  {
            g            BLUE
            longname     ""
            color        ""
            forcetype    ""
            demeanor     ""
            uniformed    ""
            local        ""
        }

        set b [ted query {SELECT * FROM frcgroups_view}]

        expr {$a eq $b}
    } -cleanup {
        cleanup
    } -result {1}


    test update-1.4 {<Entity> update} -setup {
        ted create BLUE
    } -body {
        ted notifier bind ::frcgroup <Entity>
        frcgroup mutate update  {
            g            BLUE
            longname     ""
            color        ""
            forcetype    ""
            demeanor     ""
            uniformed    ""
            local        ""
        }
        ted notifier received
    } -cleanup {
        cleanup
    } -result {
        {::frcgroup <Entity> update BLUE}
    }


    test update-2.1 {undo undoes the change} -setup {
        ted create BLUE
    } -body {

        set a [ted query {SELECT * FROM frcgroups_view}]

        set undo [frcgroup mutate update {
            g            BLUE
            longname     "Blue Angels"
            color        ""
            forcetype    ""
            demeanor     ""
            uniformed    ""
            local        ""
        }]

        {*}$undo

        set b [ted query {SELECT * FROM frcgroups_view}]

        expr {$a eq $b}
    } -cleanup {
        cleanup
    } -result {1}

    test update-2.2 {undo sends <Entity> update} -setup {
        ted create BLUE
    } -body {
        set undo [frcgroup mutate update {
            g            BLUE
            longname     "Blue Angels"
            color        ""
            forcetype    ""
            demeanor     ""
            uniformed    ""
            local        ""
        }]

        ted notifier bind ::frcgroup <Entity>
        {*}$undo
        ted notifier received
    } -cleanup {
        cleanup
    } -result {
        {::frcgroup <Entity> update BLUE}
    }


    #-------------------------------------------------------------------
    # names

    test names-1.1 {Returns names: none defined} -body {
        frcgroup names
    } -cleanup {
        cleanup
    } -result {}

    test names-1.2 {Returns names} -setup {
        ted create BLUE BRIT
    } -body {
        frcgroup names
    } -cleanup {
        cleanup
    } -result {BLUE BRIT}


    #-------------------------------------------------------------------
    # validate

    test validate-1.1 {Invalid name: none defined} -body {
        frcgroup validate NONESUCH
    } -returnCodes {
        error
    } -cleanup {
        cleanup
    } -result {Invalid force group, none are defined}

    test validate-1.2 {Invalid name: some defined} -setup {
        ted create BLUE BRIT
    } -body {
        frcgroup validate NONESUCH
    } -returnCodes {
        error
    } -cleanup {
        cleanup
    } -result {Invalid force group, should be one of: BLUE, BRIT}

    test validate-2.1 {Valid name} -setup {
        ted create BLUE BRIT
    } -body {
        frcgroup validate BRIT
    } -cleanup {
        cleanup
    } -result {BRIT}


    #-------------------------------------------------------------------
    # uniformed names

    test uniformed_names-1.1 {Returns names: none defined} -body {
        frcgroup uniformed names
    } -cleanup {
        cleanup
    } -result {}

    test uniformed_names-1.2 {Returns names} -setup {
        ted create BLUE BRIT ALQ
    } -body {
        frcgroup uniformed names
    } -cleanup {
        cleanup
    } -result {BLUE BRIT}


    #-------------------------------------------------------------------
    # uniformed validate

    test uniformed_validate-1.1 {Invalid name: none defined} -body {
        frcgroup uniformed validate NONESUCH
    } -returnCodes {
        error
    } -cleanup {
        cleanup
    } -result {Invalid uniformed force group, none are defined}

    test uniformed_validate-1.2 {Invalid name: some defined} -setup {
        ted create BLUE BRIT ALQ
    } -body {
        frcgroup uniformed validate NONESUCH
    } -returnCodes {
        error
    } -cleanup {
        cleanup
    } -result {Invalid uniformed force group, should be one of: BLUE, BRIT}

    test uniformed_validate-2.1 {Valid name} -setup {
        ted create BLUE BRIT ALQ
    } -body {
        frcgroup uniformed validate BRIT
    } -cleanup {
        cleanup
    } -result {BRIT}


    #-------------------------------------------------------------------
    # nonuniformed names

    test nonuniformed_names-1.1 {Returns names: none defined} -body {
        frcgroup nonuniformed names
    } -cleanup {
        cleanup
    } -result {}

    test nonuniformed_names-1.2 {Returns names} -setup {
        ted create BLUE BRIT ALQ
    } -body {
        frcgroup nonuniformed names
    } -cleanup {
        cleanup
    } -result {ALQ}


    #-------------------------------------------------------------------
    # nonuniformed validate

    test nonuniformed_validate-1.1 {Invalid name: none defined} -body {
        frcgroup nonuniformed validate NONESUCH
    } -returnCodes {
        error
    } -cleanup {
        cleanup
    } -result {Invalid non-uniformed force group, none are defined}

    test nonuniformed_validate-1.2 {Invalid name: some defined} -setup {
        ted create BLUE BRIT ALQ
    } -body {
        frcgroup nonuniformed validate NONESUCH
    } -returnCodes {
        error
    } -cleanup {
        cleanup
    } -result {Invalid non-uniformed force group, should be one of: ALQ}

    test nonuniformed_validate-2.1 {Valid name} -setup {
        ted create BLUE BRIT ALQ
    } -body {
        frcgroup nonuniformed validate ALQ
    } -cleanup {
        cleanup
    } -result {ALQ}

    #-------------------------------------------------------------------
    # Cleanup

    cleanupTests
}

namespace delete ::athena_test::tests::





