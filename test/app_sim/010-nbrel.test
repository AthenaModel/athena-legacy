# -*-Tcl-*-
#-----------------------------------------------------------------------
# TITLE:
#    010-nbrel.test
#
# AUTHOR:
#    Will Duquette
#
# DESCRIPTION:
#    nbrel(sim) tests.
#
#    This test suite tests the nbrel(sim) mutators and queries
#
#-----------------------------------------------------------------------

#-----------------------------------------------------------------------
# Test Suite
#
# The tests run in a namespace so as not to interfere with other
# test suites.

namespace eval ::athena_test::tests:: {
    #-------------------------------------------------------------------
    # Set up the test environment

    # Import tcltest(n)
    namespace import ::tcltest::*

    # Clean up after a test

    proc cleanup {} {
        # Clean up the test environment
        ted cleanup
    }


    #-------------------------------------------------------------------
    # mutate update


    test update-1.1 {nbrel is updated} -setup {
        ted create NB1 NB2
    } -body {
        nbrel mutate update {
            id            {NB1 NB2}
            proximity     NEAR
            effects_delay 1.0
        }

        ted query {SELECT * FROM nbrel_mn ORDER BY m,n}
    } -cleanup {
        cleanup
    } -result {
m   n   proximity effects_delay 
--- --- --------- ------------- 
NB1 NB1 HERE      0.0           
NB1 NB2 NEAR      1.0           
NB2 NB1 REMOTE    0.0           
NB2 NB2 HERE      0.0           
    }


    test update-1.2 {identical values are OK} -setup {
        ted create NB1 NB2
        set parmdict {
            id            {NB1 NB2}
            proximity     NEAR
            effects_delay 1.0
        }

        nbrel mutate update $parmdict
    } -body {
        set a [ted query {SELECT * FROM nbrel_mn}]
        
        nbrel mutate update $parmdict

        set b [ted query {SELECT * FROM nbrel_mn}]

        expr {$a eq $b}
    } -cleanup {
        cleanup
    } -result {1}


    test update-1.3 {empty values are OK} -setup {
        ted create NB1 NB2
    } -body {
        set a [ted query {SELECT * FROM nbrel_mn}]

        nbrel mutate update  {
            id            {NB1 NB2}
            proximity     ""
            effects_delay ""
        }

        set b [ted query {SELECT * FROM nbrel_mn}]

        expr {$a eq $b}
    } -cleanup {
        cleanup
    } -result {1}



    test update-2.1 {undo undoes the change} -setup {
        ted create NB1 NB2
    } -body {

        set a [ted query {SELECT * FROM nbrel_mn ORDER BY m,n}]

        set undo [nbrel mutate update {
            id            {NB1 NB2}
            proximity     NEAR
            effects_delay 1.0
        }]

        eval $undo

        set b [ted query {SELECT * FROM nbrel_mn ORDER BY m,n}]

        expr {$a eq $b}
    } -cleanup {
        cleanup
    } -result {1}


    #-------------------------------------------------------------------
    # validate

    test validate-1.1 {invalid m} -setup {
        ted create NB1 NB2
    } -body {
        nbrel validate {NONESUCH NONESUCH}
    } -returnCodes {
        error
    } -cleanup {
        cleanup
    } -result {Invalid neighborhood, should be one of: NB1, NB2}


    test validate-1.2 {invalid n} -setup {
        ted create NB1 NB2
    } -body {
        nbrel validate {NB1 NONESUCH}
    } -returnCodes {
        error
    } -cleanup {
        cleanup
    } -result {Invalid neighborhood, should be one of: NB1, NB2}

    #-------------------------------------------------------------------
    # Cleanup

    cleanupTests
}

namespace delete ::athena_test::tests::





