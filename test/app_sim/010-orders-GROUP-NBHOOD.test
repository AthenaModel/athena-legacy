# -*-Tcl-*-
#-----------------------------------------------------------------------
# TITLE:
#    010-order-GROUP-NBHOOD.test
#
# AUTHOR:
#    Will Duquette
#
# DESCRIPTION:
#    app_sim(1) GROUP:NBHOOD:* order tests.
#
#    This test suite tests the nbgroup-related orders.
#
#-----------------------------------------------------------------------

#-----------------------------------------------------------------------
# Test Suite
#
# The tests run in a namespace so as not to interfere with other
# test suites.

namespace eval ::athena_test::tests:: {
    #-------------------------------------------------------------------
    # Set up the test environment

    # Import tcltest(n)
    namespace import ::tcltest::*

    # Standard groups

    set n1shia {
        n              N1
        g              SHIA
        local_name     "N1 Shias"
        demeanor       AVERAGE
        rollup_weight  1.0
        effects_factor 1.1
    }

    set n1sunn {
        n              N1
        g              SUNN
        local_name     "N1 Sunnis"
        demeanor       AGGRESSIVE
        rollup_weight  1.2
        effects_factor 1.3
    }

    # Neighborhoods
    ted order NBHOOD:CREATE {
        n            N1
        longname     "Nbhood 1"
        urbanization RURAL
        refpoint     B00B00
        polygon      {A00A00 C00A00 C00C00 A00C00}
    }

    # Civ Groups
    ted order GROUP:CIVILIAN:CREATE {
        g            SHIA
        longname     "Local Shias"
        color        "#00ffff"
    }

    ted order GROUP:CIVILIAN:CREATE {
        g            SUNN
        longname     "Local Sunnis"
        color        "#ffff00"
    }

    ted order GROUP:CIVILIAN:CREATE {
        g            KURD
        longname     "Local Kurds"
        color        "#ff00ff"
    }


    # Clean up after a test

    proc cleanup {} {
        # Clean up the test environment
        array unset parms
        ted notifier forget

        # Delete all created entities and reinitialize the module
        rdb eval {
            DELETE FROM nbgroups;
            DELETE FROM sat_ngc;
        }

        nbgroup reconfigure
        sat reconfigure

        cif clear
    }

    #-------------------------------------------------------------------
    # GROUP:NBHOOD:CREATE

    test CREATE-1.1 {required parms} -body {
        ted order -reject GROUP:NBHOOD:CREATE {}
    } -result {
        n {required value}
        g {required value}
        demeanor {required value}
        rollup_weight {required value}
        effects_factor {required value}
    }

    test CREATE-1.2 {n is not a nbhood} -body {
        ted order -reject GROUP:NBHOOD:CREATE [dict merge $n1shia {
            n NONESUCH
        }]
    } -cleanup {
        cleanup
    } -result {
        n {Invalid neighborhood, should be one of: N1}
    }


    test CREATE-1.3 {g is not a civ group} -body {
        ted order -reject GROUP:NBHOOD:CREATE [dict merge $n1shia {
            g NONESUCH
        }]
    } -cleanup {
        cleanup
    } -result {
        g {Invalid civilian group, should be one of: SHIA, SUNN, KURD}
    }

    test CREATE-1.4 {n,g is already an nbgroup} -setup {
        ted order GROUP:NBHOOD:CREATE $n1shia
    } -body {
        ted order -reject GROUP:NBHOOD:CREATE $n1shia
    } -cleanup {
        cleanup
    } -result {
        g {This group already resides in this neighborhood}
    }

    test CREATE-1.5 {invalid demeanor} -body {
        ted order -reject GROUP:NBHOOD:CREATE [dict merge $n1shia {
            demeanor NONESUCH
        }]
    } -result {
        demeanor {invalid value, "NONESUCH"}
    }

    test CREATE-1.6 {invalid rollup_weight 1} -body {
        ted order -reject GROUP:NBHOOD:CREATE [dict merge $n1shia {
            rollup_weight NONESUCH
        }]
    } -result {
        rollup_weight {invalid value "NONESUCH", expected double}
    }


    test CREATE-1.7 {invalid rollup_weight 2} -body {
        ted order -reject GROUP:NBHOOD:CREATE [dict merge $n1shia {
            rollup_weight -0.1
        }]
    } -result {
        rollup_weight {invalid value "-0.1", expected double no less than 0.0}
    }


    test CREATE-1.8 {invalid effects_factor 1} -body {
        ted order -reject GROUP:NBHOOD:CREATE [dict merge $n1shia {
            effects_factor NONESUCH
        }]
    } -result {
        effects_factor {invalid value "NONESUCH", expected double}
    }


    test CREATE-1.9 {invalid effects_factor 2} -body {
        ted order -reject GROUP:NBHOOD:CREATE [dict merge $n1shia {
            effects_factor -0.1
        }]
    } -result {
        effects_factor {invalid value "-0.1", expected double no less than 0.0}
    }


    test CREATE-2.1 {nbgroup is created} -body {
        ted order GROUP:NBHOOD:CREATE $n1shia
        ted order GROUP:NBHOOD:CREATE $n1sunn
        set parms [join [dict keys $n1shia] ","]
        ted query "SELECT $parms FROM nbgroups_view"
    } -cleanup {
        cleanup
    } -result {
n  g    local_name demeanor   rollup_weight effects_factor 
-- ---- ---------- ---------- ------------- -------------- 
N1 SHIA N1 Shias   AVERAGE    1.0           1.1            
N1 SUNN N1 Sunnis  AGGRESSIVE 1.2           1.3            
    }


    test CREATE-2.2 {<Entity> create} -body {
        ted notifier bind ::nbgroup <Entity>
        ted order GROUP:NBHOOD:CREATE $n1shia
        ted notifier received
    } -cleanup {
        cleanup
    } -result {
        {::nbgroup <Entity> create N1 SHIA}
    }


    test CREATE-2.3 {local_name defaults to longname} -body {
        ted order GROUP:NBHOOD:CREATE [dict merge $n1shia {
            local_name ""
        }]
        set parms [join [dict keys $n1shia] ","]
        ted query "SELECT $parms FROM nbgroups"
    } -cleanup {
        cleanup
    } -result {
n  g    local_name  demeanor rollup_weight effects_factor 
-- ---- ----------- -------- ------------- -------------- 
N1 SHIA Local Shias AVERAGE  1.0           1.1            
    }


    test CREATE-2.4 {Satisfaction curves are populated} -body {
        ted order GROUP:NBHOOD:CREATE $n1shia
        ted order GROUP:NBHOOD:CREATE $n1sunn
        ted query {
            SELECT * FROM sat_ngc
        }
    } -cleanup {
        cleanup
    } -result {
n  g    c   gtype sat0 trend0 saliency 
-- ---- --- ----- ---- ------ -------- 
N1 SHIA AUT CIV   0.0  0.0    1.0      
N1 SHIA SFT CIV   0.0  0.0    1.0      
N1 SHIA CUL CIV   0.0  0.0    1.0      
N1 SHIA QOL CIV   0.0  0.0    1.0      
N1 SUNN AUT CIV   0.0  0.0    1.0      
N1 SUNN SFT CIV   0.0  0.0    1.0      
N1 SUNN CUL CIV   0.0  0.0    1.0      
N1 SUNN QOL CIV   0.0  0.0    1.0      
    }


    test CREATE-3.1 {undo deletes the nbgroup} -setup {
        ted order GROUP:NBHOOD:CREATE $n1shia
        ted order GROUP:NBHOOD:CREATE $n1sunn
    } -body {
        cif undo
        ted query "SELECT n,g,local_name FROM nbgroups"
    } -cleanup {
        cleanup
    } -result {
n  g    local_name 
-- ---- ---------- 
N1 SHIA N1 Shias   
    }


    test CREATE-3.1 {undo deletes the nbgroup} -setup {
        ted order GROUP:NBHOOD:CREATE $n1shia
        ted order GROUP:NBHOOD:CREATE $n1sunn
    } -body {
        cif undo
        ted query "SELECT n,g,local_name FROM nbgroups"
    } -cleanup {
        cleanup
    } -result {
n  g    local_name 
-- ---- ---------- 
N1 SHIA N1 Shias   
    }

    test CREATE-3.2 {undo deletes sat curves} -setup {
        ted order GROUP:NBHOOD:CREATE $n1shia
        ted order GROUP:NBHOOD:CREATE $n1sunn
    } -body {
        cif undo
        ted query "SELECT * FROM sat_ngc"

        # Sunni data should be gone.
    } -cleanup {
        cleanup
    } -result {
n  g    c   gtype sat0 trend0 saliency 
-- ---- --- ----- ---- ------ -------- 
N1 SHIA AUT CIV   0.0  0.0    1.0      
N1 SHIA SFT CIV   0.0  0.0    1.0      
N1 SHIA CUL CIV   0.0  0.0    1.0      
N1 SHIA QOL CIV   0.0  0.0    1.0      
    }


    #-------------------------------------------------------------------
    # GROUP:NBHOOD:DELETE

    test DELETE-1.1 {required parms} -body {
        ted order -reject GROUP:NBHOOD:DELETE {}
    } -result {
        n {required value}
        g {required value}
    }

    
    test DELETE-1.2 {unknown n,g} -body {
        ted order -reject GROUP:NBHOOD:DELETE n NONESUCH1 g NONESUCH2
    } -result {
        n {Invalid neighborhood, should be one of: N1}
        g {Invalid civilian group, should be one of: SHIA, SUNN, KURD}
    }


    test DELETE-1.3 {no such nbgroup} -body {
        ted order -reject GROUP:NBHOOD:DELETE n N1 g KURD
    } -result {
        g {Group KURD does not reside in neighborhood N1}
    }


    test DELETE-2.1 {Group is deleted} -setup {
        ted order GROUP:NBHOOD:CREATE $n1shia
    } -body {
        ted order GROUP:NBHOOD:DELETE n N1 g SHIA
        rdb query {SELECT * FROM nbgroups}
    } -cleanup {
        cleanup
    } -result {}


    test DELETE-2.2 {<Entity> delete} -setup {
        ted order GROUP:NBHOOD:CREATE $n1shia
    } -body {
        ted notifier bind ::nbgroup <Entity>
        ted order GROUP:NBHOOD:DELETE n N1 g SHIA
        ted notifier received
    } -cleanup {
        cleanup
    } -result {
        {::nbgroup <Entity> delete N1 SHIA}
    }

    test DELETE-2.3 {Sat curves are deleted} -setup {
        ted order GROUP:NBHOOD:CREATE $n1shia
        ted order GROUP:NBHOOD:CREATE $n1sunn
    } -body {
        ted order GROUP:NBHOOD:DELETE n N1 g SHIA
        ted query {SELECT * FROM sat_ngc}
    } -cleanup {
        cleanup
    } -result {
n  g    c   gtype sat0 trend0 saliency 
-- ---- --- ----- ---- ------ -------- 
N1 SUNN AUT CIV   0.0  0.0    1.0      
N1 SUNN SFT CIV   0.0  0.0    1.0      
N1 SUNN CUL CIV   0.0  0.0    1.0      
N1 SUNN QOL CIV   0.0  0.0    1.0      
    }


    test DELETE-3.1 {Undo recreates the group} -setup {
        ted order GROUP:NBHOOD:CREATE $n1shia
        ted order GROUP:NBHOOD:DELETE n N1 g SHIA
    } -body {
        cif undo
        set parms [join [dict keys $n1shia] ","]
        ted query "SELECT $parms FROM nbgroups"
    } -cleanup {
        cleanup
    } -result {
n  g    local_name demeanor rollup_weight effects_factor 
-- ---- ---------- -------- ------------- -------------- 
N1 SHIA N1 Shias   AVERAGE  1.0           1.1            
    }


    test DELETE-3.2 {Undo recreates the sat curves} -setup {
        ted order GROUP:NBHOOD:CREATE $n1shia
        ted order SAT:UPDATE {
            n N1 g SHIA c SFT sat0 1.0 trend0 2.0 saliency 0.5
        }
        ted order GROUP:NBHOOD:DELETE n N1 g SHIA
    } -body {
        cif undo
        ted query {SELECT * FROM sat_ngc}
    } -cleanup {
        cleanup
    } -result {
n  g    c   gtype sat0 trend0 saliency 
-- ---- --- ----- ---- ------ -------- 
N1 SHIA AUT CIV   0.0  0.0    1.0      
N1 SHIA SFT CIV   1.0  2.0    0.5      
N1 SHIA CUL CIV   0.0  0.0    1.0      
N1 SHIA QOL CIV   0.0  0.0    1.0      
    }


    #-------------------------------------------------------------------
    # GROUP:NBHOOD:UPDATE

    test UPDATE-1.1 {required parms} -body {
        ted order -reject GROUP:NBHOOD:UPDATE {}
    } -result {
        n {required value}
        g {required value}
    }
    

    test UPDATE-1.2 {invalid n, g} -body {
        ted order -reject GROUP:NBHOOD:UPDATE n NONESUCH1 g NONESUCH1
    } -result {
        n {Invalid neighborhood, should be one of: N1}
        g {Invalid civilian group, should be one of: SHIA, SUNN, KURD}
    }


    test UPDATE-1.3 {undefined nbgroup} -body {
        ted order -reject GROUP:NBHOOD:UPDATE n N1 g SHIA
    } -result {
        g {Group SHIA does not reside in neighborhood N1}
    }


    test UPDATE-1.4 {invalid demeanor} -setup {
        ted order GROUP:NBHOOD:CREATE $n1shia
    } -body {
        ted order -reject GROUP:NBHOOD:UPDATE n N1 g SHIA demeanor NONESUCH
    } -cleanup {
        cleanup
    } -result {
        demeanor {invalid value, "NONESUCH"}
    }


    test UPDATE-1.5 {invalid rollup_weight 1} -setup {
        ted order GROUP:NBHOOD:CREATE $n1shia
    } -body {
        ted order -reject GROUP:NBHOOD:UPDATE n N1 g SHIA rollup_weight NONESUCH
    } -cleanup {
        cleanup
    } -result {
        rollup_weight {invalid value "NONESUCH", expected double}
    }


    test UPDATE-1.6 {invalid rollup_weight 2} -setup {
        ted order GROUP:NBHOOD:CREATE $n1shia
    } -body {
        ted order -reject GROUP:NBHOOD:UPDATE n N1 g SHIA rollup_weight -0.1
    } -cleanup {
        cleanup
    } -result {
        rollup_weight {invalid value "-0.1", expected double no less than 0.0}
    }


    test UPDATE-1.7 {invalid effects_factor 1} -setup {
        ted order GROUP:NBHOOD:CREATE $n1shia
    } -body {
        ted order -reject GROUP:NBHOOD:UPDATE n N1 g SHIA effects_factor NONESUCH
    } -cleanup {
        cleanup
    } -result {
        effects_factor {invalid value "NONESUCH", expected double}
    }


    test UPDATE-1.8 {invalid effects_factor 2} -setup {
        ted order GROUP:NBHOOD:CREATE $n1shia
    } -body {
        ted order -reject GROUP:NBHOOD:UPDATE n N1 g SHIA effects_factor -0.1
    } -cleanup {
        cleanup
    } -result {
        effects_factor {invalid value "-0.1", expected double no less than 0.0}
    }


    test UPDATE-2.1 {nbgroup is updated} -setup {
        ted order GROUP:NBHOOD:CREATE $n1shia
    } -body {
        ted order GROUP:NBHOOD:UPDATE {
            n              N1
            g              SHIA
            local_name     "John Doe"
            demeanor       APATHETIC
            rollup_weight  0.1
            effects_factor 0.2
        }

        set parms [join [dict keys $n1shia] ","]
        ted query "SELECT $parms FROM nbgroups_view"
    } -cleanup {
        cleanup
    } -result {
n  g    local_name demeanor  rollup_weight effects_factor 
-- ---- ---------- --------- ------------- -------------- 
N1 SHIA John Doe   APATHETIC 0.1           0.2            
    }


    test UPDATE-2.2 {<Entity> update} -setup {
        ted order GROUP:NBHOOD:CREATE $n1shia
    } -body {
        ted notifier bind ::nbgroup <Entity>
        ted order GROUP:NBHOOD:UPDATE n N1 g SHIA local_name "John Doe"
        ted notifier received
    } -cleanup {
        cleanup
    } -result {
        {::nbgroup <Entity> update N1 SHIA}
    }


    test UPDATE-3.1 {undo undoes the change} -setup {
        ted order GROUP:NBHOOD:CREATE $n1shia
        ted order GROUP:NBHOOD:UPDATE {
            n              N1
            g              SHIA
            local_name     "John Doe"
            demeanor       APATHETIC
            rollup_weight  0.1
            effects_factor 0.2
        }
    } -body {
        cif undo
        set parms [join [dict keys $n1shia] ","]
        ted query "SELECT $parms FROM nbgroups_view"
    } -cleanup {
        cleanup
    } -result {
n  g    local_name demeanor rollup_weight effects_factor 
-- ---- ---------- -------- ------------- -------------- 
N1 SHIA N1 Shias   AVERAGE  1.0           1.1            
    }

    #-------------------------------------------------------------------
    # GROUP:NBHOOD:UPDATE:MULTI

    test UPDATE:MULTI-1.1 {required parms} -body {
        ted order -reject GROUP:NBHOOD:UPDATE:MULTI {}
    } -result {
        ids {required value}
    }
    

    test UPDATE:MULTI-1.2 {invalid ids, no groups, bad nbhood} -body {
        ted order -reject GROUP:NBHOOD:UPDATE:MULTI \
            ids {{NONESUCH SHIA}}
    } -result {
        ids {Invalid neighborhood, should be one of: N1}
    }


    test UPDATE:MULTI-1.3 {invalid ids, no groups, bad group} -body {
        ted order -reject GROUP:NBHOOD:UPDATE:MULTI \
            ids {{N1 NONESUCH}}
    } -result {
        ids {Invalid civilian group, should be one of: SHIA, SUNN, KURD}
    }


    test UPDATE:MULTI-1.4 {invalid ids, no groups, no nbgroup} -body {
        ted order -reject GROUP:NBHOOD:UPDATE:MULTI \
            ids {{N1 SHIA}}
    } -result {
        ids {Group SHIA does not reside in neighborhood N1}
    }

    test UPDATE:MULTI-1.5 {invalid demeanor} -setup {
        ted order GROUP:NBHOOD:CREATE $n1shia
    } -body {
        ted order -reject GROUP:NBHOOD:UPDATE:MULTI \
            ids {{N1 SHIA}} demeanor NONESUCH
    } -cleanup {
        cleanup
    } -result {
        demeanor {invalid value, "NONESUCH"}
    }


    test UPDATE:MULTI-1.6 {invalid rollup_weight 1} -setup {
        ted order GROUP:NBHOOD:CREATE $n1shia
    } -body {
        ted order -reject GROUP:NBHOOD:UPDATE:MULTI \
            ids {{N1 SHIA}} rollup_weight NONESUCH
    } -cleanup {
        cleanup
    } -result {
        rollup_weight {invalid value "NONESUCH", expected double}
    }


    test UPDATE:MULTI-1.7 {invalid rollup_weight 2} -setup {
        ted order GROUP:NBHOOD:CREATE $n1shia
    } -body {
        ted order -reject GROUP:NBHOOD:UPDATE:MULTI \
            ids {{N1 SHIA}} rollup_weight -0.1
    } -cleanup {
        cleanup
    } -result {
        rollup_weight {invalid value "-0.1", expected double no less than 0.0}
    }


    test UPDATE:MULTI-1.8 {invalid effects_factor 1} -setup {
        ted order GROUP:NBHOOD:CREATE $n1shia
    } -body {
        ted order -reject GROUP:NBHOOD:UPDATE:MULTI \
            ids {{N1 SHIA}} effects_factor NONESUCH
    } -cleanup {
        cleanup
    } -result {
        effects_factor {invalid value "NONESUCH", expected double}
    }


    test UPDATE:MULTI-1.9 {invalid effects_factor 2} -setup {
        ted order GROUP:NBHOOD:CREATE $n1shia
    } -body {
        ted order -reject GROUP:NBHOOD:UPDATE:MULTI \
            ids {{N1 SHIA}} effects_factor -0.1
    } -cleanup {
        cleanup
    } -result {
        effects_factor {invalid value "-0.1", expected double no less than 0.0}
    }


    test UPDATE:MULTI-2.1 {one nbgroup of several is updated} -setup {
        ted order GROUP:NBHOOD:CREATE $n1shia
        ted order GROUP:NBHOOD:CREATE $n1sunn
    } -body {
        ted order GROUP:NBHOOD:UPDATE:MULTI {
            ids            {{N1 SHIA}}
            local_name     "John Doe"
            demeanor       APATHETIC
            rollup_weight  0.1
            effects_factor 0.2
        }

        ted query {
            SELECT n,g,local_name,demeanor,rollup_weight,effects_factor
            FROM nbgroups_view
        }
    } -cleanup {
        cleanup
    } -result {
n  g    local_name demeanor   rollup_weight effects_factor 
-- ---- ---------- ---------- ------------- -------------- 
N1 SHIA John Doe   APATHETIC  0.1           0.2            
N1 SUNN N1 Sunnis  AGGRESSIVE 1.2           1.3            
    }


    test UPDATE:MULTI-2.2 {several nbgroups are updated} -setup {
        ted order GROUP:NBHOOD:CREATE $n1shia
        ted order GROUP:NBHOOD:CREATE $n1sunn
    } -body {
        ted order GROUP:NBHOOD:UPDATE:MULTI {
            ids            {{N1 SHIA} {N1 SUNN}}
            local_name     "John Doe"
            demeanor       APATHETIC
            rollup_weight  0.1
            effects_factor 0.2
        }

        ted query {
            SELECT n,g,local_name,demeanor,rollup_weight,effects_factor
            FROM nbgroups_view
        }
    } -cleanup {
        cleanup
    } -result {
n  g    local_name demeanor  rollup_weight effects_factor 
-- ---- ---------- --------- ------------- -------------- 
N1 SHIA John Doe   APATHETIC 0.1           0.2            
N1 SUNN John Doe   APATHETIC 0.1           0.2            
    }


    test UPDATE:MULTI-2.3 {<Entity> update} -setup {
        ted order GROUP:NBHOOD:CREATE $n1shia
        ted order GROUP:NBHOOD:CREATE $n1sunn
    } -body {
        ted notifier bind ::nbgroup <Entity>
        ted order GROUP:NBHOOD:UPDATE:MULTI \
            ids {{N1 SHIA} {N1 SUNN}} local_name "John Doe"
        ted notifier received
    } -cleanup {
        cleanup
    } -result {
        {::nbgroup <Entity> update N1 SHIA}
        {::nbgroup <Entity> update N1 SUNN}
    }


    test UPDATE:MULTI-3.1 {undo undoes the change} -setup {
        ted order GROUP:NBHOOD:CREATE $n1shia
        ted order GROUP:NBHOOD:CREATE $n1sunn
        ted order GROUP:NBHOOD:UPDATE:MULTI {
            ids            {{N1 SHIA} {N1 SUNN}}
            local_name     "John Doe"
            demeanor       APATHETIC
            rollup_weight  0.1
            effects_factor 0.2
        }
    } -body {
        cif undo -test
        ted query {
            SELECT n,g,local_name,demeanor,rollup_weight,effects_factor
            FROM nbgroups_view
        }
    } -cleanup {
        cleanup
    } -result {
n  g    local_name demeanor   rollup_weight effects_factor 
-- ---- ---------- ---------- ------------- -------------- 
N1 SHIA N1 Shias   AVERAGE    1.0           1.1            
N1 SUNN N1 Sunnis  AGGRESSIVE 1.2           1.3            
    }

    test UPDATE:MULTI-3.2 {undo sends update} -setup {
        ted order GROUP:NBHOOD:CREATE $n1shia
        ted order GROUP:NBHOOD:CREATE $n1sunn
        ted order GROUP:NBHOOD:UPDATE:MULTI {
            ids            {{N1 SHIA} {N1 SUNN}}
            local_name     "John Doe"
        }
    } -body {
        ted notifier bind ::nbgroup <Entity>
        cif undo -test
        ted notifier received
    } -cleanup {
        cleanup
    } -result {
        {::nbgroup <Entity> update N1 SHIA}
        {::nbgroup <Entity> update N1 SUNN}
    }

    #-------------------------------------------------------------------
    # Cleanup

    cleanupTests
    scenario new
}

namespace delete ::athena_test::tests::




