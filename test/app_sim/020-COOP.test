# -*-Tcl-*-
#-----------------------------------------------------------------------
# TITLE:
#    020-COOPERATION.test
#
# AUTHOR:
#    Will Duquette
#
# DESCRIPTION:
#    app_sim(1) COOP:* order tests.
#
#    This test suite tests the cooperation-related orders.
#
#-----------------------------------------------------------------------

#-----------------------------------------------------------------------
# Test Suite
#
# The tests run in a namespace so as not to interfere with other
# test suites.

namespace eval ::athena_test::tests:: {
    #-------------------------------------------------------------------
    # Set up the test environment

    # Import tcltest(n)
    namespace import ::tcltest::*

    proc setup {} {
        ted create BLUE NB1 SHIA SUNN
        coop mutate reconcile
    }


    # Clean up after a test

    proc cleanup {} {
        ted cleanup
    }


    #-------------------------------------------------------------------
    # COOP:UPDATE

    test UPDATE-1.1 {required parms} -body {
        ted order -reject COOP:UPDATE {}
    } -result {
        id {required value}
    }
    

    test UPDATE-1.2 {invalid id} -setup {
        setup
    } -body {
        ted order -reject COOP:UPDATE id NONESUCH
    } -cleanup {
        cleanup
    } -result {
        id {Invalid civilian group, should be one of: SHIA, SUNN}
    }


    test UPDATE-1.3 {invalid coop0: out of range} -setup {
        setup
    } -body {
        ted order -reject COOP:UPDATE id {SHIA BLUE} coop0 100.1
    } -cleanup {
        cleanup
    } -result {
        coop0 {invalid value "100.1", should be a real number in range 0.0, 100.0, or one of: AC, VC, C, MC, U, VU, NC}
    }


    test UPDATE-1.4 {invalid atrend: out of range} -setup {
        setup
    } -body {
        ted order -reject COOP:UPDATE id {SHIA BLUE} atrend -5.0
    } -cleanup {
        cleanup
    } -result {
        atrend {invalid value "-5.0", expected double no less than 0.0}
    }


    test UPDATE-1.5 {invalid athresh: out of range} -setup {
        setup
    } -body {
        ted order -reject COOP:UPDATE id {SHIA BLUE} athresh NONESUCH
    } -cleanup {
        cleanup
    } -result {
        athresh {invalid value "NONESUCH", should be a real number in range 0.0, 100.0, or one of: AC, VC, C, MC, U, VU, NC}
    }


    test UPDATE-1.6 {invalid dtrend: out of range} -setup {
        setup
    } -body {
        ted order -reject COOP:UPDATE id {SHIA BLUE} dtrend 5.0
    } -cleanup {
        cleanup
    } -result {
        dtrend {invalid value "5.0", expected double no greater than 0.0}
    }


    test UPDATE-1.7 {invalid dthresh: out of range} -setup {
        setup
    } -body {
        ted order -reject COOP:UPDATE id {SHIA BLUE} dthresh NONESUCH
    } -cleanup {
        cleanup
    } -result {
        dthresh {invalid value "NONESUCH", should be a real number in range 0.0, 100.0, or one of: AC, VC, C, MC, U, VU, NC}
    }


    test UPDATE-2.1 {coop0 is updated} -setup {
        setup
    } -body {
        ted order COOP:UPDATE {
            id      {SHIA BLUE}
            coop0   40.0
            atrend  5.0
            athresh 40
            dtrend  -5.0
            dthresh 60
        }

        ted query {SELECT * FROM coop_fg}
    } -cleanup {
        cleanup
    } -result {
f    g    coop0 atrend athresh dtrend dthresh 
---- ---- ----- ------ ------- ------ ------- 
SHIA BLUE 40.0  5.0    40.0    -5.0   60.0    
SUNN BLUE 50.0  0.0    50.0    0.0    50.0    
    }


    test UPDATE-2.2 {<coop_fg> update} -setup {
        setup
    } -body {
        ted notifier bind ::rdb <coop_fg>
        ted order COOP:UPDATE id {SHIA BLUE} coop0 50.0
        ted notifier received
    } -cleanup {
        cleanup
    } -result {
        {::rdb <coop_fg> update {SHIA BLUE}}
    }


    test UPDATE-3.1 {undo undoes the change} -setup {
        setup

        ted order COOP:UPDATE {
            id      {SHIA BLUE}
            coop0   40.0
            atrend  5.0
            athresh 40
            dtrend  -5.0
            dthresh 60
        }
    } -body {
        ted notifier bind ::rdb <coop_fg>
        cif undo -test
        ted notifier received
    } -cleanup {
        cleanup
    } -result {
        {::rdb <coop_fg> update {SHIA BLUE}}
    }

    #-------------------------------------------------------------------
    # COOP:UPDATE:MULTI

    test UPDATE:MULTI-1.1 {required parms} -setup {
        setup
    } -body {
        ted order -reject COOP:UPDATE:MULTI {}
    } -cleanup {
        cleanup
    } -result {
        ids {required value}
    }
    

    test UPDATE:MULTI-1.2 {invalid id in ids} -setup {
        setup
    } -body {
        ted order -reject COOP:UPDATE:MULTI \
            ids {NONESUCH1 {SHIA BLUE}}
    } -cleanup {
        cleanup
    } -result {
        ids {Invalid civilian group, should be one of: SHIA, SUNN}
    }

    test UPDATE:MULTI-1.3 {invalid coop: out of range} -setup {
        setup
    } -body {
        ted order -reject COOP:UPDATE:MULTI \
            ids {{SHIA BLUE}} coop0 100.1
    } -cleanup {
        cleanup
    } -result {
        coop0 {invalid value "100.1", should be a real number in range 0.0, 100.0, or one of: AC, VC, C, MC, U, VU, NC}
    }


    test UPDATE:MULTI-1.4 {invalid atrend: out of range} -setup {
        setup
    } -body {
        ted order -reject COOP:UPDATE:MULTI \
            ids {{SHIA BLUE}} atrend -5.0
    } -cleanup {
        cleanup
    } -result {
        atrend {invalid value "-5.0", expected double no less than 0.0}
    }


    test UPDATE:MULTI-1.5 {invalid athresh} -setup {
        setup
    } -body {
        ted order -reject COOP:UPDATE:MULTI \
            ids {{SHIA BLUE}} athresh NONESUCH
    } -cleanup {
        cleanup
    } -result {
        athresh {invalid value "NONESUCH", should be a real number in range 0.0, 100.0, or one of: AC, VC, C, MC, U, VU, NC}
    }


    test UPDATE:MULTI-1.6 {invalid dtrend: out of range} -setup {
        setup
    } -body {
        ted order -reject COOP:UPDATE:MULTI \
            ids {{SHIA BLUE}} dtrend 5.0
    } -cleanup {
        cleanup
    } -result {
        dtrend {invalid value "5.0", expected double no greater than 0.0}
    }


    test UPDATE:MULTI-1.7 {invalid dthresh} -setup {
        setup
    } -body {
        ted order -reject COOP:UPDATE:MULTI \
            ids {{SHIA BLUE}} dthresh NONESUCH
    } -cleanup {
        cleanup
    } -result {
        dthresh {invalid value "NONESUCH", should be a real number in range 0.0, 100.0, or one of: AC, VC, C, MC, U, VU, NC}
    }


    test UPDATE:MULTI-2.1 {one cooperation of several is updated} -setup {
        setup
    } -body {
        ted notifier bind ::rdb <coop_fg>

        ted order COOP:UPDATE:MULTI {
            ids       {{SHIA BLUE}}
            coop0     40.0
            atrend    5.0
            athresh   40
            dtrend    -5.0
            dthresh   60
        }

        ted notifier received
    } -cleanup {
        cleanup
    } -result {
        {::rdb <coop_fg> update {SHIA BLUE}}
    }


    test UPDATE:MULTI-2.2 {several cooperations are updated} -setup {
        setup
        coop mutate reconcile
    } -body {
        ted notifier bind ::rdb <coop_fg>
        ted order COOP:UPDATE:MULTI {
            ids       {{SHIA BLUE} {SUNN BLUE}} 
            coop0     40.0
            atrend    5.0
            athresh   40
            dtrend    -5.0
            dthresh   60
        }
        ted notifier received
    } -cleanup {
        cleanup
    } -result {
        {::rdb <coop_fg> update {SHIA BLUE}}
        {::rdb <coop_fg> update {SUNN BLUE}}
    }


    test UPDATE:MULTI-3.1 {undo undoes the change} -setup {
        setup
        coop mutate reconcile

        ted order COOP:UPDATE:MULTI {
            ids       {{SHIA BLUE} {SUNN BLUE}}
            coop0     40.0
            atrend    5.0
            athresh   40
            dtrend    -5.0
            dthresh   60
        }
    } -body {
        ted notifier bind ::rdb <coop_fg>
        cif undo -test
        ted notifier received
    } -cleanup {
        cleanup
    } -result {
        {::rdb <coop_fg> update {SHIA BLUE}}
        {::rdb <coop_fg> update {SUNN BLUE}}
    }


    #-------------------------------------------------------------------
    # Cleanup

    cleanupTests
}

namespace delete ::athena_test::tests::







