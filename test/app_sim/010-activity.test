# -*-Tcl-*-
#-----------------------------------------------------------------------
# TITLE:
#    010-activity.test
#
# AUTHOR:
#    Will Duquette
#
# DESCRIPTION:
#    activity(sim) tests.
#
#    This test suite tests the activity(sim) mutators and queries
#
#-----------------------------------------------------------------------

#-----------------------------------------------------------------------
# Test Suite
#
# The tests run in a namespace so as not to interfere with other
# test suites.

namespace eval ::athena_test::tests:: {
    #-------------------------------------------------------------------
    # Set up the test environment

    # Import tcltest(n)
    namespace import ::tcltest::*

    # Clean up after a test

    proc cleanup {} {
        # Clean up the test environment
        array unset parms
        ted cleanup
    }

    set c1 {
        n         NB1
        g         BLUE
        a         PATROL
        tn        NB1
        personnel 50
        start     0
        finish    30
        pattern   daily
        priority  bottom
    }

    set c2 {
        n         NB1
        g         BLUE
        a         GUARD
        tn        NB1
        personnel 40
        start     10
        finish    never
        pattern   {byweekday M T W Th F}
        priority  bottom
    }

    set c3 {
        n         NB1
        g         BLUE
        a         CURFEW
        tn        NB1
        personnel 70
        start     3
        finish    never
        pattern   daily
        priority  bottom
    }

    set update1 {
        cid       1
        personnel 30
        start     ""
        finish    ""
        pattern   ""
    }

    #-------------------------------------------------------------------
    # mutate create

    test create-1.1 {activity calendar items are created} -setup {
        ted create NB1 BLUE 
    } -body {
        activity mutate create $c1
        activity mutate create $c2

        ted query {SELECT * FROM calendar}
    } -cleanup {
        cleanup
    } -result {
cid n   g    a      tn  personnel priority start finish pattern              
--- --- ---- ------ --- --------- -------- ----- ------ -------------------- 
1   NB1 BLUE PATROL NB1 50        1        0     30     daily                
2   NB1 BLUE GUARD  NB1 40        2        10    never  byweekday M T W Th F 
    }


    test create-1.2 {<Entity> create} -body {
        ted notifier bind ::activity <Entity>
        activity mutate create $c1
        ted notifier received
    } -cleanup {
        cleanup
    } -result {
        {::activity <Entity> priority}
        {::activity <Entity> create 1}
    }

    test create-1.3 {Item IDs are not re-used.} -body {
        activity mutate create $c1
        set a [rdb onecolumn {SELECT cid FROM calendar}]
        activity mutate delete $a
        activity mutate create $c1
        set b [rdb onecolumn {SELECT cid FROM calendar}]

        expr {$a != $b}
    } -cleanup {
        cleanup
    } -result {1}


    test create-2.1 {undo deletes the activity} -setup {
        ted create NB1 BLUE
        set undo [activity mutate create $c1]
    } -body {
        namespace eval :: $undo
        rdb eval {SELECT cid FROM calendar}
    } -cleanup {
        cleanup
    } -result {}


    test create-2.2 {On undo, <Entity> delete} -setup {
        ted create NB1 BLUE
        set undo [activity mutate create $c1]
    } -body {
        ted notifier bind ::activity <Entity>
        namespace eval :: $undo
        ted notifier received
    } -cleanup {
        cleanup
    } -result {
        {::activity <Entity> delete 1}
        {::activity <Entity> priority}
    }

    #-------------------------------------------------------------------
    # mutate delete

    test delete-1.1 {Item is deleted} -setup {
        ted create NB1 BLUE
        activity mutate create $c1
        activity mutate create $c2
    } -body {
        activity mutate delete 1

        # Is cid gone?
        rdb eval {SELECT cid FROM calendar}
    } -cleanup {
        cleanup
    } -result {2}


    test delete-1.2 {<Entity> delete} -setup {
        ted create NB1 BLUE
        activity mutate create $c1
    } -body {
        ted notifier bind ::activity <Entity>
        activity mutate delete 1
        ted notifier received
    } -cleanup {
        cleanup
    } -result {
        {::activity <Entity> delete 1}
    }


    test delete-2.1 {Undo restores activity} -setup {
        ted create NB1 BLUE
        activity mutate create $c1
        set undo [activity mutate delete 1]
    } -body {
        namespace eval :: $undo
        ted query {SELECT * FROM calendar}
    } -cleanup {
        cleanup
    } -result {
cid n   g    a      tn  personnel priority start finish pattern 
--- --- ---- ------ --- --------- -------- ----- ------ ------- 
1   NB1 BLUE PATROL NB1 50        1        0     30     daily   
    }


    test delete-2.2 {On undo, <Entity> create} -setup {
        ted create NB1 BLUE
        activity mutate create $c1
        activity mutate create $c2
        set undo [activity mutate delete 1]
    } -body {
        ted notifier bind ::activity <Entity>
        namespace eval :: $undo
        ted notifier received
    } -cleanup {
        cleanup
    } -result {
        {::activity <Entity> create 1}
    }


    #-------------------------------------------------------------------
    # mutate update

    test update-1.1 {activity calendar items are updated} -setup {
        ted create NB1 NB2 BLUE BRIT
        activity mutate create $c1
    } -body {
        activity mutate update {
            cid       1
            personnel 10
            start     +5
            finish    +10
            pattern   {byweekday W}
        }

        ted query {SELECT * FROM calendar}
    } -cleanup {
        cleanup
    } -result {
cid n   g    a      tn  personnel priority start finish pattern     
--- --- ---- ------ --- --------- -------- ----- ------ ----------- 
1   NB1 BLUE PATROL NB1 10        1        5     10     byweekday W 
    }


    test update-1.2 {<Entity> update} -setup {
        ted create NB1 NB2 BLUE BRIT
        activity mutate create $c1
    } -body {
        ted notifier bind ::activity <Entity>
        activity mutate update $update1
        ted notifier received
    } -cleanup {
        cleanup
    } -result {
        {::activity <Entity> update 1}
    }


    test update-2.1 {undo undoes the change.} -setup {
        ted create NB1 NB2 BLUE BRIT
        activity mutate create $c1
    } -body {
        set a [ted query {SELECT * FROM calendar}]

        set undo [activity mutate update $update1]

        namespace eval :: $undo

        set b [ted query {SELECT * FROM calendar}]

        expr {$a eq $b}
    } -cleanup {
        cleanup
    } -result {1}


    test update-2.2 {On undo, <Entity> update} -setup {
        ted create NB1 NB2 BLUE BRIT
        activity mutate create $c1
        set undo [activity mutate update $update1]
    } -body {
        ted notifier bind ::activity <Entity>
        namespace eval :: $undo
        ted notifier received
    } -cleanup {
        cleanup
    } -result {
        {::activity <Entity> update 1}
    }

    #-------------------------------------------------------------------
    # mutate priority

    test priority-1.1 {item gets first priority} -setup {
        ted create NB1 NB2 BLUE BRIT
        activity mutate create $c1
        activity mutate create $c2
        activity mutate create $c3
    } -body {
        activity mutate priority 3 top
        
        ted query {SELECT * FROM calendar ORDER BY priority}
    } -cleanup {
        cleanup
    } -result {
cid n   g    a      tn  personnel priority start finish pattern              
--- --- ---- ------ --- --------- -------- ----- ------ -------------------- 
3   NB1 BLUE CURFEW NB1 70        1        3     never  daily                
1   NB1 BLUE PATROL NB1 50        2        0     30     daily                
2   NB1 BLUE GUARD  NB1 40        3        10    never  byweekday M T W Th F 
    }


    test priority-1.2 {item priority is raised} -setup {
        ted create NB1 NB2 BLUE BRIT
        activity mutate create $c1
        activity mutate create $c2
        activity mutate create $c3
    } -body {
        activity mutate priority 3 raise
        
        ted query {SELECT * FROM calendar ORDER BY priority}
    } -cleanup {
        cleanup
    } -result {
cid n   g    a      tn  personnel priority start finish pattern              
--- --- ---- ------ --- --------- -------- ----- ------ -------------------- 
1   NB1 BLUE PATROL NB1 50        1        0     30     daily                
3   NB1 BLUE CURFEW NB1 70        2        3     never  daily                
2   NB1 BLUE GUARD  NB1 40        3        10    never  byweekday M T W Th F 
    }

    test priority-1.3 {item priority is lowered} -setup {
        ted create NB1 NB2 BLUE BRIT
        activity mutate create $c1
        activity mutate create $c2
        activity mutate create $c3
    } -body {
        activity mutate priority 1 lower
        
        ted query {SELECT * FROM calendar  ORDER BY priority}
    } -cleanup {
        cleanup
    } -result {
cid n   g    a      tn  personnel priority start finish pattern              
--- --- ---- ------ --- --------- -------- ----- ------ -------------------- 
2   NB1 BLUE GUARD  NB1 40        1        10    never  byweekday M T W Th F 
1   NB1 BLUE PATROL NB1 50        2        0     30     daily                
3   NB1 BLUE CURFEW NB1 70        3        3     never  daily                
    }

    test priority-1.4 {item gets last priority} -setup {
        ted create NB1 NB2 BLUE BRIT
        activity mutate create $c1
        activity mutate create $c2
        activity mutate create $c3
    } -body {
        activity mutate priority 1 bottom
        
        ted query {SELECT * FROM calendar  ORDER BY priority}
    } -cleanup {
        cleanup
    } -result {
cid n   g    a      tn  personnel priority start finish pattern              
--- --- ---- ------ --- --------- -------- ----- ------ -------------------- 
2   NB1 BLUE GUARD  NB1 40        1        10    never  byweekday M T W Th F 
3   NB1 BLUE CURFEW NB1 70        2        3     never  daily                
1   NB1 BLUE PATROL NB1 50        3        0     30     daily                
    }

    test priority-1.5 {<Entity> priority} -setup {
        ted create NB1 NB2 BLUE BRIT
        activity mutate create $c1
        activity mutate create $c2
    } -body {
        ted notifier bind ::activity <Entity>
        activity mutate priority 1 bottom
        ted notifier received
    } -cleanup {
        cleanup
    } -result {
        {::activity <Entity> priority}
    }

    test priority-2.1 {undo undoes the change.} -setup {
        ted create NB1 NB2 BLUE BRIT
        activity mutate create $c1
        activity mutate create $c2
        activity mutate create $c3
    } -body {
        set a [ted query {SELECT priority FROM calendar}]

        set undo [activity mutate priority 1 bottom]

        namespace eval :: $undo

        set b [ted query {SELECT priority FROM calendar}]

        expr {$a eq $b}
    } -cleanup {
        cleanup
    } -result {1}


    test priority-2.2 {On undo, <Entity> priority} -setup {
        ted create NB1 NB2 BLUE BRIT
        activity mutate create $c1
        activity mutate create $c2
        activity mutate create $c3
        set undo [activity mutate priority 1 bottom]
    } -body {
        ted notifier bind ::activity <Entity>
        namespace eval :: $undo
        ted notifier received
    } -cleanup {
        cleanup
    } -result {
        {::activity <Entity> priority}
    }

    #-------------------------------------------------------------------
    # asched

    test asched-1.1 {List of schedulable names} -body {
        activity asched names
    } -result {CHECKPOINT CMO_CONSTRUCTION CMO_DEVELOPMENT CMO_EDUCATION CMO_EMPLOYMENT CMO_HEALTHCARE CMO_INDUSTRY CMO_INFRASTRUCTURE CMO_LAW_ENFORCEMENT CMO_OTHER COERCION CRIMINAL_ACTIVITIES CURFEW DISPLACED GUARD IN_CAMP PATROL PSYOP}

    test asched-2.1 {Invalid name} -body {
        activity asched validate NONESUCH
    } -returnCodes {
        error
    } -result {Invalid activity, should be one of: CHECKPOINT, CMO_CONSTRUCTION, CMO_DEVELOPMENT, CMO_EDUCATION, CMO_EMPLOYMENT, CMO_HEALTHCARE, CMO_INDUSTRY, CMO_INFRASTRUCTURE, CMO_LAW_ENFORCEMENT, CMO_OTHER, COERCION, CRIMINAL_ACTIVITIES, CURFEW, DISPLACED, GUARD, IN_CAMP, PATROL, PSYOP}

    test asched-2.2 {Valid name} -body {
        activity asched validate PATROL
    } -result {PATROL}

    #-------------------------------------------------------------------
    # check

    test check-1.1 {group/activity mismatch} -setup {
        ted create BLUE
    } -body {
        activity check BLUE NONESUCH
    } -returnCodes {
        error
    } -cleanup {
        cleanup
    } -result {Group BLUE cannot be assigned activity NONESUCH}
    
    test check-1.2 {group/activity match} -setup {
        ted create BLUE
    } -body {
        activity check BLUE PATROL
    } -cleanup {
        cleanup
    } -result {}


    #-------------------------------------------------------------------
    # cal

    test cal-1.1 {cal names} -setup {
        ted create NB1 NB2 BLUE BRIT
        activity mutate create $c1
        activity mutate create $c2
    } -body {
        activity cal names
    } -cleanup {
        cleanup
    } -result {1 2}

    test cal-2.1 {invalid ID} -setup {
        ted create NB1 NB2 BLUE BRIT
        activity mutate create $c1
        activity mutate create $c2
    } -body {
        activity cal validate 3
    } -returnCodes {
        error
    } -cleanup {
        cleanup
    } -result {Invalid calendar item ID: "3"}

    test cal-2.2 {valid ID} -setup {
        ted create NB1 NB2 BLUE BRIT
        activity mutate create $c1
        activity mutate create $c2
    } -body {
        activity cal validate 2
    } -cleanup {
        cleanup
    } -result {2}

    #-------------------------------------------------------------------
    # cal+end

    test cal_end-1.1 {cal+end names} -setup {
        ted create NB1 NB2 BLUE BRIT
        activity mutate create $c1
        activity mutate create $c2
    } -body {
        activity cal+end names
    } -cleanup {
        cleanup
    } -result {1 2 END}

    test cal_end-2.1 {invalid ID} -setup {
        ted create NB1 NB2 BLUE BRIT
        activity mutate create $c1
        activity mutate create $c2
    } -body {
        activity cal+end validate 3
    } -returnCodes {
        error
    } -cleanup {
        cleanup
    } -result {Invalid value: "3", should be "END" or a calendar item ID}

    test cal_end-2.2 {valid ID} -setup {
        ted create NB1 NB2 BLUE BRIT
        activity mutate create $c1
        activity mutate create $c2
    } -body {
        activity cal+end validate 2
    } -cleanup {
        cleanup
    } -result {2}

    test cal_end-2.3 {valid END} -setup {
        ted create NB1 NB2 BLUE BRIT
        activity mutate create $c1
        activity mutate create $c2
    } -body {
        activity cal+end validate end
    } -cleanup {
        cleanup
    } -result {END}

    #-------------------------------------------------------------------
    # Cleanup

    cleanupTests
}

namespace delete ::athena_test::tests::





