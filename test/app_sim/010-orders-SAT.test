# -*-Tcl-*-
#-----------------------------------------------------------------------
# TITLE:
#    010-order-SAT.test
#
# AUTHOR:
#    Will Duquette
#
# DESCRIPTION:
#    app_sim(1) SAT:* order tests.
#
#    This test suite tests the satisfaction-curve-related orders.
#
#-----------------------------------------------------------------------

#-----------------------------------------------------------------------
# Test Suite
#
# The tests run in a namespace so as not to interfere with other
# test suites.

namespace eval ::athena_test::tests:: {
    #-------------------------------------------------------------------
    # Set up the test environment

    # Import tcltest(n)
    namespace import ::tcltest::*

    # Neighborhoods
    ted order NBHOOD:CREATE {
        n            N1
        longname     "Nbhood 1"
        urbanization RURAL
        refpoint     B00B00
        polygon      {A00A00 C00A00 C00C00 A00C00}
    }

    # Civ Groups
    ted order GROUP:CIVILIAN:CREATE {
        g            SHIA
        longname     "Local Shias"
        color        "#00ffff"
    }

    ted order GROUP:CIVILIAN:CREATE {
        g            SUNN
        longname     "Local Sunnis"
        color        "#ffff00"
    }


    # Nbhood Groups

    set n1shia {
        n              N1
        g              SHIA
        local_name     "N1 Shias"
        demeanor       AVERAGE
        rollup_weight  1.0
        effects_factor 1.1
    }

    # Clean up after a test

    proc cleanup {} {
        # Clean up the test environment
        array unset parms
        ted notifier forget

        # Delete all created entities and reinitialize the module
        rdb eval {
            DELETE FROM nbgroups;
            DELETE FROM sat_ngc;
        }

        nbgroup reconfigure
        sat reconfigure

        cif clear
    }


    #-------------------------------------------------------------------
    # SAT:UPDATE

    test UPDATE-1.1 {required parms} -body {
        ted order -reject SAT:UPDATE {}
    } -result {
        n {required value}
        g {required value}
        c {required value}
    }
    

    test UPDATE-1.2 {invalid n, g, c} -body {
        ted order -reject SAT:UPDATE n NONESUCH1 g NONESUCH2 c NONESUCH3
    } -result {
        n {Invalid neighborhood, should be one of: N1}
        g {Invalid group, should be one of: SHIA, SUNN}
        c {invalid value, "NONESUCH3"}
    }


    test UPDATE-1.3 {undefined curve} -body {
        ted order -reject SAT:UPDATE n N1 g SUNN c AUT
    } -result {
        c {Satisfaction is not tracked for group SUNN's AUT in N1.}
    }


    test UPDATE-1.4 {invalid sat0: symbol} -body {
        ted order -reject SAT:UPDATE n N1 g SHIA c SFT sat0 NONESUCH
    } -cleanup {
        cleanup
    } -result {
        sat0 {invalid value, "NONESUCH"}
    }


    test UPDATE-1.5 {invalid sat0: out of range} -body {
        ted order -reject SAT:UPDATE n N1 g SHIA c SFT sat0 101.0
    } -cleanup {
        cleanup
    } -result {
        sat0 {invalid value, "101.0"}
    }


    test UPDATE-1.6 {invalid trend0: symbol} -body {
        ted order -reject SAT:UPDATE n N1 g SHIA c SFT trend0 NONESUCH
    } -cleanup {
        cleanup
    } -result {
        trend0 {invalid value, "NONESUCH"}
    }


    test UPDATE-1.7 {invalid saliency: symbol} -body {
        ted order -reject SAT:UPDATE n N1 g SHIA c SFT saliency NONESUCH
    } -cleanup {
        cleanup
    } -result {
        saliency {invalid value, "NONESUCH"}
    }


    test UPDATE-1.8 {invalid saliency: out of range} -body {
        ted order -reject SAT:UPDATE n N1 g SHIA c SFT saliency -0.1
    } -cleanup {
        cleanup
    } -result {
        saliency {invalid value, "-0.1"}
    }


    test UPDATE-2.1 {sat is updated} -setup {
        ted order GROUP:NBHOOD:CREATE $n1shia
    } -body {
        ted order SAT:UPDATE {
            n              N1
            g              SHIA
            c              SFT
            sat0           VS
            trend0         VH
            saliency       VI
        }
        ted query {
            SELECT * FROM sat_ngc
        }
    } -cleanup {
        cleanup
    } -result {
n  g    c   gtype sat0 trend0 saliency 
-- ---- --- ----- ---- ------ -------- 
N1 SHIA AUT CIV   0.0  0.0    1.0      
N1 SHIA SFT CIV   80.0 8.0    0.85     
N1 SHIA CUL CIV   0.0  0.0    1.0      
N1 SHIA QOL CIV   0.0  0.0    1.0      
    }


    test UPDATE-2.2 {<Entity> update} -setup {
        ted order GROUP:NBHOOD:CREATE $n1shia
    } -body {
        ted notifier bind ::sat <Entity>
        ted order SAT:UPDATE n N1 g SHIA c SFT sat0 4.0
        ted notifier received
    } -cleanup {
        cleanup
    } -result {
        {::sat <Entity> update {N1 SHIA SFT}}
    }


    test UPDATE-3.1 {undo undoes the change} -setup {
        ted order GROUP:NBHOOD:CREATE $n1shia
        ted order SAT:UPDATE {
            n              N1
            g              SHIA
            c              SFT
            sat0           VS
            trend0         VH
            saliency       VI
        }
    } -body {
        cif undo
        ted query {SELECT * FROM sat_ngc}
    } -cleanup {
        cleanup
    } -result {
n  g    c   gtype sat0 trend0 saliency 
-- ---- --- ----- ---- ------ -------- 
N1 SHIA AUT CIV   0.0  0.0    1.0      
N1 SHIA SFT CIV   0.0  0.0    1.0      
N1 SHIA CUL CIV   0.0  0.0    1.0      
N1 SHIA QOL CIV   0.0  0.0    1.0      
    }

    #-------------------------------------------------------------------
    # SAT:UPDATE:MULTI

    test UPDATE:MULTI-1.1 {required parms} -body {
        ted order -reject SAT:UPDATE:MULTI {}
    } -result {
        ids {required value}
    }
    

    test UPDATE:MULTI-1.2 {invalid n in ids} -body {
        ted order -reject SAT:UPDATE:MULTI \
            ids {{NONESUCH1 SHIA SFT}}
    } -result {
        ids {Invalid neighborhood, should be one of: N1}
    }


    test UPDATE:MULTI-1.3 {invalid g in ids} -body {
        ted order -reject SAT:UPDATE:MULTI \
            ids {{N1 NONESUCH SFT}}
    } -result {
        ids {Invalid group, should be one of: SHIA, SUNN}
    }


    test UPDATE:MULTI-1.4 {invalid c in ids} -body {
        ted order -reject SAT:UPDATE:MULTI \
            ids {{N1 SHIA NONESUCH}}
    } -result {
        ids {invalid value, "NONESUCH"}
    }


    test UPDATE:MULTI-1.5 {undefined curve} -body {
        ted order -reject SAT:UPDATE:MULTI ids {{N1 SUNN AUT}}
    } -result {
        ids {Satisfaction is not tracked for group SUNN's AUT in N1.}
    }


    test UPDATE:MULTI-1.6 {invalid sat0: symbol} -setup {
        ted order GROUP:NBHOOD:CREATE $n1shia
    } -body {
        ted order -reject SAT:UPDATE:MULTI \
            ids {{N1 SHIA SFT}} sat0 NONESUCH
    } -cleanup {
        cleanup
    } -result {
        sat0 {invalid value, "NONESUCH"}
    }


    test UPDATE:MULTI-1.7 {invalid sat0: out of range} -setup {
        ted order GROUP:NBHOOD:CREATE $n1shia
    } -body {
        ted order -reject SAT:UPDATE:MULTI ids {{N1 SHIA SFT}} sat0 101.0
    } -cleanup {
        cleanup
    } -result {
        sat0 {invalid value, "101.0"}
    }


    test UPDATE:MULTI-1.8 {invalid trend0: symbol} -setup {
        ted order GROUP:NBHOOD:CREATE $n1shia
    } -body {
        ted order -reject SAT:UPDATE:MULTI ids {{N1 SHIA SFT}} trend0 NONESUCH
    } -cleanup {
        cleanup
    } -result {
        trend0 {invalid value, "NONESUCH"}
    }


    test UPDATE:MULTI-1.9 {invalid saliency: symbol} -setup {
        ted order GROUP:NBHOOD:CREATE $n1shia
    } -body {
        ted order -reject SAT:UPDATE:MULTI \
            ids {{N1 SHIA SFT}} saliency NONESUCH
    } -cleanup {
        cleanup
    } -result {
        saliency {invalid value, "NONESUCH"}
    }


    test UPDATE:MULTI-1.10 {invalid saliency: out of range} -setup {
        ted order GROUP:NBHOOD:CREATE $n1shia
    } -body {
        ted order -reject SAT:UPDATE:MULTI ids \
            {{N1 SHIA SFT}} saliency -0.1
    } -cleanup {
        cleanup
    } -result {
        saliency {invalid value, "-0.1"}
    }


    test UPDATE:MULTI-2.1 {one curve of several is updated} -setup {
        ted order GROUP:NBHOOD:CREATE $n1shia
    } -body {
        ted order SAT:UPDATE:MULTI {
            ids       {{N1 SHIA SFT}}
            sat0      VS
            trend0    VH
            saliency  VI
        }
        ted query {
            SELECT * FROM sat_ngc
        }
    } -cleanup {
        cleanup
    } -result {
n  g    c   gtype sat0 trend0 saliency 
-- ---- --- ----- ---- ------ -------- 
N1 SHIA AUT CIV   0.0  0.0    1.0      
N1 SHIA SFT CIV   80.0 8.0    0.85     
N1 SHIA CUL CIV   0.0  0.0    1.0      
N1 SHIA QOL CIV   0.0  0.0    1.0      
    }


    test UPDATE:MULTI-2.2 {several curves are updated} -setup {
        ted order GROUP:NBHOOD:CREATE $n1shia
    } -body {
        ted order SAT:UPDATE:MULTI {
            ids        {{N1 SHIA SFT} {N1 SHIA CUL}}
            sat0       VS
            trend0     VH
            saliency   VI
        }
        ted query {
            SELECT * FROM sat_ngc
        }
    } -cleanup {
        cleanup
    } -result {
n  g    c   gtype sat0 trend0 saliency 
-- ---- --- ----- ---- ------ -------- 
N1 SHIA AUT CIV   0.0  0.0    1.0      
N1 SHIA SFT CIV   80.0 8.0    0.85     
N1 SHIA CUL CIV   80.0 8.0    0.85     
N1 SHIA QOL CIV   0.0  0.0    1.0      
    }


    test UPDATE:MULTI-2.3 {<Entity> update} -setup {
        ted order GROUP:NBHOOD:CREATE $n1shia
    } -body {
        ted notifier bind ::sat <Entity>
        ted order SAT:UPDATE:MULTI {
            ids   {{N1 SHIA SFT} {N1 SHIA CUL}} 
            sat0  4.0
        }
        ted notifier received
    } -cleanup {
        cleanup
    } -result {
        {::sat <Entity> update {N1 SHIA SFT}}
        {::sat <Entity> update {N1 SHIA CUL}}
    }


    test UPDATE:MULTI-3.1 {undo undoes the change} -setup {
        ted order GROUP:NBHOOD:CREATE $n1shia
        ted order SAT:UPDATE:MULTI {
            ids        {{N1 SHIA SFT} {N1 SHIA CUL}}
            sat0       VS
            trend0     VH
            saliency   VI
        }
    } -body {
        cif undo -test
        ted query {SELECT * FROM sat_ngc}
    } -cleanup {
        cleanup
    } -result {
n  g    c   gtype sat0 trend0 saliency 
-- ---- --- ----- ---- ------ -------- 
N1 SHIA AUT CIV   0.0  0.0    1.0      
N1 SHIA SFT CIV   0.0  0.0    1.0      
N1 SHIA CUL CIV   0.0  0.0    1.0      
N1 SHIA QOL CIV   0.0  0.0    1.0      
    }


    test UPDATE:MULTI-3.2 {undo sends <Entity> update} -setup {
        ted order GROUP:NBHOOD:CREATE $n1shia
        ted order SAT:UPDATE:MULTI {
            ids   {{N1 SHIA SFT} {N1 SHIA CUL}} 
            sat0  4.0
        }
    } -body {
        ted notifier bind ::sat <Entity>
        cif undo -test
        ted notifier received
    } -cleanup {
        cleanup
    } -result {
        {::sat <Entity> update {N1 SHIA SFT}}
        {::sat <Entity> update {N1 SHIA CUL}}
    }


    #-------------------------------------------------------------------
    # Cleanup

    cleanupTests
    scenario new
}

namespace delete ::athena_test::tests::




