# -*-Tcl-*-
#-----------------------------------------------------------------------
# TITLE:
#    010-tactic_deposit.test
#
# AUTHOR:
#    Will Duquette
#
# DESCRIPTION:
#    tactic_deposit(sim) tests.
#
#    This test suite tests the tactic_deposit(sim) tactic ensemble.
#
#-----------------------------------------------------------------------

#-----------------------------------------------------------------------
# Test Suite
#
# The tests run in a namespace so as not to interfere with other
# test suites.

namespace eval ::athena_test::tests:: {
    #-------------------------------------------------------------------
    # Set up the test environment

    # Import tcltest(n)
    namespace import ::tcltest::*

    # Set up for tests

    proc setup {} {
        ted create JOE 
        cash load

        # Verify that unused columns contain NULL
        rdb nullvalue "@"
    }

    # Clean up after a test

    proc cleanup {} {
        # Clean up the test environment
        rdb nullvalue ""
        array unset a
        array unset b
        ted cleanup
    }


    # Standard Tactics
    
    set T1 {
        tactic_type DEPOSIT
        owner       JOE
        priority    top
        amount      10000.0
        on_lock     NO
    }

    #-------------------------------------------------------------------
    # narrative

    test narrative-1.1 {narrative} -setup {
        setup
        tactic mutate create $T1
    } -body {
        tactic::DEPOSIT narrative [tactic get 1]
    } -cleanup {
        cleanup
    } -result {Deposit $10,000 to the cash reserve.}

    #-------------------------------------------------------------------
    # check

    test check-1.1 {check: success} -setup {
        setup
        tactic mutate create $T1
    } -body {
        tactic::DEPOSIT check [tactic get 1]
    } -cleanup {
        cleanup
    } -result {}

    # NOTE: check can't fail for this tactic

    #-------------------------------------------------------------------
    # dollars

    test dollars-1.1 {dollars} -setup {
        setup
        tactic mutate create $T1
    } -body {
        tactic::DEPOSIT dollars [tactic get 1]
    } -cleanup {
        cleanup
    } -result {10,000}

    #-------------------------------------------------------------------
    # execute

    test execute-1.1 {execute: no cash on hand} -setup {
        setup
        tactic mutate create $T1
        rdb eval {
            UPDATE working_cash SET cash_on_hand = 0.0
        }
    } -body {
        array set a [cash get JOE]
        set flag [tactic::DEPOSIT execute [tactic get 1]]
        array set b [cash get JOE]

        list $flag \
            $a(cash_on_hand) $a(cash_reserve) \
            $b(cash_on_hand) $b(cash_reserve)
    } -cleanup {
        cleanup
    } -result {0 0.0 200000.0 0.0 200000.0}

    test execute-1.2 {execute: ample cash on hand} -setup {
        setup
        tactic mutate create $T1
        rdb eval {
            UPDATE working_cash SET cash_on_hand = 100000.0
        }
    } -body {
        array set a [cash get JOE]
        set flag [tactic::DEPOSIT execute [tactic get 1]]
        array set b [cash get JOE]

        list $flag \
            $a(cash_on_hand) $a(cash_reserve) \
            $b(cash_on_hand) $b(cash_reserve)
    } -cleanup {
        cleanup
    } -result {1 100000.0 200000.0 90000.0 210000.0}

    test execute-1.3 {execute: limited cash on hand} -setup {
        setup
        tactic mutate create $T1
        rdb eval {
            UPDATE working_cash SET cash_on_hand = 500.0
        }
    } -body {
        array set a [cash get JOE]
        set flag [tactic::DEPOSIT execute [tactic get 1]]
        array set b [cash get JOE]

        list $flag \
            $a(cash_on_hand) $a(cash_reserve) \
            $b(cash_on_hand) $b(cash_reserve)
    } -cleanup {
        cleanup
    } -result {1 500.0 200000.0 0.0 200500.0}

    #-------------------------------------------------------------------
    # Cleanup

    cleanupTests
}

namespace delete ::athena_test::tests::






