# -*-Tcl-*-
#-----------------------------------------------------------------------
# TITLE:
#    020-ATTRIT.test
#
# AUTHOR:
#    Will Duquette
#
# DESCRIPTION:
#    app_sim(1) ATTRIT:* order tests.
#
#    This test suite tests the attrition-related orders.
#
#-----------------------------------------------------------------------

#-----------------------------------------------------------------------
# Test Suite
#
# The tests run in a namespace so as not to interfere with other
# test suites.

namespace eval ::athena_test::tests:: {
    #-------------------------------------------------------------------
    # Set up the test environment

    # Import tcltest(n)
    namespace import ::tcltest::*

    # Set up for tests

    proc setup {{script ""}} {
        ted create NB1 NB2 BLUE BRIT USAID HAL
        ted create SHIA SUNN KURD
        personnel mutate reconcile

        if {$script ne ""} {
            uplevel 1 $script
        }

        ted order SIM:LOCK
    }

    # Clean up after a test

    proc cleanup {} {
        # Clean up the test environment
        ted cleanup
    }


    #-------------------------------------------------------------------
    # ATTRIT:UNIT

    test UNIT-1.1 {required parms} -setup {
        setup
    } -body {
        ted order -reject ATTRIT:UNIT {}
    } -cleanup {
        cleanup
    } -result {
        u {required value}
        casualties {required value}
    }
    

    test UNIT-1.2 {invalid unit} -setup {
        setup
    } -body {
        ted order -reject ATTRIT:UNIT u NONESUCH casualties 25
    } -cleanup {
        cleanup
    } -result {
        u {Invalid unit name: "NONESUCH"}
    }


    test UNIT-1.3 {invalid casualties} -setup {
        setup {
            ted order PERSONNEL:SET id {NB1 BLUE} personnel 100
        }
    } -body {
        ted order -reject ATTRIT:UNIT u BLUE-NB1/0000 casualties NONESUCH
    } -cleanup {
        cleanup
    } -result {
        casualties {invalid value "NONESUCH", expected integer}
    }


    test UNIT-1.4 {negative casualties} -setup {
        setup {
            ted order PERSONNEL:SET id {NB1 BLUE} personnel 100
        }
    } -body {
        ted order -reject ATTRIT:UNIT u BLUE-NB1/0000 casualties -1
    } -cleanup {
        cleanup
    } -result {
        casualties {invalid value "-1", expected integer no less than 0}
    }


    test UNIT-1.5 {invalid g1: unknown} -setup {
        setup {
            ted order PERSONNEL:SET id {NB1 BLUE} personnel 100
        }
    } -body {
        ted order -reject ATTRIT:UNIT u BLUE-NB1/0000 casualties 10 g1 NONESUCH
    } -cleanup {
        cleanup
    } -result {
        g1 {Invalid force group, should be one of: BLUE, BRIT}
    }


    test UNIT-1.6 {invalid g1: u not CIV} -setup {
        setup {
            ted order PERSONNEL:SET id {NB1 BLUE} personnel 100
        }
    } -body {
        ted order -reject ATTRIT:UNIT u BLUE-NB1/0000 casualties 10 g1 BLUE
    } -cleanup {
        cleanup
    } -result {
        g1 {Responsible groups only matter when civilians are attrited}
    }


    test UNIT-1.7 {invalid g2: unknown} -setup {
        setup {
            ted order PERSONNEL:SET id {NB1 BLUE} personnel 100
        }
    } -body {
        ted order -reject ATTRIT:UNIT u BLUE-NB1/0000 casualties 10 g2 NONESUCH
    } -cleanup {
        cleanup
    } -result {
        g2 {Invalid force group, should be one of: BLUE, BRIT}
    }


    test UNIT-1.8 {invalid g2: u not CIV} -setup {
        setup {
            ted order PERSONNEL:SET id {NB1 BLUE} personnel 100
        }
    } -body {
        ted order -reject ATTRIT:UNIT u BLUE-NB1/0000 casualties 10 g2 BLUE
    } -cleanup {
        cleanup
    } -result {
        g2 {Responsible groups only matter when civilians are attrited}
    }


    test UNIT-2.1 {unit and nbgroup are attrited} -setup {
        setup
    } -body {
        ted notifier bind ::unit <Entity>
        ted notifier bind ::demog <Update>
        ted order ATTRIT:UNIT u SHIA-NB1/0000 casualties 5 g1 BLUE g2 BRIT
        ted notifier received
    } -cleanup {
        cleanup
    } -result {
        {::unit <Entity> update SHIA-NB1/0000}
        {::demog <Update>}
    }


    test UNIT-3.1 {undo undoes the change} -setup {
        setup
        ted order ATTRIT:UNIT u SHIA-NB1/0000 casualties 5
    } -body {
        ted notifier bind ::unit <Entity>
        ted notifier bind ::demog <Update>
        cif undo -test
        ted notifier received
    } -cleanup {
        cleanup
    } -result {
        {::unit <Entity> update SHIA-NB1/0000}
        {::demog <Update>}
    }


    #-------------------------------------------------------------------
    # ATTRIT:NBHOOD

    test NBHOOD-1.1 {required parms} -setup {
        setup 
    } -body {
        ted order -reject ATTRIT:NBHOOD {}
    } -cleanup {
        cleanup
    } -result {
        n {required value}
        casualties {required value}
    }
    

    test NBHOOD-1.2 {invalid nbhood} -setup {
        setup
    } -body {
        ted order -reject ATTRIT:NBHOOD n NONESUCH casualties 25
    } -cleanup {
        cleanup
    } -result {
        n {Invalid neighborhood, should be one of: NB1, NB2}
    }


    test NBHOOD-1.3 {invalid casualties} -setup {
        setup
    } -body {
        ted order -reject ATTRIT:NBHOOD n NB1 casualties NONESUCH
    } -cleanup {
        cleanup
    } -result {
        casualties {invalid value "NONESUCH", expected integer}
    }


    test NBHOOD-1.4 {negative casualties} -setup {
        setup
    } -body {
        ted order -reject ATTRIT:NBHOOD n NB1 casualties -1
    } -cleanup {
        cleanup
    } -result {
        casualties {invalid value "-1", expected integer no less than 0}
    }


    test NBHOOD-1.5 {invalid g1: unknown} -setup {
        setup
    } -body {
        ted order -reject ATTRIT:NBHOOD n NB1 casualties 10 g1 NONESUCH
    } -cleanup {
        cleanup
    } -result {
        g1 {Invalid force group, should be one of: BLUE, BRIT}
    }


    test NBHOOD-1.6 {invalid g2: unknown} -setup {
        setup
    } -body {
        ted order -reject ATTRIT:NBHOOD n NB1 casualties 10 g2 NONESUCH
    } -cleanup {
        cleanup
    } -result {
        g2 {Invalid force group, should be one of: BLUE, BRIT}
    }


    test NBHOOD-2.1 {units are attrited} -setup {
        setup
    } -body {
        ted notifier bind ::unit <Entity>
        ted notifier bind ::demog <Update>
        ted order ATTRIT:NBHOOD n NB1 casualties 1000 g1 BLUE g2 BRIT
        ted notifier received
    } -cleanup {
        cleanup
    } -result {
        {::unit <Entity> update SHIA-NB1/0000}
        {::demog <Update>}
        {::unit <Entity> update SUNN-NB1/0000}
        {::demog <Update>}
    }

    test NBHOOD-3.1 {undo undoes the change} -setup {
        setup 
        ted order ATTRIT:NBHOOD n NB1 casualties 1000
    } -body {
        ted notifier bind ::unit <Entity>
        ted notifier bind ::demog <Update>
        cif undo -test
        ted notifier received
    } -cleanup {
        cleanup
    } -result {
        {::unit <Entity> update SHIA-NB1/0000}
        {::demog <Update>}
        {::unit <Entity> update SUNN-NB1/0000}
        {::demog <Update>}
    }


    #-------------------------------------------------------------------
    # ATTRIT:GROUP

    test GROUP-1.1 {required parms} -setup {
        setup
    } -body {
        ted order -reject ATTRIT:GROUP {}
    } -cleanup {
        cleanup
    } -result {
        n {required value}
        f {required value}
        casualties {required value}
    }
    

    test GROUP-1.2 {invalid nbhood} -setup {
        setup
    } -body {
        ted order -reject ATTRIT:GROUP n NONESUCH f SHIA casualties 25
    } -cleanup {
        cleanup
    } -result {
        n {Invalid neighborhood, should be one of: NB1, NB2}
    }


    test GROUP-1.3 {invalid group} -setup {
        setup
    } -body {
        ted order -reject ATTRIT:GROUP n NB1 f NONESUCH casualties 25
    } -cleanup {
        cleanup
    } -result {
        f {Invalid group, should be one of: BLUE, BRIT, HAL, KURD, SHIA, SUNN, USAID}
    }



    test GROUP-1.4 {invalid casualties} -setup {
        setup
    } -body {
        ted order -reject ATTRIT:GROUP n NB1 f SHIA casualties NONESUCH
    } -cleanup {
        cleanup
    } -result {
        casualties {invalid value "NONESUCH", expected integer}
    }


    test GROUP-1.5 {negative casualties} -setup {
        setup
    } -body {
        ted order -reject ATTRIT:GROUP n NB1 f SHIA casualties -1
    } -cleanup {
        cleanup
    } -result {
        casualties {invalid value "-1", expected integer no less than 0}
    }


    test GROUP-1.6 {invalid g1: unknown} -setup {
        setup
    } -body {
        ted order -reject ATTRIT:GROUP n NB1 f BLUE casualties 10 g1 NONESUCH
    } -cleanup {
        cleanup
    } -result {
        g1 {Invalid force group, should be one of: BLUE, BRIT}
    }


    test GROUP-1.7 {invalid g1: u not CIV} -setup {
        setup
    } -body {
        ted order -reject ATTRIT:GROUP n NB1 f BLUE casualties 10 g1 BLUE
    } -cleanup {
        cleanup
    } -result {
        g1 {Responsible groups only matter when civilians are attrited}
    }


    test GROUP-1.8 {invalid g2: unknown} -setup {
        setup
    } -body {
        ted order -reject ATTRIT:GROUP n NB1 f BLUE casualties 10 g2 NONESUCH
    } -cleanup {
        cleanup
    } -result {
        g2 {Invalid force group, should be one of: BLUE, BRIT}
    }


    test GROUP-1.9 {invalid g2: u not CIV} -setup {
        setup
    } -body {
        ted order -reject ATTRIT:GROUP n NB1 f BLUE casualties 10 g2 BLUE
    } -cleanup {
        cleanup
    } -result {
        g2 {Responsible groups only matter when civilians are attrited}
    }


    test GROUP-2.1 {FRC units are attrited} -setup {
        setup {
            ted order PERSONNEL:SET id {NB1 BLUE} personnel 100
        }
    } -body {
        ted notifier bind ::unit <Entity>
        ted notifier bind ::personnel <Entity>
        ted order ATTRIT:GROUP n NB1 f BLUE casualties 100
        ted notifier received
    } -cleanup {
        cleanup
    } -result {
        {::unit <Entity> update BLUE-NB1/0000}
        {::personnel <Entity> update {NB1 BLUE}}
    }


    test GROUP-2.2 {ORG units are attrited} -setup {
        setup {
            ted order PERSONNEL:SET id {NB1 USAID} personnel 100
        }
    } -body {
        ted notifier bind ::unit <Entity>
        ted notifier bind ::personnel <Entity>
        ted order ATTRIT:GROUP n NB1 f USAID casualties 100
        ted notifier received
    } -cleanup {
        cleanup
    } -result {
        {::unit <Entity> update USAID-NB1/0000}
        {::personnel <Entity> update {NB1 USAID}}
    }


    test GROUP-2.3 {CIV units are attrited} -setup {
        setup
    } -body {
        ted notifier bind ::unit <Entity>
        ted notifier bind ::demog <Update>
        ted order ATTRIT:GROUP n NB1 f SHIA casualties 1000 g1 BLUE g2 BRIT
        ted notifier received
    } -cleanup {
        cleanup
    } -result {
        {::unit <Entity> update SHIA-NB1/0000}
        {::demog <Update>}
    }

    test GROUP-3.1 {undo undoes the change} -setup {
        setup 
        ted order ATTRIT:GROUP n NB1 f SHIA casualties 1000
    } -body {
        ted notifier bind ::unit <Entity>
        ted notifier bind ::demog <Update>
        cif undo -test
        ted notifier received
    } -cleanup {
        cleanup
    } -result {
        {::unit <Entity> update SHIA-NB1/0000}
        {::demog <Update>}
    }

    #-------------------------------------------------------------------
    # Cleanup

    cleanupTests
}

namespace delete ::athena_test::tests::





