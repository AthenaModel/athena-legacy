# -*-Tcl-*-
#-----------------------------------------------------------------------
# TITLE:
#    020-GROUP-ORGANIZATION.test
#
# AUTHOR:
#    Will Duquette
#
# DESCRIPTION:
#    app_sim(1) ORGGROUP:* order tests.
#
#    This test suite tests the frcgroup-related orders.
#
#-----------------------------------------------------------------------

#-----------------------------------------------------------------------
# Test Suite
#
# The tests run in a namespace so as not to interfere with other
# test suites.

namespace eval ::athena_test::tests:: {
    #-------------------------------------------------------------------
    # Set up the test environment

    # Import tcltest(n)
    namespace import ::tcltest::*

    # Standard groups

    set usaid {
        g              USAID
        longname       "US Aid"
        color          #00ff00
        shape          NEUTRAL
        orgtype        NGO
        demeanor       AVERAGE
    }

    set hal {
        g              HAL
        longname       "Haliburton"
        color          #ffff00
        shape          NEUTRAL
        orgtype        CTR
        demeanor       AVERAGE
    }


    # Clean up after a test

    proc cleanup {} {
        # Clean up the test environment
        ted cleanup
    }

    #-------------------------------------------------------------------
    # ORGGROUP:CREATE

    test CREATE-1.1 {required parms} -body {
        ted order -reject ORGGROUP:CREATE {}
    } -result {
        g {required value}
        longname {required value}
        color {required value}
        shape {required value}
        orgtype {required value}
        demeanor {required value}
    }

    
    test CREATE-1.2 {Duplicate g, longname} -setup {
        ted order ORGGROUP:CREATE $usaid
    } -body {
        ted order -reject ORGGROUP:CREATE $usaid
    } -cleanup {
        cleanup
    } -result {
        g {An entity with this ID already exists}
        longname {An entity with this name already exists}
    }


    test CREATE-1.3 {longname duplicates n} -body {
        ted order -reject ORGGROUP:CREATE [dict merge $usaid {
            longname USAID
        }]
    } -cleanup {
        cleanup
    } -result {
        longname {longname must not be identical to ID}
    }


    test CREATE-1.4 {g is not an ident} -body {
        ted order -reject ORGGROUP:CREATE [dict merge $usaid {
            g "NONE&SUCH"
        }]
    } -cleanup {
        cleanup
    } -result {
        g {Identifiers begin with a letter and contain only letters and digits.}
    }


    test CREATE-1.5 {invalid color} -body {
        ted order -reject ORGGROUP:CREATE [dict merge $usaid {
            color NONESUCH
        }]
    } -cleanup {
        cleanup
    } -result {
        color {Invalid hexadecimal color specifier, should be "#RRGGBB"}
    }


    test CREATE-1.6 {invalid shape} -body {
        ted order -reject ORGGROUP:CREATE [dict merge $usaid {
            shape NONESUCH
        }]
    } -cleanup {
        cleanup
    } -result {
        shape {invalid value "NONESUCH", should be one of: FRIEND, ENEMY, NEUTRAL}
    }


    test CREATE-1.7 {invalid orgtype} -body {
        ted order -reject ORGGROUP:CREATE [dict merge $usaid {
            orgtype NONESUCH
        }]
    } -result {
        orgtype {invalid value "NONESUCH", should be one of: NGO, IGO, CTR}
    }


    test CREATE-1.8 {invalid demeanor} -body {
        ted order -reject ORGGROUP:CREATE [dict merge $usaid {
            demeanor NONESUCH
        }]
    } -result {
        demeanor {invalid value "NONESUCH", should be one of: APATHETIC, AVERAGE, AGGRESSIVE}
    }


    test CREATE-2.1 {orggroup is created} -body {
        ted order ORGGROUP:CREATE $usaid
        ted order ORGGROUP:CREATE $hal
        ted query {SELECT * FROM orggroups_view}
    } -cleanup {
        cleanup
    } -result {
g     longname   color   shape   symbol       demeanor gtype orgtype 
----- ---------- ------- ------- ------------ -------- ----- ------- 
USAID US Aid     #00ff00 NEUTRAL organization AVERAGE  ORG   NGO     
HAL   Haliburton #ffff00 NEUTRAL organization AVERAGE  ORG   CTR     
    }


    test CREATE-2.2 {Effects} -body {
        ted notifier bind ::orggroup <Entity>
        ted notifier bind ::scenario <Reconcile>
        ted order ORGGROUP:CREATE $usaid
        ted notifier received
    } -cleanup {
        cleanup
    } -result {
        {::orggroup <Entity> create USAID}
        {::scenario <Reconcile>}
    }


    test CREATE-3.1 {Undo effects} -setup {
        ted order ORGGROUP:CREATE $usaid
    } -body {
        ted notifier bind ::orggroup <Entity>
        cif undo -test
        ted notifier received
    } -cleanup {
        cleanup
    } -result {
        {::orggroup <Entity> delete USAID}
    }


    #-------------------------------------------------------------------
    # ORGGROUP:DELETE

    test DELETE-1.1 {required parms} -body {
        ted order -reject ORGGROUP:DELETE {}
    } -result {
        g {required value}
    }

    
    test DELETE-1.2 {unknown g} -body {
        ted order -reject ORGGROUP:DELETE g NONESUCH
    } -result {
        g {Invalid organization group, none are defined}
    }


    test DELETE-2.1 {Effects} -setup {
        ted order ORGGROUP:CREATE $usaid
    } -body {
        ted notifier bind ::orggroup <Entity>
        ted notifier bind ::scenario <Reconcile>
        ted order ORGGROUP:DELETE g USAID
        ted notifier received
    } -cleanup {
        cleanup
    } -result {
        {::orggroup <Entity> delete USAID}
        {::scenario <Reconcile>}
    }


    test DELETE-3.1 {Undo effects} -setup {
        ted order ORGGROUP:CREATE $usaid
        ted order ORGGROUP:DELETE g USAID
    } -body {
        ted notifier bind ::orggroup <Entity>
        cif undo -test
        ted notifier received
    } -cleanup {
        cleanup
    } -result {
        {::orggroup <Entity> create USAID}
    }


    #-------------------------------------------------------------------
    # ORGGROUP:UPDATE

    test UPDATE-1.1 {required parms} -body {
        ted order -reject ORGGROUP:UPDATE {}
    } -result {
        g {required value}
    }
    
    test UPDATE-1.2 {Duplicate longname} -setup {
        ted order ORGGROUP:CREATE $usaid
        ted order ORGGROUP:CREATE $hal
    } -body {
        ted order -reject ORGGROUP:UPDATE g USAID longname "Haliburton"
    } -cleanup {
        cleanup
    } -result {
        longname {An entity with this name already exists}
    }


    test UPDATE-1.3 {longname duplicates some g} -setup {
        ted order ORGGROUP:CREATE $usaid
        ted order ORGGROUP:CREATE $hal
    } -body {
        ted order -reject ORGGROUP:UPDATE g USAID longname HAL
    } -cleanup {
        cleanup
    } -result {
        longname {An entity with this ID already exists}
    }


    test UPDATE-1.4 {invalid color} -setup {
        ted order ORGGROUP:CREATE $usaid
    } -body {
        ted order -reject ORGGROUP:UPDATE g USAID color NONESUCH
    } -cleanup {
        cleanup
    } -result {
        color {Invalid hexadecimal color specifier, should be "#RRGGBB"}
    }


    test UPDATE-1.5 {invalid shape} -setup {
        ted order ORGGROUP:CREATE $usaid
    } -body {
        ted order -reject ORGGROUP:UPDATE g USAID shape NONESUCH
    } -cleanup {
        cleanup
    } -result {
        shape {invalid value "NONESUCH", should be one of: FRIEND, ENEMY, NEUTRAL}
    }


    test UPDATE-1.6 {invalid orgtype} -setup {
        ted order ORGGROUP:CREATE $usaid
    } -body {
        ted order -reject ORGGROUP:UPDATE g USAID orgtype NONESUCH
    } -cleanup {
        cleanup
    } -result {
        orgtype {invalid value "NONESUCH", should be one of: NGO, IGO, CTR}
    }


    test UPDATE-1.7 {invalid orgtype} -setup {
        ted order ORGGROUP:CREATE $usaid
    } -body {
        ted order -reject ORGGROUP:UPDATE g USAID demeanor NONESUCH
    } -cleanup {
        cleanup
    } -result {
        demeanor {invalid value "NONESUCH", should be one of: APATHETIC, AVERAGE, AGGRESSIVE}
    }


    test UPDATE-2.1 {orggroup is updated} -setup {
        ted order ORGGROUP:CREATE $usaid
    } -body {
        ted order ORGGROUP:UPDATE {
            g              USAID
            longname       "Red Cross"
            color          "#ff0000"
            shape          ENEMY
            orgtype        IGO
            demeanor       AGGRESSIVE
        }

        ted query {SELECT * FROM orggroups_view}
    } -cleanup {
        cleanup
    } -result {
g     longname  color   shape symbol       demeanor   gtype orgtype 
----- --------- ------- ----- ------------ ---------- ----- ------- 
USAID Red Cross #ff0000 ENEMY organization AGGRESSIVE ORG   IGO     
    }


    test UPDATE-2.2 {<Entity> update} -setup {
        ted order ORGGROUP:CREATE $usaid
    } -body {
        ted notifier bind ::orggroup <Entity>
        ted order ORGGROUP:UPDATE g USAID longname "Red Cross"
        ted notifier received
    } -cleanup {
        cleanup
    } -result {
        {::orggroup <Entity> update USAID}
    }


    test UPDATE-3.1 {undo effects} -setup {
        ted order ORGGROUP:CREATE $usaid
        ted order ORGGROUP:UPDATE {
            g              USAID
            longname       "Red Cross"
            color          "#ff0000"
        }
    } -body {
        ted notifier bind ::orggroup <Entity>
        cif undo -test
        ted notifier received
    } -cleanup {
        cleanup
    } -result {
        {::orggroup <Entity> update USAID}
    }

    #-------------------------------------------------------------------
    # FRCGROUP:UPDATE:MULTI

    test UPDATE:MULTI-1.1 {required parms} -body {
        ted order -reject ORGGROUP:UPDATE:MULTI {}
    } -result {
        ids {required value}
    }
    
    test UPDATE:MULTI-1.2 {invalid ids, no groups} -body {
        ted order -reject ORGGROUP:UPDATE:MULTI ids NONESUCH
    } -result {
        ids {Invalid organization group, none are defined}
    }

    test UPDATE:MULTI-1.3 {invalid ids, groups} -setup {
        ted order ORGGROUP:CREATE $usaid
    } -body {
        ted order -reject ORGGROUP:UPDATE:MULTI ids NONESUCH
    } -cleanup {
        cleanup
    } -result {
        ids {Invalid organization group, should be one of: USAID}
    }

    test UPDATE:MULTI-1.4 {invalid color} -setup {
        ted order ORGGROUP:CREATE $usaid
    } -body {
        ted order -reject ORGGROUP:UPDATE:MULTI ids USAID color NONESUCH
    } -cleanup {
        cleanup
    } -result {
        color {Invalid hexadecimal color specifier, should be "#RRGGBB"}
    }


    test UPDATE:MULTI-1.5 {invalid shape} -setup {
        ted order ORGGROUP:CREATE $usaid
    } -body {
        ted order -reject ORGGROUP:UPDATE:MULTI ids USAID shape NONESUCH
    } -cleanup {
        cleanup
    } -result {
        shape {invalid value "NONESUCH", should be one of: FRIEND, ENEMY, NEUTRAL}
    }


    test UPDATE:MULTI-1.6 {invalid orgtype} -setup {
        ted order ORGGROUP:CREATE $usaid
    } -body {
        ted order -reject ORGGROUP:UPDATE:MULTI \
            ids USAID orgtype NONESUCH
    } -cleanup {
        cleanup
    } -result {
        orgtype {invalid value "NONESUCH", should be one of: NGO, IGO, CTR}
    }


    test UPDATE:MULTI-1.7 {invalid demeanor} -setup {
        ted order ORGGROUP:CREATE $usaid
    } -body {
        ted order -reject ORGGROUP:UPDATE:MULTI \
            ids USAID demeanor NONESUCH
    } -cleanup {
        cleanup
    } -result {
        demeanor {invalid value "NONESUCH", should be one of: APATHETIC, AVERAGE, AGGRESSIVE}
    }


    test UPDATE:MULTI-2.1 {one orggroup of several is updated} -setup {
        ted order ORGGROUP:CREATE $usaid
        ted order ORGGROUP:CREATE $hal
    } -body {
        ted notifier bind ::orggroup <Entity>

        ted order ORGGROUP:UPDATE:MULTI {
            ids            USAID 
            color          "#ff0000"
            orgtype        IGO
        }

        ted notifier received
    } -cleanup {
        cleanup
    } -result {
        {::orggroup <Entity> update USAID}
    }

    test UPDATE:MULTI-2.2 {several orggroups are updated} -setup {
        ted order ORGGROUP:CREATE $usaid
        ted order ORGGROUP:CREATE $hal
    } -body {
        ted notifier bind ::orggroup <Entity>

        ted order ORGGROUP:UPDATE:MULTI {
            ids            {USAID HAL}
            color          "#ff0000"
            orgtype        IGO
        }

        ted notifier received
    } -cleanup {
        cleanup
    } -result {
        {::orggroup <Entity> update USAID}
        {::orggroup <Entity> update HAL}
    }


    test UPDATE:MULTI-3.2 {undo effects} -setup {
        ted order ORGGROUP:CREATE $usaid
        ted order ORGGROUP:CREATE $hal
        ted order ORGGROUP:UPDATE:MULTI \
            ids {USAID HAL} color "#ff0000"
    } -body {
        ted notifier bind ::orggroup <Entity>
        cif undo -test
        ted notifier received
    } -cleanup {
        cleanup
    } -result {
        {::orggroup <Entity> update USAID}
        {::orggroup <Entity> update HAL}
    }


    #-------------------------------------------------------------------
    # Cleanup

    cleanupTests
}

namespace delete ::athena_test::tests::








