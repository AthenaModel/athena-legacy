# -*-Tcl-*-
#-----------------------------------------------------------------------
# TITLE:
#    010-sqservice.test
#
# AUTHOR:
#    Will Duquette
#
# DESCRIPTION:
#    sqservice(sim) tests.
#
#    This test suite tests the sqservice(sim) mutators and queries
#
#-----------------------------------------------------------------------

#-----------------------------------------------------------------------
# Test Suite
#
# The tests run in a namespace so as not to interfere with other
# test suites.

namespace eval ::athena_test::tests:: {
    #-------------------------------------------------------------------
    # Set up the test environment

    # Import tcltest(n)
    namespace import ::tcltest::*

    # Set up for a test
    proc setup {} {
        ted create JOE BOB SHIA SUNN
    }

    # Clean up after a test

    proc cleanup {} {
        # Clean up the test environment
        array unset parms
        ted cleanup
    }

    #-------------------------------------------------------------------
    # mutate set

    test set-1.1 {Set record value, overriding default} -setup {
        setup
    } -body {
        sqservice mutate set {id {SHIA JOE} funding 1000.0}
        ted query {SELECT * FROM sqservice_ga}
    } -cleanup {
        cleanup
    } -result {
g    a   funding 
---- --- ------- 
SHIA JOE 1000.0  
    }

    test set-1.2 {undo deletes the override} -setup {
        setup
        set undo [sqservice mutate set {id {SHIA JOE} funding 1000.0}]
    } -body {
        namespace eval :: $undo
        rdb eval {SELECT * FROM sqservice_ga}
    } -cleanup {
        cleanup
    } -result {}

    test set-2.1 {Set record value, replacing previous override} -setup {
        setup
        sqservice mutate set {id {SHIA JOE} funding 1000.0}
    } -body {
        sqservice mutate set {id {SHIA JOE} funding 2000.0}
        ted query {SELECT * FROM sqservice_ga}
    } -cleanup {
        cleanup
    } -result {
g    a   funding 
---- --- ------- 
SHIA JOE 2000.0  
    }

    test set-2.2 {undo deletes the override} -setup {
        setup
        sqservice mutate set {id {SHIA JOE} funding 1000.0}
        set undo [sqservice mutate set {id {SHIA JOE} funding 2000.0}]
    } -body {
        namespace eval :: $undo
        ted query {SELECT * FROM sqservice_ga}
    } -cleanup {
        cleanup
    } -result {
g    a   funding 
---- --- ------- 
SHIA JOE 1000.0  
    }


    #-------------------------------------------------------------------
    # mutate reset

    test reset-1.1 {Record is reset to default} -setup {
        setup
        sqservice mutate set {id {SHIA JOE} funding 1000.0}
    } -body {
        sqservice mutate reset {SHIA JOE}

        # Is it gone?
        rdb eval {SELECT g,a FROM sqservice_ga}
    } -cleanup {
        cleanup
    } -result {}

    test reset-2.1 {Undo restores record} -setup {
        setup
        sqservice mutate set {id {SHIA JOE} funding 1000.0}
        set undo [sqservice mutate reset {SHIA JOE}]
    } -body {
        namespace eval :: $undo
        ted query {SELECT * FROM sqservice_ga}
    } -cleanup {
        cleanup
    } -result {
g    a   funding 
---- --- ------- 
SHIA JOE 1000.0  
    }

    #-------------------------------------------------------------------
    # exists

    test exists-1.1 {record does not exist} -body {
        setup
        sqservice exists {SUNN BOB}
    } -cleanup {
        cleanup
    } -result {0}

    test exists-1.3 {record exists} -setup {
        setup
        sqservice mutate set {id {SUNN BOB} funding 1000.0}
    } -body {
        sqservice exists {SUNN BOB}
    } -cleanup {
        cleanup
    } -result {1}


    #-------------------------------------------------------------------
    # validate

    test validate-1.1 {invalid group} -setup {
        setup
    } -body {
        sqservice validate {NONESUCH NONESUCH}
    } -returnCodes {
        error
    } -result {Invalid civilian group, should be one of: SHIA, SUNN}



    test validate-1.2 {Invalid actor} -setup {
        setup
    } -body {
        sqservice validate {SHIA NONESUCH}
    } -returnCodes {
        error
    } -cleanup {
        cleanup
    } -result {Invalid actor, should be one of: JOE, BOB}


    test validate-2.1 {Valid g,a pair} -setup {
        setup
    } -body {
        sqservice validate {SUNN BOB}
    } -cleanup {
        cleanup
    } -result {SUNN BOB}

    #-------------------------------------------------------------------
    # sqservice_view
    #
    # The sqservice_view is implemented in scenariodb.sql.  It sets a
    # pseudo-table with 0 funding where no records explicitly
    # been setd.

    test sqservice_view-1.1 {Defaults to 0.} -setup {
        setup
    } -body {
        ted query {SELECT * FROM sqservice_view ORDER BY g,a}
    } -cleanup {
        cleanup
    } -result {
g    a   funding 
---- --- ------- 
SHIA BOB 0.0     
SHIA JOE 0.0     
SUNN BOB 0.0     
SUNN JOE 0.0     
    }

    test sqservice_view-1.2 {Overridden by sqservice_ga records.} -setup {
        setup
    } -body {
        sqservice mutate set {id {SUNN BOB} funding 1000.0}
        ted query {SELECT * FROM sqservice_view ORDER BY g,a}
    } -cleanup {
        cleanup
    } -result {
g    a   funding 
---- --- ------- 
SHIA BOB 0.0     
SHIA JOE 0.0     
SUNN BOB 1000.0  
SUNN JOE 0.0     
    }

    #-------------------------------------------------------------------
    # Cleanup

    cleanupTests
}

namespace delete ::athena_test::tests::





