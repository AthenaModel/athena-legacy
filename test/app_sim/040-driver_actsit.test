# -*-Tcl-*-
#-----------------------------------------------------------------------
# TITLE:
#    040-driver_actsit.test
#
# AUTHOR:
#    Will Duquette
#
# DESCRIPTION:
#    driver_actsit(sim) tests
#
#    This test suite tests that the actsit rules fire when appropriate.
#
#-----------------------------------------------------------------------

#-----------------------------------------------------------------------
# Test Suite
#
# The tests run in a namespace so as not to interfere with other
# test suites.

namespace eval ::athena_test::tests:: {
    #-------------------------------------------------------------------
    # Set up the test environment

    # Import tcltest(n)
    namespace import ::tcltest::*

    # Define an htools buffer for tests
    htools ht

    # pprint text
    #
    # text  - block text
    #
    # Prints it so that it looks nice in a -result option.

    proc pprint {text} {
        return "\n[string trim $text]\n    "
    }

    # setup ?ensit?
    #
    # ensit - An ensit type, or ""
    #
    # Sets up for tests, and deploys some all BLUE troops to NB1.
    
    proc setup {{ensit ""}} {
        # FIRST, other rule sets shouldn't muddy the waters.
        parm set dam.CONSUMP.active no
        parm set dam.PRESENCE.active no
        parm set dam.UNEMP.active no
        parm set dam.ENI.active no
        rdb eval {DELETE FROM drivers}
        
        # NEXT, create the entities
        ted create JOE BOB NB1 NB2 BLUE BRIT HAL SHIA SUNN KURD
        
        # NEXT, at least one group should be an enemy of BLUE
        ted order HREL:OVERRIDE id {SHIA BLUE} base  1.0
        ted order HREL:OVERRIDE id {SUNN BLUE} base -1.0
        
        # NEXT, deploy BLUE and HAL troops to NB1, so we can assign them.
        ted deploy NB1 BLUE all
        ted deploy NB1 HAL all
    
        # NEXT, create an ensit on request.
        if {$ensit ne ""} {
            parm set dam.$ensit.active no
            ted order ENSIT:CREATE location B00B00 stype $ensit \
                coverage 1.0 inception 1 resolver NONE
        }
    }
    
    # assign a personnel
    #
    # a          - activity
    # personnel  - Number of personnel doing the activity.
    #
    # Assigns BLUE troops do an an activity in NB1.
    proc assign {a personnel} {
        ted assign NB1 BLUE $a $personnel
        ted lock
    }
    
    # orgassign a personnel
    #
    # a          - activity
    # personnel  - Number of personnel doing the activity.
    #
    # Assigns HAL troops do an an activity in NB1.
    
    proc orgassign {a personnel} {
        ted assign NB1 HAL $a $personnel

        # Set security requirement to N, so that we know the activity
        # will fire.
        parm set activity.ORG.$a.minSecurity.CTR N
        ted lock
    }
    
    # Clean up after a test
    proc cleanup {} {
        ht clear
        ted cleanup
    }

    #-------------------------------------------------------------------
    # sigline
    #
    # All situation types delegate to the same method in the same way,
    # so we'll test just one.

    test sigline-1.1 {sigline text} -setup {
        # none needed
    } -body {
        driver::PATROL sigline {N1 BLUE}
    } -cleanup {
        cleanup
    } -result {BLUE PATROL in N1}

    #-------------------------------------------------------------------
    # narrative
    #
    # All situation types delegate to the same method in the same way,
    # so we'll test just one.


    test narrative-1.1 {narrative text} -setup {
        # none needed
    } -body {
        driver::PATROL narrative {
            dtype       PATROL
            n           N1
            g           BLUE
            coverage    0.25
        }
    } -cleanup {
        cleanup
    } -result {{group:BLUE} PATROL in {nbhood:N1} (25%)}
    
    #-------------------------------------------------------------------
    # detail
    #
    # All situation types delegate to the same method in the same way,
    # so we'll test just one.

    test detail-1.1 {detail text, no mitigation} -setup {
        setup
    } -body {
        assign CMO_CONSTRUCTION 2000
        
        set fdict [rdb onecolumn {SELECT fdict FROM rule_firings}]

        driver::CMOCONST detail $fdict [namespace current]::ht
        pprint [ht get]
    } -cleanup {
        cleanup
    } -result {
Group <a href="my://app/group/BLUE">BLUE</a>
is performing the CMO_CONSTRUCTION activity
in neighborhood
<a href="my://app/nbhood/NB1">NB1</a>
with 2000 effective personnel.
yielding 100% coverage.<p>

Note: The coverage function is 20/1000
(2/3rds coverage at 20 personnel per 1000 in the population).<p>
    }
    
    test detail-1.2 {detail text, mitigation} -setup {
        setup DISEASE
    } -body {
        assign CMO_CONSTRUCTION 2000
        
        set fdict [rdb onecolumn {SELECT fdict FROM rule_firings}]

        driver::CMOCONST detail $fdict [namespace current]::ht
        pprint [ht get]
    } -cleanup {
        cleanup
    } -result {
Group <a href="my://app/group/BLUE">BLUE</a>
is performing the CMO_CONSTRUCTION activity
in neighborhood
<a href="my://app/nbhood/NB1">NB1</a>
with 2000 effective personnel.
yielding 100% coverage.<p>

The activity is mitigating the following ensits:
DISEASE.<p>

Note: The coverage function is 20/1000
(2/3rds coverage at 20 personnel per 1000 in the population).<p>
    }
    
 
    #-------------------------------------------------------------------
    # DISPLACED
    
    # Not tested; this will soon become a demsit.
    
    
    #-------------------------------------------------------------------
    # PRESENCE
    
    # Not tested; we've been asked to disable it for now.
    
    #-------------------------------------------------------------------
    # CHKPOINT
    
    test CHKPOINT-1.1 {Rule 1-1 fires} -setup {
        setup
    } -body {
        assign CHECKPOINT 2000
        ted querylist {SELECT * FROM rule_firings}
    } -cleanup {
        cleanup
    } -result {
firing_id  1
t          0
driver_id  1000
ruleset    CHKPOINT
rule       CHKPOINT-1-1
fdict      dtype CHKPOINT n NB1 g BLUE gtype FRC personnel 2000 coverage 1.0 flist {SHIA SUNN}
    }

    test CHKPOINT-1.2 {Rule 1-1 inputs} -setup {
        setup
    } -body {
        assign CHECKPOINT 2000
        
        ted query {SELECT atype,f,g,c,note FROM rule_inputs}
    } -cleanup {
        cleanup
    } -result {
atype f    g    c   note    
----- ---- ---- --- ------- 
sat        SHIA AUT friends 
sat        SHIA SFT friends 
sat        SHIA CUL friends 
sat        SHIA QOL friends 
sat        SUNN AUT enemies 
sat        SUNN SFT enemies 
sat        SUNN CUL enemies 
sat        SUNN QOL enemies 
coop  SHIA BLUE             
coop  SUNN BLUE             
    }

    #-------------------------------------------------------------------
    # CMOCONST
    
    test CMOCONST-1.1 {Rule 1-1 fires} -setup {
        setup DISEASE
    } -body {
        assign CMO_CONSTRUCTION 2000
        ted querylist {SELECT * FROM rule_firings}
    } -cleanup {
        cleanup
    } -result {
firing_id  1
t          0
driver_id  1000
ruleset    CMOCONST
rule       CMOCONST-1-1
fdict      dtype CMOCONST n NB1 g BLUE gtype FRC personnel 2000 coverage 1.0 flist {SHIA SUNN} mitigates DISEASE note mitigates stops 1
    }

    test CMOCONST-1.2 {Rule 1-1 inputs, no mitigation} -setup {
        setup
    } -body {
        assign CMO_CONSTRUCTION 2000
        
        ted query {SELECT atype,f,g,c,note FROM rule_inputs}
    } -cleanup {
        cleanup
    } -result {
atype f    g    c   note 
----- ---- ---- --- ---- 
sat        SHIA AUT      
sat        SHIA SFT      
sat        SHIA CUL      
sat        SHIA QOL      
sat        SUNN AUT      
sat        SUNN SFT      
sat        SUNN CUL      
sat        SUNN QOL      
coop  SHIA BLUE          
coop  SUNN BLUE          
    }
    
    test CMOCONST-1.3 {Rule 1-1 inputs, mitigation} -setup {
        setup DISEASE
    } -body {
        assign CMO_CONSTRUCTION 2000
        
        ted query {SELECT atype,f,g,c,note FROM rule_inputs}
    } -cleanup {
        cleanup
    } -result {
atype f    g    c   note      
----- ---- ---- --- --------- 
sat        SHIA AUT mitigates 
sat        SHIA SFT mitigates 
sat        SHIA CUL mitigates 
sat        SHIA QOL mitigates 
sat        SUNN AUT mitigates 
sat        SUNN SFT mitigates 
sat        SUNN CUL mitigates 
sat        SUNN QOL mitigates 
coop  SHIA BLUE     mitigates 
coop  SUNN BLUE     mitigates 
    }

    test CMOCONST-2.1 {Rule 2-1 fires} -setup {
        setup
    } -body {
        orgassign CMO_CONSTRUCTION 2000
        ted querylist {SELECT * FROM rule_firings}
    } -cleanup {
        cleanup
    } -result {
firing_id  1
t          0
driver_id  1000
ruleset    CMOCONST
rule       CMOCONST-2-1
fdict      dtype CMOCONST n NB1 g HAL gtype ORG personnel 2000 coverage 1.0 flist {SHIA SUNN} mitigates {} note {} stops 0
    }

    test CMOCONST-2.2 {Rule 2-1 inputs, no mitigation} -setup {
        setup
    } -body {
        orgassign CMO_CONSTRUCTION 2000
        
        ted query {SELECT atype,g,c,note FROM rule_inputs}
    } -cleanup {
        cleanup
    } -result {
atype g    c   note 
----- ---- --- ---- 
sat   SHIA AUT      
sat   SHIA SFT      
sat   SHIA CUL      
sat   SHIA QOL      
sat   SUNN AUT      
sat   SUNN SFT      
sat   SUNN CUL      
sat   SUNN QOL      
    }
    
    test CMOCONST-2.3 {Rule 2-1 inputs, mitigation} -setup {
        setup DISEASE
    } -body {
        orgassign CMO_CONSTRUCTION 2000
        
        ted query {SELECT atype,g,c,note FROM rule_inputs}
    } -cleanup {
        cleanup
    } -result {
atype g    c   note      
----- ---- --- --------- 
sat   SHIA AUT mitigates 
sat   SHIA SFT mitigates 
sat   SHIA CUL mitigates 
sat   SHIA QOL mitigates 
sat   SUNN AUT mitigates 
sat   SUNN SFT mitigates 
sat   SUNN CUL mitigates 
sat   SUNN QOL mitigates 
    }

    #-------------------------------------------------------------------
    # CMOEDU
    
    test CMOEDU-1.1 {Rule 1-1 fires} -setup {
        setup
    } -body {
        assign CMO_EDUCATION 2000
        ted querylist {SELECT * FROM rule_firings}
    } -cleanup {
        cleanup
    } -result {
firing_id  1
t          0
driver_id  1000
ruleset    CMOEDU
rule       CMOEDU-1-1
fdict      dtype CMOEDU n NB1 g BLUE gtype FRC personnel 2000 coverage 1.0 flist {SHIA SUNN} mitigates {} note {} stops 0
    }

    test CMOEDU-1.2 {Rule 1-1 inputs, no mitigation} -setup {
        setup
    } -body {
        assign CMO_EDUCATION 2000
        
        ted query {SELECT atype,f,g,c,note FROM rule_inputs}
    } -cleanup {
        cleanup
    } -result {
atype f    g    c   note 
----- ---- ---- --- ---- 
sat        SHIA AUT      
sat        SHIA SFT      
sat        SHIA CUL      
sat        SHIA QOL      
sat        SUNN AUT      
sat        SUNN SFT      
sat        SUNN CUL      
sat        SUNN QOL      
coop  SHIA BLUE          
coop  SUNN BLUE          
    }
    
    test CMOEDU-1.3 {Rule 1-1 inputs, mitigation} -setup {
        setup DISEASE
        # By default, CMOEDU doesn't mitigate any ensits.
        parm set dam.CMOEDU.mitigates DISEASE
    } -body {
        assign CMO_EDUCATION 2000
        
        ted query {SELECT atype,f,g,c,note FROM rule_inputs}
    } -cleanup {
        cleanup
    } -result {
atype f    g    c   note      
----- ---- ---- --- --------- 
sat        SHIA AUT mitigates 
sat        SHIA SFT mitigates 
sat        SHIA CUL mitigates 
sat        SHIA QOL mitigates 
sat        SUNN AUT mitigates 
sat        SUNN SFT mitigates 
sat        SUNN CUL mitigates 
sat        SUNN QOL mitigates 
coop  SHIA BLUE     mitigates 
coop  SUNN BLUE     mitigates 
    }

    
    test CMOEDU-2.1 {Rule 2-1 fires} -setup {
        setup
    } -body {
        orgassign CMO_EDUCATION 2000
        ted querylist {SELECT * FROM rule_firings}
    } -cleanup {
        cleanup
    } -result {
firing_id  1
t          0
driver_id  1000
ruleset    CMOEDU
rule       CMOEDU-2-1
fdict      dtype CMOEDU n NB1 g HAL gtype ORG personnel 2000 coverage 1.0 flist {SHIA SUNN} mitigates {} note {} stops 0
    }

    test CMOEDU-2.2 {Rule 2-1 inputs, no mitigation} -setup {
        setup
    } -body {
        orgassign CMO_EDUCATION 2000
        
        ted query {SELECT atype,g,c,note FROM rule_inputs}
    } -cleanup {
        cleanup
    } -result {
atype g    c   note 
----- ---- --- ---- 
sat   SHIA AUT      
sat   SHIA SFT      
sat   SHIA CUL      
sat   SHIA QOL      
sat   SUNN AUT      
sat   SUNN SFT      
sat   SUNN CUL      
sat   SUNN QOL      
    }
    
    test CMOEDU-2.3 {Rule 2-1 inputs, mitigation} -setup {
        setup DISEASE
        # By default, CMOEDU doesn't mitigate any ensits.
        parm set dam.CMOEDU.mitigates DISEASE
    } -body {
        orgassign CMO_EDUCATION 2000
        
        ted query {SELECT atype,g,c,note FROM rule_inputs}
    } -cleanup {
        cleanup
    } -result {
atype g    c   note      
----- ---- --- --------- 
sat   SHIA AUT mitigates 
sat   SHIA SFT mitigates 
sat   SHIA CUL mitigates 
sat   SHIA QOL mitigates 
sat   SUNN AUT mitigates 
sat   SUNN SFT mitigates 
sat   SUNN CUL mitigates 
sat   SUNN QOL mitigates 
    }

    #-------------------------------------------------------------------
    # CMOEMP
    
    test CMOEMP-1.1 {Rule 1-1 fires} -setup {
        setup
    } -body {
        assign CMO_EMPLOYMENT 2000
        ted querylist {SELECT * FROM rule_firings}
    } -cleanup {
        cleanup
    } -result {
firing_id  1
t          0
driver_id  1000
ruleset    CMOEMP
rule       CMOEMP-1-1
fdict      dtype CMOEMP n NB1 g BLUE gtype FRC personnel 2000 coverage 1.0 flist {SHIA SUNN} mitigates {} note {} stops 0
    }

    test CMOEMP-1.2 {Rule 1-1 inputs, no mitigation} -setup {
        setup
    } -body {
        assign CMO_EMPLOYMENT 2000
        
        ted query {SELECT atype,f,g,c,note FROM rule_inputs}
    } -cleanup {
        cleanup
    } -result {
atype f    g    c   note 
----- ---- ---- --- ---- 
sat        SHIA AUT      
sat        SHIA SFT      
sat        SHIA CUL      
sat        SHIA QOL      
sat        SUNN AUT      
sat        SUNN SFT      
sat        SUNN CUL      
sat        SUNN QOL      
coop  SHIA BLUE          
coop  SUNN BLUE          
    }
    
    test CMOEMP-1.3 {Rule 1-1 inputs, mitigation} -setup {
        setup DISEASE
        # By default, CMOEMP doesn't mitigate any ensits.
        parm set dam.CMOEMP.mitigates DISEASE
    } -body {
        assign CMO_EMPLOYMENT 2000
        
        ted query {SELECT atype,f,g,c,note FROM rule_inputs}
    } -cleanup {
        cleanup
    } -result {
atype f    g    c   note      
----- ---- ---- --- --------- 
sat        SHIA AUT mitigates 
sat        SHIA SFT mitigates 
sat        SHIA CUL mitigates 
sat        SHIA QOL mitigates 
sat        SUNN AUT mitigates 
sat        SUNN SFT mitigates 
sat        SUNN CUL mitigates 
sat        SUNN QOL mitigates 
coop  SHIA BLUE     mitigates 
coop  SUNN BLUE     mitigates 
    }

    
    
    test CMOEMP-2.1 {Rule 2-1 fires} -setup {
        setup
    } -body {
        orgassign CMO_EMPLOYMENT 2000
        ted querylist {SELECT * FROM rule_firings}
    } -cleanup {
        cleanup
    } -result {
firing_id  1
t          0
driver_id  1000
ruleset    CMOEMP
rule       CMOEMP-2-1
fdict      dtype CMOEMP n NB1 g HAL gtype ORG personnel 2000 coverage 1.0 flist {SHIA SUNN} mitigates {} note {} stops 0
    }

    test CMOEMP-2.2 {Rule 2-1 inputs, no mitigation} -setup {
        setup
    } -body {
        orgassign CMO_EMPLOYMENT 2000
        
        ted query {SELECT atype,g,c,note FROM rule_inputs}
    } -cleanup {
        cleanup
    } -result {
atype g    c   note 
----- ---- --- ---- 
sat   SHIA AUT      
sat   SHIA SFT      
sat   SHIA CUL      
sat   SHIA QOL      
sat   SUNN AUT      
sat   SUNN SFT      
sat   SUNN CUL      
sat   SUNN QOL      
    }
    
    test CMOEMP-2.3 {Rule 2-1 inputs, mitigation} -setup {
        setup DISEASE
        # By default, CMOEMP doesn't mitigate any ensits.
        parm set dam.CMOEMP.mitigates DISEASE
    } -body {
        orgassign CMO_EMPLOYMENT 2000
        
        ted query {SELECT atype,g,c,note FROM rule_inputs}
    } -cleanup {
        cleanup
    } -result {
atype g    c   note      
----- ---- --- --------- 
sat   SHIA AUT mitigates 
sat   SHIA SFT mitigates 
sat   SHIA CUL mitigates 
sat   SHIA QOL mitigates 
sat   SUNN AUT mitigates 
sat   SUNN SFT mitigates 
sat   SUNN CUL mitigates 
sat   SUNN QOL mitigates 
    }

    #-------------------------------------------------------------------
    # CMOIND
    
    test CMOIND-1.1 {Rule 1-1 fires} -setup {
        setup NOWATER
    } -body {
        assign CMO_INDUSTRY 2000
        ted querylist {SELECT * FROM rule_firings}
    } -cleanup {
        cleanup
    } -result {
firing_id  1
t          0
driver_id  1000
ruleset    CMOIND
rule       CMOIND-1-1
fdict      dtype CMOIND n NB1 g BLUE gtype FRC personnel 2000 coverage 1.0 flist {SHIA SUNN} mitigates NOWATER note mitigates stops 1
    }

    test CMOIND-1.2 {Rule 1-1 inputs, no mitigation} -setup {
        setup
    } -body {
        assign CMO_INDUSTRY 2000
        
        ted query {SELECT atype,f,g,c,note FROM rule_inputs}
    } -cleanup {
        cleanup
    } -result {
atype f    g    c   note 
----- ---- ---- --- ---- 
sat        SHIA AUT      
sat        SHIA SFT      
sat        SHIA CUL      
sat        SHIA QOL      
sat        SUNN AUT      
sat        SUNN SFT      
sat        SUNN CUL      
sat        SUNN QOL      
coop  SHIA BLUE          
coop  SUNN BLUE          
    }
    
    test CMOIND-1.3 {Rule 1-1 inputs, mitigation} -setup {
        setup NOWATER
    } -body {
        assign CMO_INDUSTRY 2000
        
        ted query {SELECT atype,f,g,c,note FROM rule_inputs}
    } -cleanup {
        cleanup
    } -result {
atype f    g    c   note      
----- ---- ---- --- --------- 
sat        SHIA AUT mitigates 
sat        SHIA SFT mitigates 
sat        SHIA CUL mitigates 
sat        SHIA QOL mitigates 
sat        SUNN AUT mitigates 
sat        SUNN SFT mitigates 
sat        SUNN CUL mitigates 
sat        SUNN QOL mitigates 
coop  SHIA BLUE     mitigates 
coop  SUNN BLUE     mitigates 
    }

    
    test CMOIND-2.1 {Rule 2-1 fires} -setup {
        setup
    } -body {
        orgassign CMO_INDUSTRY 2000
        ted querylist {SELECT * FROM rule_firings}
    } -cleanup {
        cleanup
    } -result {
firing_id  1
t          0
driver_id  1000
ruleset    CMOIND
rule       CMOIND-2-1
fdict      dtype CMOIND n NB1 g HAL gtype ORG personnel 2000 coverage 1.0 flist {SHIA SUNN} mitigates {} note {} stops 0
    }

    test CMOIND-2.2 {Rule 2-1 inputs, no mitigation} -setup {
        setup
    } -body {
        orgassign CMO_INDUSTRY 2000
        
        ted query {SELECT atype,g,c,note FROM rule_inputs}
    } -cleanup {
        cleanup
    } -result {
atype g    c   note 
----- ---- --- ---- 
sat   SHIA AUT      
sat   SHIA SFT      
sat   SHIA CUL      
sat   SHIA QOL      
sat   SUNN AUT      
sat   SUNN SFT      
sat   SUNN CUL      
sat   SUNN QOL      
    }
    
    test CMOIND-2.3 {Rule 2-1 inputs, mitigation} -setup {
        setup NOWATER
    } -body {
        orgassign CMO_INDUSTRY 2000
        
        ted query {SELECT atype,g,c,note FROM rule_inputs}
    } -cleanup {
        cleanup
    } -result {
atype g    c   note      
----- ---- --- --------- 
sat   SHIA AUT mitigates 
sat   SHIA SFT mitigates 
sat   SHIA CUL mitigates 
sat   SHIA QOL mitigates 
sat   SUNN AUT mitigates 
sat   SUNN SFT mitigates 
sat   SUNN CUL mitigates 
sat   SUNN QOL mitigates 
    }

    #-------------------------------------------------------------------
    # CMOINF
    
    test CMOINF-1.1 {Rule 1-1 fires} -setup {
        setup NOWATER
    } -body {
        assign CMO_INFRASTRUCTURE 2000
        ted querylist {SELECT * FROM rule_firings}
    } -cleanup {
        cleanup
    } -result {
firing_id  1
t          0
driver_id  1000
ruleset    CMOINF
rule       CMOINF-1-1
fdict      dtype CMOINF n NB1 g BLUE gtype FRC personnel 2000 coverage 1.0 flist {SHIA SUNN} mitigates NOWATER note mitigates stops 1
    }

    test CMOINF-1.2 {Rule 1-1 inputs, no mitigation} -setup {
        setup
    } -body {
        assign CMO_INFRASTRUCTURE 2000
        
        ted query {SELECT atype,f,g,c,note FROM rule_inputs}
    } -cleanup {
        cleanup
    } -result {
atype f    g    c   note 
----- ---- ---- --- ---- 
sat        SHIA AUT      
sat        SHIA SFT      
sat        SHIA CUL      
sat        SHIA QOL      
sat        SUNN AUT      
sat        SUNN SFT      
sat        SUNN CUL      
sat        SUNN QOL      
coop  SHIA BLUE          
coop  SUNN BLUE          
    }
    
    test CMOINF-1.3 {Rule 1-1 inputs, mitigation} -setup {
        setup NOWATER
    } -body {
        assign CMO_INFRASTRUCTURE 2000
        
        ted query {SELECT atype,f,g,c,note FROM rule_inputs}
    } -cleanup {
        cleanup
    } -result {
atype f    g    c   note      
----- ---- ---- --- --------- 
sat        SHIA AUT mitigates 
sat        SHIA SFT mitigates 
sat        SHIA CUL mitigates 
sat        SHIA QOL mitigates 
sat        SUNN AUT mitigates 
sat        SUNN SFT mitigates 
sat        SUNN CUL mitigates 
sat        SUNN QOL mitigates 
coop  SHIA BLUE     mitigates 
coop  SUNN BLUE     mitigates 
    }

    
    test CMOINF-2.1 {Rule 2-1 fires} -setup {
        setup
    } -body {
        orgassign CMO_INFRASTRUCTURE 2000
        ted querylist {SELECT * FROM rule_firings}
    } -cleanup {
        cleanup
    } -result {
firing_id  1
t          0
driver_id  1000
ruleset    CMOINF
rule       CMOINF-2-1
fdict      dtype CMOINF n NB1 g HAL gtype ORG personnel 2000 coverage 1.0 flist {SHIA SUNN} mitigates {} note {} stops 0
    }

    test CMOINF-2.2 {Rule 2-1 inputs, no mitigation} -setup {
        setup
    } -body {
        orgassign CMO_INFRASTRUCTURE 2000
        
        ted query {SELECT atype,g,c,note FROM rule_inputs}
    } -cleanup {
        cleanup
    } -result {
atype g    c   note 
----- ---- --- ---- 
sat   SHIA AUT      
sat   SHIA SFT      
sat   SHIA CUL      
sat   SHIA QOL      
sat   SUNN AUT      
sat   SUNN SFT      
sat   SUNN CUL      
sat   SUNN QOL      
    }
    
    test CMOINF-2.3 {Rule 2-1 inputs, mitigation} -setup {
        setup NOWATER
    } -body {
        orgassign CMO_INFRASTRUCTURE 2000
        
        ted query {SELECT atype,g,c,note FROM rule_inputs}
    } -cleanup {
        cleanup
    } -result {
atype g    c   note      
----- ---- --- --------- 
sat   SHIA AUT mitigates 
sat   SHIA SFT mitigates 
sat   SHIA CUL mitigates 
sat   SHIA QOL mitigates 
sat   SUNN AUT mitigates 
sat   SUNN SFT mitigates 
sat   SUNN CUL mitigates 
sat   SUNN QOL mitigates 
    }

    #-------------------------------------------------------------------
    # CMOLAW
    
    test CMOLAW-1.1 {Rule 1-1 fires} -setup {
        setup
    } -body {
        assign CMO_LAW_ENFORCEMENT 2000
        ted querylist {SELECT * FROM rule_firings}
    } -cleanup {
        cleanup
    } -result {
firing_id  1
t          0
driver_id  1000
ruleset    CMOLAW
rule       CMOLAW-1-1
fdict      dtype CMOLAW n NB1 g BLUE gtype FRC personnel 2000 coverage 1.0 flist {SHIA SUNN}
    }

    test CMOLAW-1.2 {Rule 1-1 inputs} -setup {
        setup
    } -body {
        assign CMO_LAW_ENFORCEMENT 2000
        
        ted query {SELECT atype,f,g,c,note FROM rule_inputs}
    } -cleanup {
        cleanup
    } -result {
atype f    g    c   note 
----- ---- ---- --- ---- 
sat        SHIA AUT      
sat        SHIA SFT      
sat        SUNN AUT      
sat        SUNN SFT      
coop  SHIA BLUE          
coop  SUNN BLUE          
    }
    
     
    #-------------------------------------------------------------------
    # CMOMED
    
    test CMOMED-1.1 {Rule 1-1 fires} -setup {
        setup DISEASE
    } -body {
        assign CMO_HEALTHCARE 2000
        ted querylist {SELECT * FROM rule_firings}
    } -cleanup {
        cleanup
    } -result {
firing_id  1
t          0
driver_id  1000
ruleset    CMOMED
rule       CMOMED-1-1
fdict      dtype CMOMED n NB1 g BLUE gtype FRC personnel 2000 coverage 1.0 flist {SHIA SUNN} mitigates DISEASE note mitigates stops 1
    }

    test CMOMED-1.2 {Rule 1-1 inputs, no mitigation} -setup {
        setup
    } -body {
        assign CMO_HEALTHCARE 2000
        
        ted query {SELECT atype,f,g,c,note FROM rule_inputs}
    } -cleanup {
        cleanup
    } -result {
atype f    g    c   note 
----- ---- ---- --- ---- 
sat        SHIA AUT      
sat        SHIA SFT      
sat        SHIA QOL      
sat        SUNN AUT      
sat        SUNN SFT      
sat        SUNN QOL      
coop  SHIA BLUE          
coop  SUNN BLUE          
    }
    
    test CMOMED-1.3 {Rule 1-1 inputs, mitigation} -setup {
        setup DISEASE
    } -body {
        assign CMO_HEALTHCARE 2000
        
        ted query {SELECT atype,f,g,c,note FROM rule_inputs}
    } -cleanup {
        cleanup
    } -result {
atype f    g    c   note      
----- ---- ---- --- --------- 
sat        SHIA AUT mitigates 
sat        SHIA SFT mitigates 
sat        SHIA QOL mitigates 
sat        SUNN AUT mitigates 
sat        SUNN SFT mitigates 
sat        SUNN QOL mitigates 
coop  SHIA BLUE     mitigates 
coop  SUNN BLUE     mitigates 
    }

   
    test CMOMED-2.1 {Rule 2-1 fires} -setup {
        setup
    } -body {
        orgassign CMO_HEALTHCARE 2000
        ted querylist {SELECT * FROM rule_firings}
    } -cleanup {
        cleanup
    } -result {
firing_id  1
t          0
driver_id  1000
ruleset    CMOMED
rule       CMOMED-2-1
fdict      dtype CMOMED n NB1 g HAL gtype ORG personnel 2000 coverage 1.0 flist {SHIA SUNN} mitigates {} note {} stops 0
    }

    test CMOMED-2.2 {Rule 2-1 inputs, no mitigation} -setup {
        setup
    } -body {
        orgassign CMO_HEALTHCARE 2000
        
        ted query {SELECT atype,g,c,note FROM rule_inputs}
    } -cleanup {
        cleanup
    } -result {
atype g    c   note 
----- ---- --- ---- 
sat   SHIA AUT      
sat   SHIA SFT      
sat   SHIA CUL      
sat   SHIA QOL      
sat   SUNN AUT      
sat   SUNN SFT      
sat   SUNN CUL      
sat   SUNN QOL      
    }
    
    test CMOMED-2.3 {Rule 2-1 inputs, mitigation} -setup {
        setup DISEASE
    } -body {
        orgassign CMO_HEALTHCARE 2000
        
        ted query {SELECT atype,g,c,note FROM rule_inputs}
    } -cleanup {
        cleanup
    } -result {
atype g    c   note      
----- ---- --- --------- 
sat   SHIA AUT mitigates 
sat   SHIA SFT mitigates 
sat   SHIA CUL mitigates 
sat   SHIA QOL mitigates 
sat   SUNN AUT mitigates 
sat   SUNN SFT mitigates 
sat   SUNN CUL mitigates 
sat   SUNN QOL mitigates 
    }

    #-------------------------------------------------------------------
    # CMOOTHER
    
    test CMOOTHER-1.1 {Rule 1-1 fires} -setup {
        setup DISEASE
    } -body {
        assign CMO_OTHER 2000
        ted querylist {SELECT * FROM rule_firings}
    } -cleanup {
        cleanup
    } -result {
firing_id  1
t          0
driver_id  1000
ruleset    CMOOTHER
rule       CMOOTHER-1-1
fdict      dtype CMOOTHER n NB1 g BLUE gtype FRC personnel 2000 coverage 1.0 flist {SHIA SUNN} mitigates DISEASE note mitigates stops 1
    }

    test CMOOTHER-1.2 {Rule 1-1 inputs, no mitigation} -setup {
        setup
    } -body {
        assign CMO_OTHER 2000
        
        ted query {SELECT atype,f,g,c,note FROM rule_inputs}
    } -cleanup {
        cleanup
    } -result {
atype f    g    c   note 
----- ---- ---- --- ---- 
sat        SHIA AUT      
sat        SHIA SFT      
sat        SHIA CUL      
sat        SHIA QOL      
sat        SUNN AUT      
sat        SUNN SFT      
sat        SUNN CUL      
sat        SUNN QOL      
coop  SHIA BLUE          
coop  SUNN BLUE          
    }
    
    test CMOOTHER-1.3 {Rule 1-1 inputs, mitigation} -setup {
        setup DISEASE
    } -body {
        assign CMO_OTHER 2000
        
        ted query {SELECT atype,f,g,c,note FROM rule_inputs}
    } -cleanup {
        cleanup
    } -result {
atype f    g    c   note      
----- ---- ---- --- --------- 
sat        SHIA AUT mitigates 
sat        SHIA SFT mitigates 
sat        SHIA CUL mitigates 
sat        SHIA QOL mitigates 
sat        SUNN AUT mitigates 
sat        SUNN SFT mitigates 
sat        SUNN CUL mitigates 
sat        SUNN QOL mitigates 
coop  SHIA BLUE     mitigates 
coop  SUNN BLUE     mitigates 
    }

    
    test CMOOTHER-2.1 {Rule 2-1 fires} -setup {
        setup
    } -body {
        orgassign CMO_OTHER 2000
        ted querylist {SELECT * FROM rule_firings}
    } -cleanup {
        cleanup
    } -result {
firing_id  1
t          0
driver_id  1000
ruleset    CMOOTHER
rule       CMOOTHER-2-1
fdict      dtype CMOOTHER n NB1 g HAL gtype ORG personnel 2000 coverage 1.0 flist {SHIA SUNN} mitigates {} note {} stops 0
    }

    test CMOOTHER-2.2 {Rule 2-1 inputs, no mitigation} -setup {
        setup
    } -body {
        orgassign CMO_OTHER 2000
        
        ted query {SELECT atype,g,c,note FROM rule_inputs}
    } -cleanup {
        cleanup
    } -result {
atype g    c   note 
----- ---- --- ---- 
sat   SHIA AUT      
sat   SHIA SFT      
sat   SHIA CUL      
sat   SHIA QOL      
sat   SUNN AUT      
sat   SUNN SFT      
sat   SUNN CUL      
sat   SUNN QOL      
    }
    
    test CMOOTHER-2.3 {Rule 2-1 inputs, mitigation} -setup {
        setup DISEASE
    } -body {
        orgassign CMO_OTHER 2000
        
        ted query {SELECT atype,g,c,note FROM rule_inputs}
    } -cleanup {
        cleanup
    } -result {
atype g    c   note      
----- ---- --- --------- 
sat   SHIA AUT mitigates 
sat   SHIA SFT mitigates 
sat   SHIA CUL mitigates 
sat   SHIA QOL mitigates 
sat   SUNN AUT mitigates 
sat   SUNN SFT mitigates 
sat   SUNN CUL mitigates 
sat   SUNN QOL mitigates 
    }

    #-------------------------------------------------------------------
    # COERCION
    
    test COERCION-1.1 {Rule 1-1 fires} -setup {
        setup
    } -body {
        assign COERCION 2000
        ted querylist {SELECT * FROM rule_firings}
    } -cleanup {
        cleanup
    } -result {
firing_id  1
t          0
driver_id  1000
ruleset    COERCION
rule       COERCION-1-1
fdict      dtype COERCION n NB1 g BLUE gtype FRC personnel 2000 coverage 1.0 flist {SHIA SUNN}
    }

    test COERCION-1.2 {Rule 1-1 inputs, no mitigation} -setup {
        setup
    } -body {
        assign COERCION 2000
        
        ted query {SELECT atype,f,g,c,note FROM rule_inputs}
    } -cleanup {
        cleanup
    } -result {
atype f    g    c   note 
----- ---- ---- --- ---- 
sat        SHIA AUT      
sat        SHIA SFT      
sat        SHIA CUL      
sat        SHIA QOL      
sat        SUNN AUT      
sat        SUNN SFT      
sat        SUNN CUL      
sat        SUNN QOL      
coop  SHIA BLUE          
coop  SUNN BLUE          
    }
    
    #-------------------------------------------------------------------
    # CRIMINAL
    
    test CRIMINAL-1.1 {Rule 1-1 fires} -setup {
        setup
    } -body {
        assign CRIMINAL_ACTIVITIES 2000
        ted querylist {SELECT * FROM rule_firings}
    } -cleanup {
        cleanup
    } -result {
firing_id  1
t          0
driver_id  1000
ruleset    CRIMINAL
rule       CRIMINAL-1-1
fdict      dtype CRIMINAL n NB1 g BLUE gtype FRC personnel 2000 coverage 1.0 flist {SHIA SUNN}
    }

    test CRIMINAL-1.2 {Rule 1-1 inputs, no mitigation} -setup {
        setup
    } -body {
        assign CRIMINAL_ACTIVITIES 2000
        
        ted query {SELECT atype,f,g,c,note FROM rule_inputs}
    } -cleanup {
        cleanup
    } -result {
atype f g    c   note 
----- - ---- --- ---- 
sat     SHIA AUT      
sat     SHIA SFT      
sat     SHIA QOL      
sat     SUNN AUT      
sat     SUNN SFT      
sat     SUNN QOL      
    }


    #-------------------------------------------------------------------
    # CURFEW
    
    test CURFEW-1.1 {Rule 1-1 fires} -setup {
        setup
    } -body {
        assign CURFEW 2000
        ted querylist {SELECT * FROM rule_firings}
    } -cleanup {
        cleanup
    } -result {
firing_id  1
t          0
driver_id  1000
ruleset    CURFEW
rule       CURFEW-1-1
fdict      dtype CURFEW n NB1 g BLUE gtype FRC personnel 2000 coverage 1.0 flist {SHIA SUNN}
    }

    test CURFEW-1.2 {Rule 1-1 inputs} -setup {
        setup
    } -body {
        assign CURFEW 2000
        
        ted query {SELECT atype,f,g,c,note FROM rule_inputs}
    } -cleanup {
        cleanup
    } -result {
atype f    g    c   note    
----- ---- ---- --- ------- 
sat        SHIA AUT friends 
sat        SHIA SFT friends 
sat        SHIA CUL friends 
sat        SHIA QOL friends 
sat        SUNN AUT enemies 
sat        SUNN SFT enemies 
sat        SUNN CUL enemies 
sat        SUNN QOL enemies 
coop  SHIA BLUE             
coop  SUNN BLUE             
    }

    
    #-------------------------------------------------------------------
    # GUARD
    
    test GUARD-1.1 {Rule 1-1 fires} -setup {
        setup
    } -body {
        assign GUARD 2000
        ted querylist {SELECT * FROM rule_firings}
    } -cleanup {
        cleanup
    } -result {
firing_id  1
t          0
driver_id  1000
ruleset    GUARD
rule       GUARD-1-1
fdict      dtype GUARD n NB1 g BLUE gtype FRC personnel 2000 coverage 1.0 flist {SHIA SUNN}
    }

    test GUARD-1.2 {Rule 1-1 inputs, no mitigation} -setup {
        setup
    } -body {
        assign GUARD 2000
        
        ted query {SELECT atype,f,g,c,note FROM rule_inputs}
    } -cleanup {
        cleanup
    } -result {
atype f    g    c   note 
----- ---- ---- --- ---- 
sat        SHIA AUT      
sat        SHIA SFT      
sat        SHIA CUL      
sat        SHIA QOL      
sat        SUNN AUT      
sat        SUNN SFT      
sat        SUNN CUL      
sat        SUNN QOL      
coop  SHIA BLUE          
coop  SUNN BLUE          
    }
    
    #-------------------------------------------------------------------
    # PATROL
    
    test PATROL-1.1 {Rule 1-1 fires} -setup {
        setup
    } -body {
        assign PATROL 2000
        ted querylist {SELECT * FROM rule_firings}
    } -cleanup {
        cleanup
    } -result {
firing_id  1
t          0
driver_id  1000
ruleset    PATROL
rule       PATROL-1-1
fdict      dtype PATROL n NB1 g BLUE gtype FRC personnel 2000 coverage 1.0 flist {SHIA SUNN}
    }

    test PATROL-1.2 {Rule 1-1 inputs, no mitigation} -setup {
        setup
    } -body {
        assign PATROL 2000
        
        ted query {SELECT atype,f,g,c,note FROM rule_inputs}
    } -cleanup {
        cleanup
    } -result {
atype f    g    c   note 
----- ---- ---- --- ---- 
sat        SHIA AUT      
sat        SHIA SFT      
sat        SHIA CUL      
sat        SHIA QOL      
sat        SUNN AUT      
sat        SUNN SFT      
sat        SUNN CUL      
sat        SUNN QOL      
coop  SHIA BLUE          
coop  SUNN BLUE          
    }
    
    #-------------------------------------------------------------------
    # PSYOP
    
    test PSYOP-1.1 {Rule 1-1 fires} -setup {
        setup
    } -body {
        assign PSYOP 2000
        ted querylist {SELECT * FROM rule_firings}
    } -cleanup {
        cleanup
    } -result {
firing_id  1
t          0
driver_id  1000
ruleset    PSYOP
rule       PSYOP-1-1
fdict      dtype PSYOP n NB1 g BLUE gtype FRC personnel 2000 coverage 1.0 flist {SHIA SUNN}
    }

    test PSYOP-1.2 {Rule 1-1 inputs} -setup {
        setup
    } -body {
        assign PSYOP 2000
        
        ted query {SELECT atype,f,g,c,note FROM rule_inputs}
    } -cleanup {
        cleanup
    } -result {
atype f    g    c   note    
----- ---- ---- --- ------- 
sat        SHIA AUT friends 
sat        SHIA SFT friends 
sat        SHIA CUL friends 
sat        SHIA QOL friends 
sat        SUNN AUT enemies 
sat        SUNN SFT enemies 
sat        SUNN CUL enemies 
sat        SUNN QOL enemies 
coop  SHIA BLUE             
coop  SUNN BLUE             
    }

    




    
    cleanupTests
}

namespace delete ::athena_test::tests::








