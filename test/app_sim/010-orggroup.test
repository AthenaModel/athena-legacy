# -*-Tcl-*-
#-----------------------------------------------------------------------
# TITLE:
#    010-orggroup.test
#
# AUTHOR:
#    Will Duquette
#
# DESCRIPTION:
#    orggroup(sim) tests.
#
#    This test suite tests the orggroup(sim) mutators and queries
#
#-----------------------------------------------------------------------

#-----------------------------------------------------------------------
# Test Suite
#
# The tests run in a namespace so as not to interfere with other
# test suites.

namespace eval ::athena_test::tests:: {
    #-------------------------------------------------------------------
    # Set up the test environment

    # Import tcltest(n)
    namespace import ::tcltest::*

    # Clean up after a test

    proc cleanup {} {
        # Clean up the test environment
        array unset parms
        ted cleanup
    }

    #-------------------------------------------------------------------
    # mutate create

    test create-1.1 {orggroup is created} -setup {
        ted create JOE
    } -body {
        orggroup mutate create [ted entity USAID]
        ted query {SELECT * FROM orggroups_view}
    } -cleanup {
        cleanup
    } -result {
g     longname color   shape   symbol       demeanor basepop cost rel_entity gtype a   orgtype 
----- -------- ------- ------- ------------ -------- ------- ---- ---------- ----- --- ------- 
USAID US Aid   #000001 NEUTRAL organization AVERAGE  1000    0.0  JOE        ORG   JOE NGO     
    }

    test create-1.2 {a can be empty, yields NULL} -setup {
        ted create JOE
    } -body {
        orggroup mutate create [dict merge [ted entity USAID] {a ""}]
        ted query {SELECT * FROM orggroups_view}
    } -cleanup {
        cleanup
    } -result {
g     longname color   shape   symbol       demeanor basepop cost rel_entity gtype a orgtype 
----- -------- ------- ------- ------------ -------- ------- ---- ---------- ----- - ------- 
USAID US Aid   #000001 NEUTRAL organization AVERAGE  1000    0.0             ORG     NGO     
    }

    test create-2.1 {undo deletes the orggroup} -setup {
        ted create JOE
        orggroup mutate create [ted entity USAID]
        set undo [orggroup mutate create [ted entity HAL]]
    } -body {
        {*}$undo
        rdb eval {SELECT g FROM orggroups_view}
    } -cleanup {
        cleanup
    } -result {USAID}

    #-------------------------------------------------------------------
    # mutate delete

    test delete-1.1 {Group is deleted} -setup {
        ted create USAID HAL
    } -body {
        orggroup mutate delete USAID

        # Is USAID gone?
        rdb eval {SELECT g FROM orggroups_view}
    } -cleanup {
        cleanup
    } -result {HAL}


    test delete-2.1 {Undo restores group} -setup {
        ted create USAID
        set undo [orggroup mutate delete USAID]
    } -body {
        {*}$undo
        ted query {SELECT * FROM orggroups_view}
    } -cleanup {
        cleanup
    } -result {
g     longname color   shape   symbol       demeanor basepop cost rel_entity gtype a   orgtype 
----- -------- ------- ------- ------------ -------- ------- ---- ---------- ----- --- ------- 
USAID US Aid   #000001 NEUTRAL organization AVERAGE  1000    0.0  JOE        ORG   JOE NGO     
    }


    test delete-5.1 {deletes rel_fg overrides} -setup {
        ted create USAID BRIT
        rel mutate create {id {USAID BRIT} rel 0.5}
        rel mutate create {id {BRIT USAID} rel 0.5}
    } -body {
        orggroup mutate delete USAID

        rdb eval {SELECT f,g FROM rel_fg ORDER BY f,g}
    } -cleanup {
        cleanup
    } -result {}

    test delete-5.2 {undo restores rel_fg overrides} -setup {
        ted create USAID BRIT
        rel mutate create {id {USAID BRIT} rel 0.5}
        rel mutate create {id {BRIT USAID} rel 0.5}

        set undo [orggroup mutate delete USAID]
    } -body {
        namespace eval :: $undo

        rdb eval {SELECT f,g FROM rel_fg ORDER BY f,g}
    } -cleanup {
        cleanup
    } -result {BRIT USAID USAID BRIT}

    #-------------------------------------------------------------------
    # mutate update


    test update-1.1 {orggroup is updated} -setup {
        ted create BOB USAID
    } -body {
        orggroup mutate update {
            g              USAID
            longname       "Red Cross"
            a              BOB
            color          "#ff0000"
            shape          FRIEND
            orgtype        IGO
            demeanor       APATHETIC
            basepop        2000
            cost           10.0
        }

        ted query {SELECT * FROM orggroups_view}
    } -cleanup {
        cleanup
    } -result {
g     longname  color   shape  symbol       demeanor  basepop cost rel_entity gtype a   orgtype 
----- --------- ------- ------ ------------ --------- ------- ---- ---------- ----- --- ------- 
USAID Red Cross #ff0000 FRIEND organization APATHETIC 2000    10.0 BOB        ORG   BOB IGO     
    }


    test update-1.2 {identical values are OK} -setup {
        ted create USAID
    } -body {
        set a [ted query {SELECT * FROM orggroups_view}]

        orggroup mutate update [ted entity USAID]

        set b [ted query {SELECT * FROM orggroups_view}]

        expr {$a eq $b}
    } -cleanup {
        cleanup
    } -result {1}


    test update-1.3 {empty values are OK} -setup {
        ted create USAID
    } -body {
        set a [ted query {SELECT * FROM orggroups_view}]

        orggroup mutate update  {
            g              USAID
            longname       ""
            a              ""
            color          ""
            shape          ""
            orgtype        ""
            demeanor       ""
            basepop        ""
            cost           ""
        }

        set b [ted query {SELECT * FROM orggroups_view}]

        expr {$a eq $b}
    } -cleanup {
        cleanup
    } -result {1}


    test update-2.1 {undo undoes the change} -setup {
        ted create USAID
    } -body {

        set a [ted query {SELECT * FROM orggroups_view}]

        set undo [orggroup mutate update {
            g              USAID
            longname       "Red Cross"
            a              ""
            color          "#ff0000"
            shape          FRIEND
            orgtype        IGO
            demeanor       AGGRESSIVE
            basepop        2000
            cost           10.0
        }]

        {*}$undo

        set b [ted query {SELECT * FROM orggroups_view}]

        expr {$a eq $b}
    } -cleanup {
        cleanup
    } -result {1}


    #-------------------------------------------------------------------
    # names

    test names-1.1 {Returns names: none defined} -body {
        orggroup names
    } -cleanup {
        cleanup
    } -result {}

    test names-1.2 {Returns names} -setup {
        ted create USAID HAL
    } -body {
        orggroup names
    } -cleanup {
        cleanup
    } -result {USAID HAL}


    #-------------------------------------------------------------------
    # validate

    test validate-1.1 {Invalid name: none defined} -body {
        orggroup validate NONESUCH
    } -returnCodes {
        error
    } -cleanup {
        cleanup
    } -result {Invalid organization group, none are defined}

    test validate-1.2 {Invalid name: some defined} -setup {
        ted create USAID HAL
    } -body {
        orggroup validate NONESUCH
    } -returnCodes {
        error
    } -cleanup {
        cleanup
    } -result {Invalid organization group, should be one of: USAID, HAL}

    test validate-2.1 {Valid name} -setup {
        ted create USAID HAL
    } -body {
        orggroup validate HAL
    } -cleanup {
        cleanup
    } -result {HAL}

    #-------------------------------------------------------------------
    # Cleanup

    cleanupTests
}

namespace delete ::athena_test::tests::

